
&НаКлиенте
Процедура ИмяМакетаНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	АдресФайла = "";
	ВыбранноеИмяФайла = "";
	
	Оповещение = Новый ОписаниеОповещения("ПослеПомещенияФайла", ЭтотОбъект);
	Попытка
		НачатьПомещениеФайла(Оповещение,,,,Новый УникальныйИдентификатор);
	Исключение
		Отказ = Истина;
		Сообщить("Не удалось загрузить файл по причине: " + ОписаниеОшибки());
	КонецПопытки;

КонецПроцедуры

&НаКлиенте
Процедура ПослеПомещенияФайла(Результат, Адрес, ВыбранноеИмяФайла, Параметры) Экспорт//, ПараметрыВыполненияКоманды)
	
	Если Адрес <> Неопределено Тогда
		АдресФайла = Адрес;
		Отказ = Ложь;
		ЧастиСтроки = СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок(ВыбранноеИмяФайла, "\");
		Объект.ИмяМакета = ?(ЧастиСтроки.Количество(), ЧастиСтроки[ЧастиСтроки.ВГраница()], "");
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ИмяМакетаОткрытие(Элемент, СтандартнаяОбработка)
	
	ЧастиСтроки = СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок(Объект.ИмяМакета, ".");
	Расширение = ?(ЧастиСтроки.Количество(), ЧастиСтроки[ЧастиСтроки.ВГраница()], "");
		
	СтандартнаяОбработка = Ложь;
	Если Найти(ВРег(Расширение), "DOC") Тогда
		ИмяФайла = ПолучитьИмяФайлаШаблона(Объект.Ссылка, Расширение);
		Если ЗначениеЗаполнено(ИмяФайла) Тогда				
			WordApplication = Новый COMОбъект("Word.Application");			
			WordApplication.Application.Visible = Истина;
			WordApplication.Documents.Open(ИмяФайла,0, 0);
			WordApplication.WindowState = 2;
			WordApplication.WindowState = 1;
			WordApplication.Activate();
			ДобавитьОбработчик WordApplication.DocumentBeforeSave, ОбработкаСобытияДокумента;
		КонецЕсли;
	ИначеЕсли Найти(ВРег(Расширение), "XLS") Тогда
		ИмяФайла = ПолучитьИмяФайлаШаблона(Объект.Ссылка, Расширение);
		Если ЗначениеЗаполнено(ИмяФайла) Тогда				
			ExcelApplication = Новый COMОбъект("Excel.Application");
			ExcelApplication.Application.Visible = Истина;
			Book = ExcelApplication.WorkBooks.Open(ИмяФайла);
			ExcelApplication.WindowState = -4140;			  
			ExcelApplication.WindowState = -4137;
			Book.Activate();
		КонецЕсли;
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ОбработкаСобытияДокумента(Док, SaveAsUI, Cancel)  
	ИмяФайла = Док.FullName;
КонецПроцедуры 

&НаКлиенте
Функция ПолучитьИмяФайлаШаблона(ИпотечныйБанк, Формат = "docx")
	
	ИмяФайлаШаблона = "";
	Если НЕ ИпотечныйБанк.Пустая() Тогда
		Макет = ВернутьШаблонПечатнойФормы(ИпотечныйБанк, Объект.ИпотекаВТБ24СоСниженнойСтавкой);
		Если НЕ Макет = Неопределено Тогда 
			ИмяФайлаШаблона = ПолучитьИмяВременногоФайла(Формат);
			Попытка
				Макет.Записать(ИмяФайлаШаблона);
			Исключение		
			КонецПопытки;
		КонецЕсли; 
	КонецЕсли;
	
	Возврат ИмяФайлаШаблона;
	
КонецФункции

&НаСервереБезКонтекста
Функция ВернутьШаблонПечатнойФормы(ИпотечныйБанк, ИпотекаВТБ24СоСниженнойСтавкой = Ложь)
		
	Возврат ?(ИпотекаВТБ24СоСниженнойСтавкой, ИпотечныйБанк.ПолучитьОбъект().МакетВТБ24СоСниженнойСтавкой.Получить(), ИпотечныйБанк.ПолучитьОбъект().Макет.Получить());

КонецФункции

&НаКлиенте
Процедура ИмяМакетаВТБ24СоСниженнойСтавкойНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	АдресФайлаВТБ24СоСниженнойСтавкой = "";
	ВыбранноеИмяФайла = "";
	
	Оповещение = Новый ОписаниеОповещения("ПослеПомещенияФайлаВТБ24", ЭтотОбъект);
	Попытка
		НачатьПомещениеФайла(Оповещение,,,,Новый УникальныйИдентификатор);
	Исключение
		Отказ = Истина;
		Сообщить("Не удалось загрузить файл по причине: " + ОписаниеОшибки());
	КонецПопытки;

КонецПроцедуры

&НаКлиенте
Процедура ПослеПомещенияФайлаВТБ24(ПослеПомещенияФайлаВТБ24, Адрес, ВыбранноеИмяФайла, Параметры) Экспорт
	
	Если Адрес <> Неопределено Тогда
		
		АдресФайлаВТБ24СоСниженнойСтавкой = Адрес;
		Отказ = Ложь;
		ЧастиСтроки = СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок(ВыбранноеИмяФайла, "\");
		Объект.ИмяМакетаВТБ24СоСниженнойСтавкой = ?(ЧастиСтроки.Количество(), ЧастиСтроки[ЧастиСтроки.ВГраница()], "");
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ИмяМакетаВТБ24СоСниженнойСтавкойОткрытие(Элемент, СтандартнаяОбработка)
		
	ЧастиСтроки = СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок(Объект.ИмяМакетаВТБ24СоСниженнойСтавкой, ".");
	Расширение = ?(ЧастиСтроки.Количество(), ЧастиСтроки[ЧастиСтроки.ВГраница()], "");
		
	СтандартнаяОбработка = Ложь;
	Если Найти(ВРег(Расширение), "DOC") Тогда
		ИмяФайла = ПолучитьИмяФайлаШаблона(Объект.Ссылка, Расширение);
		Если ЗначениеЗаполнено(ИмяФайла) Тогда				
			WordApplication = Новый COMОбъект("Word.Application");			
			WordApplication.Application.Visible = Истина;
			WordApplication.Documents.Open(ИмяФайла,0, 0);
			WordApplication.WindowState = 2;
			WordApplication.WindowState = 1;
			WordApplication.Activate();
			ДобавитьОбработчик WordApplication.DocumentBeforeSave, ОбработкаСобытияДокумента;
		КонецЕсли;
	ИначеЕсли Найти(ВРег(Расширение), "XLS") Тогда
		ИмяФайла = ПолучитьИмяФайлаШаблона(Объект.Ссылка, Расширение);
		Если ЗначениеЗаполнено(ИмяФайла) Тогда				
			ExcelApplication = Новый COMОбъект("Excel.Application");
			ExcelApplication.Application.Visible = Истина;
			Book = ExcelApplication.WorkBooks.Open(ИмяФайла);
			ExcelApplication.WindowState = -4140;			  
			ExcelApplication.WindowState = -4137;
			Book.Activate();
		КонецЕсли;
	КонецЕсли;


КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если НЕ Параметры.Ключ.Пустая() Тогда
		Об = РеквизитФормыВЗначение("Объект");
		Если ЗначениеЗаполнено(Об.ЛоготипБанка.Получить()) Тогда
			АдресКартинки = ПолучитьНавигационнуюСсылку(Объект.Ссылка, "ЛоготипБанка");
		КонецЕсли;
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)
	
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	//Если ЭтоАдресВременногоХранилища(АдресФайла) Тогда
	//	ТекущийОбъект.Макет = Новый ХранилищеЗначения(ПолучитьИзВременногоХранилища(АдресФайла), Новый СжатиеДанных(9));
	//КонецЕсли;
	//
	////<673518>, Басаргин (22.06.2017) {
	//Если ЭтоАдресВременногоХранилища(АдресФайлаВТБ24СоСниженнойСтавкой) Тогда
	//	ТекущийОбъект.МакетВТБ24СоСниженнойСтавкой = Новый ХранилищеЗначения(ПолучитьИзВременногоХранилища(АдресФайлаВТБ24СоСниженнойСтавкой), Новый СжатиеДанных(9));
	//КонецЕсли;
	////<673518> }
	
	Если ЭтоАдресВременногоХранилища(АдресКартинки) Тогда
		ТекущийОбъект.ЛоготипБанка = Новый ХранилищеЗначения(ПолучитьИзВременногоХранилища(АдресКартинки), Новый СжатиеДанных(9));
	КонецЕсли;

	//<Анкетирование>, Басаргин (17.11.2017) {
	Если ЗначениеЗаполнено(ТекущийОбъект.ИмяМакетаАнкеты) Тогда
		Если ЭтоАдресВременногоХранилища(АдресФайлаАнкеты) Тогда
			ТекущийОбъект.МакетАнкеты = Новый ХранилищеЗначения(ПолучитьИзВременногоХранилища(АдресФайлаАнкеты), Новый СжатиеДанных(9));
		КонецЕсли;	
	Иначе
		ТекущийОбъект.МакетАнкеты = Неопределено;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ТекущийОбъект.ИмяМакетаДопЛист) Тогда
		Если ЭтоАдресВременногоХранилища(АдресФайлаДоп) Тогда
			ТекущийОбъект.МакетДопЛист = Новый ХранилищеЗначения(ПолучитьИзВременногоХранилища(АдресФайлаДоп), Новый СжатиеДанных(9));
		КонецЕсли;
	Иначе
		ТекущийОбъект.МакетДопЛист = Неопределено;
	КонецЕсли;		
	//<Анкетирование> }
	
	//<796987>, Басаргин (03.04.2018) {	
	Для каждого СтрокаТЧ Из Объект.МакетыРасчетаСпецПрограмм Цикл
		//ИсходныйНомерСтроки = СтрокаТЧ.ИсходныйНомерСтроки;		
		СтрокаСпецПрограммы = ТекущийОбъект.МакетыРасчетаСпецПрограмм.Получить(СтрокаТЧ.НомерСтроки - 1);		
		Если НЕ СтрокаСпецПрограммы = Неопределено Тогда
			Если ЗначениеЗаполнено(СтрокаСпецПрограммы.ИмяМакетаСпецПрограммы) И ЭтоАдресВременногоХранилища(СтрокаТЧ.АдресМакетаРасчетаСпецПрограммы) Тогда
				СтрокаСпецПрограммы.МакетРасчета = Новый ХранилищеЗначения(ПолучитьИзВременногоХранилища(СтрокаТЧ.АдресМакетаРасчетаСпецПрограммы), Новый СжатиеДанных(9));
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;	
	//<796987> }
	
КонецПроцедуры
	
//<Анкетирование>, Басаргин (17.11.2017) {
&НаКлиенте
Процедура ИмяМакетаАнкетыНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)

	ОписаниеОповещения = Новый ОписаниеОповещения("ОбработатьВыборФайла", ЭтотОбъект, Новый Структура("ИмяРеквизитаМакета, Адрес", "ИмяМакетаАнкеты", "АдресФайлаАнкеты"));
	НачатьПомещениеФайла(ОписаниеОповещения, , Объект.ИмяМакетаАнкеты, Истина, УникальныйИдентификатор); 
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработатьВыборФайла(Результат, Адрес, ВыбранноеИмяФайла, ДополнительныеПараметры) Экспорт
	
	Если Не Результат ИЛИ НЕ ДополнительныеПараметры.Свойство("ИмяРеквизитаМакета") Тогда
		Возврат;
	КонецЕсли; 
	
	ЭтотОбъект[ДополнительныеПараметры.Адрес] = Адрес;
	ЧастиСтроки = СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок(ВыбранноеИмяФайла, "\");
	Объект[ДополнительныеПараметры.ИмяРеквизитаМакета] = ?(ЧастиСтроки.Количество(), ЧастиСтроки[ЧастиСтроки.ВГраница()], "");
	
КонецПроцедуры

&НаКлиенте
Процедура ИмяМакетаАнкетыОткрытие(Элемент, СтандартнаяОбработка)
	ОткрытьФайлАнкеты("МакетАнкеты", Объект.ИмяМакетаАнкеты);
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьФайлАнкеты(МакетАнкеты, ИмяМакетаАнкеты)

	ЧастиСтроки = СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок(ИмяМакетаАнкеты, ".");
	Расширение = ?(ЧастиСтроки.Количество(), ЧастиСтроки[ЧастиСтроки.ВГраница()], "");
		
	СтандартнаяОбработка = Ложь;
	ИмяФайла = ПолучитьИмяФайлаШаблонаАнкеты(Объект.Ссылка, МакетАнкеты, Расширение);
	Если Найти(ВРег(Расширение), "DOC") Тогда		
		Если ЗначениеЗаполнено(ИмяФайла) Тогда				
			WordApplication = Новый COMОбъект("Word.Application");			
			WordApplication.Application.Visible = Истина;
			WordApplication.Documents.Open(ИмяФайла,0, 0);
			WordApplication.WindowState = 2;
			WordApplication.WindowState = 1;
			WordApplication.Activate();
		КонецЕсли;
	ИначеЕсли Найти(ВРег(Расширение), "XLS") Тогда
		Если ЗначениеЗаполнено(ИмяФайла) Тогда				
			ExcelApplication = Новый COMОбъект("Excel.Application");
			ExcelApplication.Application.Visible = Истина;
			Book = ExcelApplication.WorkBooks.Open(ИмяФайла);
			ExcelApplication.WindowState = -4140;			  
			ExcelApplication.WindowState = -4137;
			Book.Activate();
		КонецЕсли;
	Иначе
		Если ЗначениеЗаполнено(ИмяФайла) Тогда	
			ЗапуститьПриложение(ИмяФайла);
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Функция ПолучитьИмяФайлаШаблонаАнкеты(ИпотечныйБанк, ИмяМакетаАнкеты, Формат = "docx")
	
	ИмяФайлаШаблона = "";
	
	#Если НЕ ВебКлиент Тогда
	Если НЕ ИпотечныйБанк.Пустая() Тогда
		Макет = ВернутьШаблонПечатнойФормыАнкеты(ИпотечныйБанк, ИмяМакетаАнкеты);
		Если НЕ Макет = Неопределено Тогда 
			ИмяФайлаШаблона = ПолучитьИмяВременногоФайла(Формат);
			Попытка
				Макет.Записать(ИмяФайлаШаблона);
			Исключение		
			КонецПопытки;
		КонецЕсли; 
	КонецЕсли;
	#КонецЕсли

	Возврат ИмяФайлаШаблона;
	
КонецФункции

&НаСервереБезКонтекста
Функция ВернутьШаблонПечатнойФормыАнкеты(ИпотечныйБанк, ИмяМакетаАнкеты)	
	Возврат ИпотечныйБанк.ПолучитьОбъект()[ИмяМакетаАнкеты].Получить();
КонецФункции

&НаКлиенте
Процедура ИмяМакетаДопЛистНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)

	ОписаниеОповещения = Новый ОписаниеОповещения("ОбработатьВыборФайла", ЭтотОбъект, Новый Структура("ИмяРеквизитаМакета, Адрес", "ИмяМакетаДопЛист", "АдресФайлаДоп"));
	НачатьПомещениеФайла(ОписаниеОповещения, , Объект.ИмяМакетаДопЛист, Истина, УникальныйИдентификатор); 
	
КонецПроцедуры

&НаКлиенте
Процедура ИмяМакетаДопЛистОткрытие(Элемент, СтандартнаяОбработка)
	ОткрытьФайлАнкеты("МакетДопЛист", Объект.ИмяМакетаДопЛист);
КонецПроцедуры

&НаКлиенте
Процедура ИмяМакетаАнкетыОчистка(Элемент, СтандартнаяОбработка)
	
	Объект.ИмяМакетаАнкеты = "";
	АдресФайлаАнкеты = "";
	
КонецПроцедуры

&НаКлиенте
Процедура ИмяМакетаДопЛистОчистка(Элемент, СтандартнаяОбработка)
	
	Объект.ИмяМакетаДопЛист = "";
	АдресФайлаДоп = "";

КонецПроцедуры

&НаКлиенте
Процедура ЗагрузитьОбновитьЛоготип(Команда)
	
	Режим 									= РежимДиалогаВыбораФайла.Открытие;
	ДиалогОткрытияФайла 					= Новый ДиалогВыбораФайла(Режим);
	ДиалогОткрытияФайла.ПолноеИмяФайла 		= "";
	ДиалогОткрытияФайла.Фильтр 				= ".png|*.png|.jpg|*.jpg|.gif|*.gif";
	ДиалогОткрытияФайла.МножественныйВыбор 	= Ложь;
	ДиалогОткрытияФайла.Заголовок 			= "Выберите файл логотипа банка";
	
	Если ДиалогОткрытияФайла.Выбрать() Тогда
		мФайл 				= ДиалогОткрытияФайла.ПолноеИмяФайла;
		ПоместитьНаСервер(Новый ДвоичныеДанные(мФайл));
		Модифицированность	= Истина;
	Иначе
		Предупреждение("Файл логотипа не выбран!", 60, "Не выбрано значение файла");
	КонецЕсли;
 	
КонецПроцедуры

&НаСервере
Процедура ОбновитьКартинкуФорма(ХранилищеКартинки)

	АдресКартинки = ПоместитьВоВременноеХранилище(ХранилищеКартинки.Получить(), УникальныйИдентификатор);
 
КонецПроцедуры 

&НаСервере
Процедура ПоместитьНаСервер(Данные = Неопределено)

	ХранилищеКартинки = ?(Данные = Неопределено, Неопределено, Новый ХранилищеЗначения(Данные));
	ОбновитьКартинкуФорма(ХранилищеКартинки);

КонецПроцедуры

//<796987>, Басаргин (03.04.2018) {
&НаКлиенте
Процедура МакетыРасчетаСпецПрограммИмяМакетаСпецПрограммыНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)

	ТекущиеДанные = Элементы.МакетыРасчетаСпецПрограмм.ТекущиеДанные;	
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	АдресМакетаРасчетаСпецПрограммы = ТекущиеДанные.АдресМакетаРасчетаСпецПрограммы;
	ИмяМакетаСпецПрограммы = ТекущиеДанные.ИмяМакетаСпецПрограммы;
		
	ПараметрыОповещения = Новый Структура("ИмяМакетаСпецПрограммы, АдресМакетаРасчетаСпецПрограммы", ИмяМакетаСпецПрограммы, АдресМакетаРасчетаСпецПрограммы); 
	
	Оповещение = Новый ОписаниеОповещения("ПослеПомещенияМакетаРасчетаСпецПрограммы", ЭтотОбъект, Новый Структура("ТекущиеДанные", ТекущиеДанные));
	Попытка
		НачатьПомещениеФайла(Оповещение, , , , УникальныйИдентификатор);
	Исключение
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Не удалось загрузить файл по причине: " + ОписаниеОшибки());
	КонецПопытки;	
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеПомещенияМакетаРасчетаСпецПрограммы(Результат, Адрес, ВыбранноеИмяФайла, ДополнительныеПараметры) Экспорт
	
	Если НЕ Результат Тогда
		Возврат;
	КонецЕсли ;
	
	Если Адрес <> Неопределено Тогда		
		ЧастиСтроки = СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок(ВыбранноеИмяФайла, "\");
		ИмяМакетаСпецПрограммы = ?(ЧастиСтроки.Количество(), ЧастиСтроки[ЧастиСтроки.ВГраница()], "");		
		ДополнительныеПараметры.ТекущиеДанные.АдресМакетаРасчетаСпецПрограммы = Адрес;
		ДополнительныеПараметры.ТекущиеДанные.ИмяМакетаСпецПрограммы = ИмяМакетаСпецПрограммы		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура МакетыРасчетаСпецПрограммИмяМакетаСпецПрограммыОткрытие(Элемент, СтандартнаяОбработка)

	ТекущаяСтрока = Элементы.МакетыРасчетаСпецПрограмм.ТекущаяСтрока;
	ТекущиеДанные = Элементы.МакетыРасчетаСпецПрограмм.ТекущиеДанные;	
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
		
	ЧастиСтроки = СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок(ТекущиеДанные.ИмяМакетаСпецПрограммы, ".");
	Расширение = ?(ЧастиСтроки.Количество(), ЧастиСтроки[ЧастиСтроки.ВГраница()], "");
		
	СтандартнаяОбработка = Ложь;
	Если Найти(ВРег(Расширение), "DOC") Тогда
		ИмяФайла = ПолучитьИмяФайлаШаблонаПоТекущейСпецПрограмме(Объект.Ссылка, ТекущаяСтрока, Расширение);
		Если ЗначениеЗаполнено(ИмяФайла) Тогда				
			WordApplication = Новый COMОбъект("Word.Application");			
			WordApplication.Application.Visible = Истина;
			WordApplication.Documents.Open(ИмяФайла,0, 0);
			WordApplication.WindowState = 2;
			WordApplication.WindowState = 1;
			WordApplication.Activate();
			ДобавитьОбработчик WordApplication.DocumentBeforeSave, ОбработкаСобытияДокумента;
		КонецЕсли;
	ИначеЕсли Найти(ВРег(Расширение), "XLS") ИЛИ Найти(ВРег(Расширение), "XLSX") Тогда
		ИмяФайла = ПолучитьИмяФайлаШаблонаПоТекущейСпецПрограмме(Объект.Ссылка, ТекущаяСтрока, Расширение);
		Если ЗначениеЗаполнено(ИмяФайла) Тогда				
			ExcelApplication = Новый COMОбъект("Excel.Application");
			ExcelApplication.Application.Visible = Истина;
			Book = ExcelApplication.WorkBooks.Open(ИмяФайла);
			ExcelApplication.WindowState = -4140;			  
			ExcelApplication.WindowState = -4137;
			Book.Activate();
		КонецЕсли;
	КонецЕсли;	
	
КонецПроцедуры

&НаКлиенте
Функция ПолучитьИмяФайлаШаблонаПоТекущейСпецПрограмме(ИпотечныйБанк, ТекущаяСтрока, Формат = "docx")
	
	ИмяФайлаШаблона = "";
	Если НЕ ИпотечныйБанк.Пустая() Тогда
		Макет = ВернутьШаблонПечатнойФормыПоТекущейСпецПрограмме(ИпотечныйБанк, ТекущаяСтрока);
		Если НЕ Макет = Неопределено Тогда 
			ИмяФайлаШаблона = ПолучитьИмяВременногоФайла(Формат);
			Попытка
				Макет.Записать(ИмяФайлаШаблона);
			Исключение		
			КонецПопытки;
		КонецЕсли; 
	КонецЕсли;
	
	Возврат ИмяФайлаШаблона;
	
КонецФункции

&НаСервереБезКонтекста
Функция ВернутьШаблонПечатнойФормыПоТекущейСпецПрограмме(ИпотечныйБанк, ТекущаяСтрока)
	
	БанкОбъект = ИпотечныйБанк.ПолучитьОбъект();
	Если НЕ БанкОбъект = Неопределено Тогда
		СтрокаТЧ = БанкОбъект.МакетыРасчетаСпецПрограмм[ТекущаяСтрока];
		Возврат СтрокаТЧ.МакетРасчета.Получить();
	КонецЕсли;

КонецФункции
//<796987> }
