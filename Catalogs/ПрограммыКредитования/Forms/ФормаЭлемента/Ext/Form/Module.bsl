//&НаКлиенте
//Перем Расположения, Красный, Зеленый;

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	Схемы.Параметры.УстановитьЗначениеПараметра("Ссылка", Объект.Ссылка);
	ДатаСреза = ТекущаяДата();
КонецПроцедуры

&НаКлиенте
Процедура СхемыПриАктивизацииСтроки(Элемент)
	ПодключитьОбработчикОжидания("НарисоватьСхему", 0.5,Истина);
КонецПроцедуры

&НаКлиенте
Процедура НарисоватьСхему()
	
	ТекущаяСхема =  Элементы.Схемы.ТекущиеДанные;
	
	Если ТекущаяСхема = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Схема = ТекущаяСхема.Ссылка;
	
	
	//Документы.УсловияПримененияСтавок.ЗаполнитьТабДокПоСхеме(Схема, ТабДок, Расположения);
	
	ПолучениеСхемыНаСервере(Схема);
	

	ОбновитьОтборы(Схема);
	
КонецПроцедуры

&НаСервере
Процедура ПолучениеСхемыНаСервере(Схема)
	ТабДок = Новый ТабличныйДокумент;
	
	ТД.Очистить();
	Документы.УсловияПримененияСтавок.ЗаполнитьТабДокПоСхеме(Схема, ТабДок, Расположения);
	Документы.УсловияПримененияСтавок.ОтобразитьЗначенияВТабДоке(Схема, ТабДок, Расположения, ДатаСреза);
	ТД.Вывести(ТабДок);
КонецПроцедуры

&НаСервере
Процедура ОбновитьОтборы(Схема) Экспорт
	
	Отборы.Настройки.Отбор.Элементы.Очистить();

	СКД = Справочники.СхемыУсловийСтавки.СоздатьСхемуКомпоновкиОтборы();
	
	АдресСхемыКомпоновкиДоступнныеПоля = ПоместитьВоВременноеХранилище(СКД, ЭтаФорма.УникальныйИдентификатор);
	
	ИсточникНастроекДоступнныеПоля = Новый ИсточникДоступныхНастроекКомпоновкиДанных(АдресСхемыКомпоновкиДоступнныеПоля);
	Отборы.Инициализировать(ИсточникНастроекДоступнныеПоля);
	НастройкиКомпоновкиДанных = Неопределено;
	
	НастройкиКомпоновкиДанных = Справочники.СхемыУсловийСтавки.ПолучитьНастройкиКомпоновкиДанныхОтборы(Схема);
	
	
	Если НЕ НастройкиКомпоновкиДанных = Неопределено Тогда
		Отборы.ЗагрузитьНастройки(НастройкиКомпоновкиДанных);
	КонецЕсли;
	
КонецПроцедуры


&НаКлиенте
Процедура ДатаСрезаПриИзменении(Элемент)
	НарисоватьСхему();
	РаскраситьГруппуПериодаДействия();
КонецПроцедуры

&НаКлиенте
Процедура Изменить(Команда)
	Схема = Элементы.Схемы.ТекущиеДанные.Ссылка;
	СуществующийДокумент = НайтиСуществующийДокумент(ДатаСреза, Схема);
	Если СуществующийДокумент<> Неопределено Тогда
		ОткрытьЗначение(СуществующийДокумент);
		Возврат;
	КонецЕсли;
	ПараметрыФормы = Новый Структура("Схема, ВидОперации, Дата", Схема, ПредопределенноеЗначение("Перечисление.ВидыОперацийУсловияПримененияСтавок.Установка"), ДатаСреза); 
	Форма = ПолучитьФорму("Документ.УсловияПримененияСтавок.Форма.ФормаДокумента",ПараметрыФормы);
	Форма.Открыть();
КонецПроцедуры

&НаСервереБезКонтекста
Функция НайтиСуществующийДокумент(ДатаРегистрации, Схема)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
		|	ИпотечныеСтавки.Регистратор
		|ИЗ
		|	РегистрСведений.ИпотечныеСтавки КАК ИпотечныеСтавки
		|ГДЕ
		|	ИпотечныеСтавки.Период = &ДатаРегистрации
		|	И ИпотечныеСтавки.СхемаУсловийСтавок = &Схема
		|	И ИпотечныеСтавки.Активен";
	
	Запрос.УстановитьПараметр("ДатаРегистрации", ДатаРегистрации);
	Запрос.УстановитьПараметр("Схема", Схема);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		Возврат ВыборкаДетальныеЗаписи.Регистратор;
	КонецЦикла;
		
КонецФункции


&НаКлиенте
Процедура Отменить(Команда)
	ПараметрыФормы = Новый Структура("Схема, ВидОперации, Дата",Элементы.Схемы.ТекущиеДанные.Ссылка, ПредопределенноеЗначение("Перечисление.ВидыОперацийУсловияПримененияСтавок.Отмена"), ДатаСреза); 
	Форма = ПолучитьФорму("Документ.УсловияПримененияСтавок.Форма.ФормаДокумента",ПараметрыФормы);
	Форма.Открыть();
КонецПроцедуры


&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	ТекущаяСхема =  Элементы.Схемы.ТекущиеДанные;
	
	Если ТекущаяСхема = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ТекущаяСхема = ТекущаяСхема.Ссылка;

	Если ИмяСобытия = "УсловияПримененияСтавокИзменение" И Параметр = ТекущаяСхема Тогда
		 НарисоватьСхему();
	 ИначеЕсли ИмяСобытия = "ЗаписьСхемыУсловийСтавки"  И Параметр = ТекущаяСхема Тогда
		 НарисоватьСхему();
		 ОбновитьОтборы(ТекущаяСхема);
	 КонецЕсли;
	 
КонецПроцедуры

&НаКлиенте
Процедура РаскраситьГруппуПериодаДействия()
	ТекДата = ДатаСреза;
	Если ТекДата >=Объект.НачалоДействия И ТекДата <= Объект.ОкончаниеДействия Тогда
		Элементы.ГруппаПериодДействия.ЦветФона = Зеленый;
	Иначе
		Элементы.ГруппаПериодДействия.ЦветФона = Красный;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	ОпределитьВидимостьЭлементов();
	РаскраситьГруппуПериодаДействия();
КонецПроцедуры

&НаКлиенте
Процедура НачалоДействияПриИзменении(Элемент)
	РаскраситьГруппуПериодаДействия();
КонецПроцедуры

&НаКлиенте
Процедура ОкончаниеДействияПриИзменении(Элемент)
	Если Объект.ОкончаниеДействия < Объект.НачалоДействия Тогда
		Объект.ОкончаниеДействия = '00010101';
		Сообщить("Дата окончания не может быть меньше даты начала действия!");
	КонецЕсли;
	
	РаскраситьГруппуПериодаДействия();
КонецПроцедуры

&НаКлиенте
Процедура СоздатьСхему(Команда)
	Форма = ПолучитьФорму("Справочник.СхемыУсловийСтавки.Форма.ФормаЭлемента", Новый Структура("Владелец",Объект.Ссылка));
	Форма.Открыть();	
КонецПроцедуры

&НаКлиенте
Процедура БессрочнаяПриИзменении(Элемент)
	Если Объект.Бессрочная Тогда
		Объект.ОкончаниеДействия = '39991231';
	Иначе
		Объект.ОкончаниеДействия = '00010101';
	КонецЕсли;
	ОпределитьВидимостьЭлементов();
	РаскраситьГруппуПериодаДействия();

КонецПроцедуры

&НаКлиенте
Процедура ОпределитьВидимостьЭлементов()
	
		Элементы.ОкончаниеДействия.Видимость = НЕ Объект.Бессрочная;
	
КонецПроцедуры

Красный = Новый Цвет(255, 204, 153); 
Зеленый = Новый Цвет(204, 255, 204);