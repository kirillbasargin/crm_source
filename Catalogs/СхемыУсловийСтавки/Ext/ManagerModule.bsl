Функция СоздатьСхемуКомпоновки() Экспорт 
	
    ЗапросКомпоновки =  СформироватьЗапросКомпоновкиДляПрограммируемыхУсловий();
    ТекстЗапроса = ПолучитьТекстЗапросаСхемыКомпоновки(ЗапросКомпоновки);
	СхемаКомпоновкиДанных = Новый СхемаКомпоновкиДанных;
	ИсточникДанных = СхемаКомпоновкиДанных.ИсточникиДанных.Добавить();
	ИсточникДанных.Имя = "ИсточникДанных1";
	ИсточникДанных.СтрокаСоединения="";
	ИсточникДанных.ТипИсточникаДанных = "Local";
	НаборДанных = СхемаКомпоновкиДанных.НаборыДанных.Добавить(Тип("НаборДанныхЗапросСхемыКомпоновкиДанных"));
	НаборДанных.Запрос = ТекстЗапроса;
	НаборДанных.Имя = "Набор1";
	НаборДанных.ИсточникДанных = "ИсточникДанных1"; 
	
    ПапкаПолейНабора = НаборДанных.Поля.Добавить(Тип("ПапкаПолейНабораДанныхСхемыКомпоновкиДанных"));
    ПапкаПолейНабора.Заголовок    = "Параметры";
    ПапкаПолейНабора.ПутьКДанным  = "Параметры";
    
    ПараметрНабора = СхемаКомпоновкиДанных.Параметры.Добавить();
    ПараметрНабора.Использование            = ИспользованиеПараметраКомпоновкиДанных.Всегда;
    ПараметрНабора.Имя                      = "СсылкаДоговор";
    ПараметрНабора.ВключатьВДоступныеПоля   = Ложь;
	
	ПараметрНабора = СхемаКомпоновкиДанных.Параметры.Добавить();
	ПараметрНабора.Использование            = ИспользованиеПараметраКомпоновкиДанных.Всегда;
	ПараметрНабора.Имя                      = "СписокПраметров";
	ПараметрНабора.ВключатьВДоступныеПоля   = Ложь;
	
	ПараметрНабора = СхемаКомпоновкиДанных.Параметры.Добавить();
	ПараметрНабора.Использование            = ИспользованиеПараметраКомпоновкиДанных.Всегда;
	ПараметрНабора.Имя                      = "МассивСсылок";
	ПараметрНабора.ВключатьВДоступныеПоля   = Ложь;
    
    
	Для Каждого Поле из ЗапросКомпоновки.Поля Цикл 
		ПолеНабора = НаборДанных.Поля.Добавить(Тип("ПолеНабораДанныхСхемыКомпоновкиДанных"));
		ПолеНабора.Поле 		= Поле.Поле;
		ПолеНабора.Заголовок    = Поле.ПараметрНаименование + " = " + Поле.Представление;
		ПолеНабора.ПутьКДанным	= Поле.ПараметрНаименование + "."+Поле.Поле; 	
        ПолеНабора.ТипЗначения  = Поле.ТипЗначения;
		        
        ПараметрНабора = СхемаКомпоновкиДанных.Параметры.Добавить();
        ПараметрНабора.Использование            = ИспользованиеПараметраКомпоновкиДанных.Авто;
        ПараметрНабора.Имя                      = Поле.Поле;
        ПараметрНабора.ВключатьВДоступныеПоля   = Ложь;
        ПараметрНабора.ТипЗначения              = Поле.ТипЗначения;
        ПараметрНабора.ОграничениеИспользования = Истина;

    КонецЦикла;
    
    
    
    
	Возврат  СхемаКомпоновкиДанных;

КонецФункции  

Функция СоздатьСхемуКомпоновкиОтборы() Экспорт 
	
    ЗапросКомпоновки =  СформироватьЗапросКомпоновкиДляОтборов();
    ТекстЗапроса = ПолучитьТекстЗапросаСхемыКомпоновкиОтборы(ЗапросКомпоновки);
	СхемаКомпоновкиДанных = Новый СхемаКомпоновкиДанных;
	ИсточникДанных = СхемаКомпоновкиДанных.ИсточникиДанных.Добавить();
	ИсточникДанных.Имя = "ИсточникДанных1";
	ИсточникДанных.СтрокаСоединения="";
	ИсточникДанных.ТипИсточникаДанных = "Local";
	НаборДанных = СхемаКомпоновкиДанных.НаборыДанных.Добавить(Тип("НаборДанныхЗапросСхемыКомпоновкиДанных"));
	НаборДанных.Запрос = ТекстЗапроса;
	НаборДанных.Имя = "Набор1";
	НаборДанных.ИсточникДанных = "ИсточникДанных1"; 
	
    ПапкаПолейНабора = НаборДанных.Поля.Добавить(Тип("ПапкаПолейНабораДанныхСхемыКомпоновкиДанных"));
    ПапкаПолейНабора.Заголовок    = "Параметры";
    ПапкаПолейНабора.ПутьКДанным  = "Параметры";
    
    ПараметрНабора = СхемаКомпоновкиДанных.Параметры.Добавить();
    ПараметрНабора.Использование            = ИспользованиеПараметраКомпоновкиДанных.Всегда;
    ПараметрНабора.Имя                      = "СсылкаДоговор";
    ПараметрНабора.ВключатьВДоступныеПоля   = Ложь;
	
	ПараметрНабора = СхемаКомпоновкиДанных.Параметры.Добавить();
	ПараметрНабора.Использование            = ИспользованиеПараметраКомпоновкиДанных.Всегда;
	ПараметрНабора.Имя                      = "СписокПараметров";
	ПараметрНабора.ВключатьВДоступныеПоля   = Ложь;
	
	ПараметрНабора = СхемаКомпоновкиДанных.Параметры.Добавить();
	ПараметрНабора.Использование            = ИспользованиеПараметраКомпоновкиДанных.Всегда;
	ПараметрНабора.Имя                      = "МассивСсылок";
	ПараметрНабора.ВключатьВДоступныеПоля   = Ложь;
	
    
	Для Каждого Поле из ЗапросКомпоновки.Поля Цикл 
		ПолеНабора = НаборДанных.Поля.Добавить(Тип("ПолеНабораДанныхСхемыКомпоновкиДанных"));
		ПолеНабора.Поле 		= Поле.Поле;
		ПолеНабора.Заголовок    = Поле.Параметры.Наименование;// + " = " + Поле.Представление;
		ПолеНабора.ПутьКДанным	= Поле.Поле; 	
        ПолеНабора.ТипЗначения  = Поле.ТипЗначения;
		ПараметрВыбора = ПолеНабора.ПараметрыРедактирования.Элементы.Найти("ПараметрыВыбора");
		НовыйОтбор=ПараметрВыбора.Значение.Добавить();
		НовыйОтбор.Имя = "Отбор.Владелец";
		НовыйОтбор.Значение = Поле.Параметры;
		ПараметрВыбора.Использование = Истина; 
		
		ПараметрВыбора = ПолеНабора.ПараметрыРедактирования.Элементы.Найти("ФормаВыбора");
		ПараметрВыбора.Значение = "Справочник.ПараметрыПримененияСтавок_Значения.Форма.ФормаВыбораОдноЗначение";
		ПараметрВыбора.Использование = Истина; 
		
		
        ПараметрНабора = СхемаКомпоновкиДанных.Параметры.Добавить();
        ПараметрНабора.Использование            = ИспользованиеПараметраКомпоновкиДанных.Авто;
        ПараметрНабора.Имя                      = Поле.Поле;
        ПараметрНабора.ВключатьВДоступныеПоля   = Ложь;
        ПараметрНабора.ТипЗначения              = Поле.ТипЗначения;
        ПараметрНабора.ОграничениеИспользования = Истина;

	КонецЦикла;
	
    
    
    
	Возврат  СхемаКомпоновкиДанных;

КонецФункции  

Функция ПолучитьТекстЗапросаСхемыКомпоновки(ЗапросКомпоновкиДляПрограммируемыхУсловий)
	
	ТекстЗапроса  = ЗапросКомпоновкиДляПрограммируемыхУсловий.ТекстЗапроса;
    ТекстЗапроса  = ТекстЗапроса + Символы.ПС + 
                                    "ВЫБРАТЬ
                                	|	Параметры.*
                                	|ИЗ
                                	|Параметры КАК Параметры";
     	

	 Возврат ТекстЗапроса;              
                                    
 КонецФункции   
 
 
Функция ПолучитьТекстЗапросаСхемыКомпоновкиОтборы(ЗапросКомпоновкиДляПрограммируемыхУсловий)
	
	ТекстДополнения = "";

	ТекстЗапроса  = ЗапросКомпоновкиДляПрограммируемыхУсловий.ТекстЗапроса;
    ТекстЗапроса  = ТекстЗапроса + Символы.ПС + 
                                    "ВЫБРАТЬ
                                	|	Проект.Ссылка КАК Проект,
									|	Фазы.Ссылка КАК Фаза,
									|	ВЫРАЗИТЬ(""Корпус"" КАК СТРОКА(10)) КАК Корпус
									|   //ДополнительныеПараметры                     
                                	|	, Параметры.*
                                	|ИЗ
                                	|	Справочник.Проекты КАК Проект
									|   ПОЛНОЕ СОЕДИНЕНИЕ Справочник.Фазы КАК ФАЗЫ ПО ИСТИНА
								
                                	|		{ЛЕВОЕ СОЕДИНЕНИЕ Параметры КАК Параметры
                                	|		ПО (ИСТИНА)}
                                    | {ГДЕ
                                    |   Проект.Ссылка В (&МассивСсылок)}";
	
	
	ТаблицаДанныеОЗаемщиках = Документы.РасчетИпотеки.СоздатьДокумент().ДанныеОЗаемщиках.Выгрузить();
	ТаблицаДанныеОЗаемщиках.Добавить();
	ДанныеОЗаемщике = ТаблицаДанныеОЗаемщиках[0];
	ТипЧисло = Тип("Число");
	
	
	Для Каждого Стр Из ТаблицаДанныеОЗаемщиках.Колонки Цикл
		Если ТипЗнч(ДанныеОЗаемщике[Стр.Имя]) = ТипЧисло Тогда
			Если Стр.Имя = "НомерСтроки" Тогда
				Продолжить;
			КонецЕсли;
			ТекстДополнения = ТекстДополнения + Символы.ПС + ", ВЫРАЗИТЬ (&" + Стр.Имя + " КАК Число) КАК " + Стр.Имя;
		КонецЕсли;
	КонецЦикла;
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "//ДополнительныеПараметры", ТекстДополнения);
 	
	Возврат ТекстЗапроса;              
                                    
КонецФункции 

Функция СформироватьЗапросКомпоновкиДляПрограммируемыхУсловий() Экспорт 
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ПараметрыПримененияСтавок.Ссылка КАК Параметр,
	|	ПараметрыПримененияСтавок_Значения.Ссылка КАК Ссылка,
	|	ПараметрыПримененияСтавок_Значения.Наименование,
	|	ПараметрыПримененияСтавок.ТипЗначения,
	|	ПараметрыПримененияСтавок.Наименование КАК ПараметрНаименование
	|ИЗ
	|	ПланВидовХарактеристик.ПараметрыПримененияСтавок КАК ПараметрыПримененияСтавок
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ПараметрыПримененияСтавок_Значения КАК ПараметрыПримененияСтавок_Значения
	|		ПО (ПараметрыПримененияСтавок_Значения.Владелец = ПараметрыПримененияСтавок.Ссылка)
	|ГДЕ
	|	НЕ ПараметрыПримененияСтавок.ПометкаУдаления";
	
	
	
	Выборка = Запрос.Выполнить().Выбрать();
	Запрос = "";
	Поля = Новый Массив;
    СоответствиеПолей = Новый Соответствие;
	
	Если Выборка.Количество()>0 Тогда  
		Запрос = "ВЫБРАТЬ
		| 	%СПИCОКПОЛЕЙ%
        |	ПОМЕСТИТЬ Параметры
        |   ИЗ
        |	%СПИСОКТАБЛИЦ%
        |   ;
        |
        |   ////////////////////////////////////////////////////////////////////////////////";
		СПИCОКПОЛЕЙ = "";
		СПИСОКТАБЛИЦ = "";
		сч=1;
		Пока Выборка.Следующий() Цикл 
			УникальныйИдентификатор = СтрЗаменить(Строка(Выборка.Ссылка.УникальныйИдентификатор()),"-","_");
			Поля.Добавить(Новый Структура("Поле,Представление,Параметры, ТипЗначения, ПараметрНаименование","Поле"+УникальныйИдентификатор,СокрЛП(Выборка.Наименование),Выборка.Ссылка, Выборка.ТипЗначения, Выборка.ПараметрНаименование));
            СоответствиеПолей.Вставить("Поле"+УникальныйИдентификатор, Выборка.Ссылка); 
			Поле = "Поле"+УникальныйИдентификатор+".Поле КАК Поле"+УникальныйИдентификатор+","+Символы.ПС;
            
            Если сч > 1 Тогда 
                Таблица = "{ПОЛНОЕ СОЕДИНЕНИЕ ("
            Иначе
                Таблица = "(";
            КонецЕсли;
                
            Таблица = Таблица + "ВЫБРАТЬ &Поле"+УникальныйИдентификатор+" КАК Поле ";
            
            Таблица = Таблица + ") КАК Поле"+УникальныйИдентификатор + Символы.ПС;
            Если сч > 1 Тогда 
                Таблица = Таблица + " ПО (ИСТИНА)}"
            КонецЕсли;
            
            Таблица = Таблица +","+Символы.ПС;
            
            СПИCОКПОЛЕЙ 	= СПИCОКПОЛЕЙ 	+ Поле;
            СПИСОКТАБЛИЦ 	= СПИСОКТАБЛИЦ  + Таблица;
			сч= сч+1;
		КонецЦикла;
		СПИCОКПОЛЕЙ 	= Лев(СПИCОКПОЛЕЙ,СтрДлина(СПИCОКПОЛЕЙ)-2); //удалил последнюю запятую
        СПИСОКТАБЛИЦ    = Лев(СПИСОКТАБЛИЦ,СтрДлина(СПИСОКТАБЛИЦ)-2); //удалил последнюю запятую
		Запрос = СтрЗаменить(Запрос,"%СПИCОКПОЛЕЙ%",СПИCОКПОЛЕЙ);
        Запрос = СтрЗаменить(Запрос,"%СПИСОКТАБЛИЦ%",СПИСОКТАБЛИЦ);
	КонецЕсли;
	Возврат Новый Структура("ТекстЗапроса, Поля, СоответствиеПолей",Запрос, Поля, СоответствиеПолей);
КонецФункции

Функция ПолучитьВсеКомбинации(ПараметрыВыбора) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = "";
	i=1;
	Для Каждого Стр Из ПараметрыВыбора Цикл
		МассивЗначений = МассивЗначений(Стр.Значение);
		Запрос.Текст = Запрос.Текст + 
		СтрЗаменить("ВЫБРАТЬ
		|	Массив1.Ссылка КАК Значение
		|ПОМЕСТИТЬ Массив1
		|ИЗ
		| Справочник.ПараметрыПримененияСтавок_Значения КАК Массив1
		| ГДЕ 
		|	Массив1.Ссылка В (&Массив1)
		|;" + Символы.ПС, "Массив1", "Массив"+i);
		
	Запрос.УстановитьПараметр("Массив"+i, МассивЗначений);
	i=i+1;	
		
	КонецЦикла;
	
	КоличествоМассивов = i-1;
	
	ТекстДополнения= 
	"ВЫБРАТЬ
	|	Массив1.Значение
	|//текст замены №1
	|ИЗ
	|	Массив1 КАК Массив1
	|//текст замены №2";
	
	Дополнение1 = "";
	Дополнение2 = "";
	Для i=2 По КоличествоМассивов Цикл
		Дополнение1 = Дополнение1 + Символы.ПС + ", Массив"+ i +".Значение";
		Дополнение2 = Дополнение2 + Символы.ПС + "ПОЛНОЕ СОЕДИНЕНИЕ Массив" + i + " КАК Массив" + i + " ПО (ИСТИНА)";
	КонецЦикла;
	
	ТекстДополнения = СтрЗаменить(ТекстДополнения, "//текст замены №1", Дополнение1);
	ТекстДополнения = СтрЗаменить(ТекстДополнения, "//текст замены №2", Дополнение2);
	
	Запрос.Текст = Запрос.Текст + ТекстДополнения;
	
	Результат = Запрос.Выполнить().Выгрузить();
	
	Возврат Результат;
	
КонецФункции

Функция МассивЗначений(МассивЗначений)
	Массив = Новый Массив;
	Для Каждого Стр Из МассивЗначений Цикл
		Массив.Добавить(Стр.Значение);
	КонецЦикла;
	Возврат Массив;
КонецФункции

Функция ПолучитьЗначенияУсловий(Схема, Расположение, Параметр) Экспорт
	
	Перем Строки, Колонки, Расположения, ТабДок;
	 	
	
	Документы.УсловияПримененияСтавок.ЗаполнитьТабДокПоСхеме(Схема, ТабДок, Расположения, Строки, Колонки);

	Область = ТабДок.Область(Расположение);
	Колонка = Область.Лево;
	Строка = Область.Верх;
	
	Для Каждого Стр Из Расположения Цикл
		Если Стр.Значение.Колонка = Колонка И Стр.Значение.Строка = Строка Тогда
			Возврат Стр;
		КонецЕсли;
	КонецЦикла;

	
КонецФункции


Процедура ДоступныеСтрокиКолонки()
	
	
КонецПроцедуры

Функция СформироватьЗапросКомпоновкиДляОтборов() Экспорт 
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ПараметрыПримененияСтавок.Ссылка КАК Ссылка,
	|	ПараметрыПримененияСтавок.ТипЗначения,
	|	ПараметрыПримененияСтавок.Наименование КАК Наименование
	|ИЗ
	|	ПланВидовХарактеристик.ПараметрыПримененияСтавок КАК ПараметрыПримененияСтавок
	|ГДЕ
	|	НЕ ПараметрыПримененияСтавок.ПометкаУдаления И НЕ ПараметрыПримененияСтавок.Диапазон ИЛИ ПараметрыПримененияСтавок.Ссылка В(&Исключения)";
	
	Исключения = Новый Массив;
	Исключения.Добавить(ПланыВидовХарактеристик.ПараметрыПримененияСтавок.Площадь);
	
	Запрос.УстановитьПараметр("Исключения", Исключения);
	
	Выборка = Запрос.Выполнить().Выбрать();
	Запрос = "";
	Поля = Новый Массив;
    СоответствиеПолей = Новый Соответствие;
	
	Если Выборка.Количество()>0 Тогда  
		Запрос = "ВЫБРАТЬ
		| 	%СПИCОКПОЛЕЙ%
        |	ПОМЕСТИТЬ Параметры
        |   ИЗ
        |	%СПИСОКТАБЛИЦ%
        |   ;
        |
        |   ////////////////////////////////////////////////////////////////////////////////";
		СПИCОКПОЛЕЙ = "";
		СПИСОКТАБЛИЦ = "";
		сч=1;
		Пока Выборка.Следующий() Цикл 
			УникальныйИдентификатор = СтрЗаменить(Строка(Выборка.Ссылка.УникальныйИдентификатор()),"-","_");
			Поля.Добавить(Новый Структура("Поле,Представление,Параметры, ТипЗначения","Поле"+УникальныйИдентификатор,СокрЛП(Выборка.Наименование),Выборка.Ссылка, Выборка.ТипЗначения));
            СоответствиеПолей.Вставить("Поле"+УникальныйИдентификатор, Выборка.Ссылка); 
			Поле = "Поле"+УникальныйИдентификатор+".Поле КАК Поле"+УникальныйИдентификатор+","+Символы.ПС;
            
            Если сч > 1 Тогда 
                Таблица = "{ПОЛНОЕ СОЕДИНЕНИЕ ("
            Иначе
                Таблица = "(";
            КонецЕсли;
                
            Таблица = Таблица + "ВЫБРАТЬ &Поле"+УникальныйИдентификатор+" КАК Поле ";
            
            Таблица = Таблица + ") КАК Поле"+УникальныйИдентификатор + Символы.ПС;
            Если сч > 1 Тогда 
                Таблица = Таблица + " ПО (ИСТИНА)}"
            КонецЕсли;
            
            Таблица = Таблица +","+Символы.ПС;
            
            СПИCОКПОЛЕЙ 	= СПИCОКПОЛЕЙ 	+ Поле;
            СПИСОКТАБЛИЦ 	= СПИСОКТАБЛИЦ  + Таблица;
			сч= сч+1;
		КонецЦикла;
		СПИCОКПОЛЕЙ 	= Лев(СПИCОКПОЛЕЙ,СтрДлина(СПИCОКПОЛЕЙ)-2); //удалил последнюю запятую
        СПИСОКТАБЛИЦ    = Лев(СПИСОКТАБЛИЦ,СтрДлина(СПИСОКТАБЛИЦ)-2); //удалил последнюю запятую
		Запрос = СтрЗаменить(Запрос,"%СПИCОКПОЛЕЙ%",СПИCОКПОЛЕЙ);
        Запрос = СтрЗаменить(Запрос,"%СПИСОКТАБЛИЦ%",СПИСОКТАБЛИЦ);
	КонецЕсли;
	Возврат Новый Структура("ТекстЗапроса, Поля, СоответствиеПолей",Запрос, Поля, СоответствиеПолей);
КонецФункции

Функция ПолучитьНастройкиКомпоновкиДанныхОтборы(Условие) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Отборы.ХранилищеНастроекКомпоновкиДанныхОтборы КАК ХранилищеНастроекКомпоновкиДанных
	|ИЗ
	|	Справочник.СхемыУсловийСтавки КАК Отборы
	|ГДЕ
	|	Отборы.Ссылка = &Условие";
	
	Запрос.УстановитьПараметр("Условие", Условие);
	
	РезультатЗапроса = Запрос.Выполнить();
	Выборка = РезультатЗапроса.Выбрать();
	Если Выборка.Следующий() Тогда
		Возврат Выборка.ХранилищеНастроекКомпоновкиДанных.Получить();
	КонецЕсли;  	
	
	Возврат Неопределено;
	
КонецФункции
