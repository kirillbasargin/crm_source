
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	АдресФайлаДоп = ПоместитьВоВременноеХранилище(ВернутьШаблонПечатнойФормы());
	
	Если ЭтоАдресВременногоХранилища(АдресФайлаДоп) Тогда
		ИмяМакетаДопЛист = "Абс Недвижимость заявл о согласии на передачу в банк персональных данных.doc";	//test
	КонецЕсли;
	
КонецПроцедуры

//&НаСервере
//Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
//	
//	Если ЭтоАдресВременногоХранилища(АдресФайлаДоп) Тогда
//		ЗаписатьШаблонПечатнойФормы(АдресФайлаДоп);
//	КонецЕсли;	

//КонецПроцедуры

&НаСервереБезКонтекста
Процедура ЗаписатьШаблонПечатнойФормы(АдресФайлаДоп)
		
	Константы.МакетСоглашенияНаОбработкуПерсональныхДанных.Установить(Новый ХранилищеЗначения(ПолучитьИзВременногоХранилища(АдресФайлаДоп), Новый СжатиеДанных(9)));

КонецПроцедуры

&НаКлиенте
Процедура ИмяМакетаДопЛистНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	ОписаниеОповещения = Новый ОписаниеОповещения("ОбработатьВыборФайлаДопЛист", ЭтотОбъект);
	НачатьПомещениеФайла(ОписаниеОповещения, , , Истина, УникальныйИдентификатор); 

КонецПроцедуры

&НаКлиенте
Процедура ОбработатьВыборФайлаДопЛист(Результат, Адрес, ВыбранноеИмяФайла, ДополнительныеПараметры) Экспорт
	
	Если Не Результат Тогда
		Возврат;
	КонецЕсли; 
	
	АдресФайлаДоп = Адрес;
	ЧастиСтроки = СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок(ВыбранноеИмяФайла, "\");
	//СтрРазделить(ВыбранноеИмяФайла, "\", Ложь);
	ИмяМакетаДопЛист = ?(ЧастиСтроки.Количество(), ЧастиСтроки[ЧастиСтроки.ВГраница()], "");
	
КонецПроцедуры

&НаКлиенте
Процедура ИмяМакетаДопЛистОткрытие(Элемент, СтандартнаяОбработка)
	
	ЧастиСтроки = СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок(ИмяМакетаДопЛист, ".");
	//СтрРазделить(Объект.ИмяМакета, ".", Ложь);
	Расширение = ?(ЧастиСтроки.Количество(), ЧастиСтроки[ЧастиСтроки.ВГраница()], "");
		
	СтандартнаяОбработка = Ложь;
	Если Найти(ВРег(Расширение), "DOC") Тогда
		ИмяФайла = ПолучитьИмяФайлаШаблона(Расширение);
		Если ЗначениеЗаполнено(ИмяФайла) Тогда				
			WordApplication = Новый COMОбъект("Word.Application");			
			WordApplication.Application.Visible = Истина;
			WordApplication.Documents.Open(ИмяФайла,0, 0);
			WordApplication.WindowState = 2;
			WordApplication.WindowState = 1;
			WordApplication.Activate();
		КонецЕсли;
	ИначеЕсли Найти(ВРег(Расширение), "XLS") Тогда
		ИмяФайла = ПолучитьИмяФайлаШаблона(Расширение);
		Если ЗначениеЗаполнено(ИмяФайла) Тогда				
			ExcelApplication = Новый COMОбъект("Excel.Application");
			ExcelApplication.Application.Visible = Истина;
			Book = ExcelApplication.WorkBooks.Open(ИмяФайла);
			ExcelApplication.WindowState = -4140;			  
			ExcelApplication.WindowState = -4137;
			Book.Activate();
		КонецЕсли;
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Функция ПолучитьИмяФайлаШаблона(Формат = "docx")
	
	ИмяФайлаШаблона = "";
	#Если НЕ ВебКлиент Тогда
		Макет = ВернутьШаблонПечатнойФормы();
		Если НЕ Макет = Неопределено Тогда 
			ИмяФайлаШаблона = ПолучитьИмяВременногоФайла(Формат);
			Попытка
				Макет.Записать(ИмяФайлаШаблона);
			Исключение		
			КонецПопытки;
		КонецЕсли; 
	#КонецЕсли
	
	Возврат ИмяФайлаШаблона;
	
КонецФункции


&НаСервереБезКонтекста
Функция ВернутьШаблонПечатнойФормы()
		
	Возврат Константы.МакетСоглашенияНаОбработкуПерсональныхДанных.Получить().Получить();

КонецФункции

&НаКлиенте
Процедура Save(Команда)
	Если ЭтоАдресВременногоХранилища(АдресФайлаДоп) Тогда
		ЗаписатьШаблонПечатнойФормы(АдресФайлаДоп);
	КонецЕсли;	
КонецПроцедуры
