
// Открывает предопределенный вариант отчета
//
// Параметры:
//  Вариант  - Структура - описание варианта отчета:
//     * ИмяОтчета           - Строка - имя отчета
//     * КлючВарианта        - Строка - ключ варианта отчета
//
Процедура ОткрытьВариантОтчета(Вариант, Отбор = Неопределено) Экспорт
	
	ПараметрыОткрытия = Новый Структура;
	ПараметрыОткрытия.Вставить("КлючВарианта", Вариант.КлючВарианта);
	
	Уникальность = "Отчет." + Вариант.ИмяОтчета + "/КлючВарианта." + Вариант.КлючВарианта;
	
	ПараметрыОткрытия.Вставить("КлючПараметровПечати",        Уникальность);
	ПараметрыОткрытия.Вставить("КлючСохраненияПоложенияОкна", Уникальность);
	
	Если Отбор <> Неопределено Тогда
		ПараметрыОткрытия.Вставить("Отбор", Отбор);
	КонецЕсли;
	
	ОткрытьФорму("Отчет." + Вариант.ИмяОтчета + ".Форма", ПараметрыОткрытия, Неопределено, Уникальность);
	
КонецПроцедуры

Процедура ОбработкаРасшифровки(ЭтаФорма, Элемент, Расшифровка, СтандартнаяОбработка) Экспорт
	
	//Примеры использования
	
	//Если ЭтаФорма.КлючУникальности = "Отчет.ДинамикаЗадолженностиПокупателей/КлючВарианта.ДинамикаЗадолженности" Тогда
	//				
	//ИначеЕсли ЭтаФорма.ИмяФормы = "Отчет.КонтрольЗаполненияКонтактнойИнформации.Форма" Тогда
	//	
	//	СтандартнаяОбработка = Ложь;
	//	
	//	ЗначениеКЛ = УправлениеНебольшойФирмойОтчетыВызовСервера.ПолучитьЗначениеРасшифровки("КонтактноеЛицо", Расшифровка, ЭтаФорма.ОтчетДанныеРасшифровки);
	//	Если ЗначениеКЛ <> Неопределено Тогда
	//		ОткрытьФорму("Справочник.КонтактныеЛица.ФормаОбъекта", Новый Структура("Ключ", ЗначениеКЛ), ЭтаФорма);
	//	Иначе
	//		ЗначениеКА = УправлениеНебольшойФирмойОтчетыВызовСервера.ПолучитьЗначениеРасшифровки("Контрагент", Расшифровка, ЭтаФорма.ОтчетДанныеРасшифровки);
	//		Если ЗначениеКА <> Неопределено Тогда
	//			ОткрытьФорму("Справочник.Контрагенты.ФормаОбъекта", Новый Структура("Ключ", ЗначениеКА), ЭтаФорма);
	//		КонецЕсли;
	//	КонецЕсли;
	//	
	//КонецЕсли
	
	ЗначениеОС = CRMОтчетыВызовСервера.ПолучитьЗначениеРасшифровкиБезАнализа("ОбъектСтроительства", Расшифровка, ЭтаФорма.ОтчетДанныеРасшифровки);	
	ЗначениеОН = CRMОтчетыВызовСервера.ПолучитьЗначениеРасшифровкиБезАнализа("ОбъектНедвижимости", 	Расшифровка, ЭтаФорма.ОтчетДанныеРасшифровки);	
	
	Если ЭтаФорма.НастройкиОтчета.ПолноеИмя = "Отчет.Квартирограмма" 
		И НЕ ЭтаФорма.ФормаПодбора
		И СтрНайти(ЭтаФорма.КлючТекущегоВарианта, "ЗУ") Тогда
		СтандартнаяОбработка = Ложь;		
		ЗначениеОН = CRMОтчетыВызовСервера.ПолучитьЗначениеРасшифровкиБезАнализа("ОбъектНедвижимости", Расшифровка, ЭтаФорма.ОтчетДанныеРасшифровки);			
		Если ЗначениеЗаполнено(ЗначениеОН) Тогда
			ПоказатьЗначение(, ЗначениеОН);	
		КонецЕсли;		
	//EXTCODE Шумилин Сергей 15.03.2017 {{ --->
	ИначеЕсли ЭтаФорма.НастройкиОтчета.ПолноеИмя = "Отчет.Квартирограмма"
			И ЭтаФорма.ФормаПодбора Тогда
		
		СтандартнаяОбработка = Ложь;
		
		ЗначениеОН = CRMОтчетыВызовСервера.ПолучитьЗначениеРасшифровкиБезАнализа("ОбъектНедвижимости", Расшифровка, ЭтаФорма.ОтчетДанныеРасшифровки);	
		
		Если ЗначениеЗаполнено(ЗначениеОН) Тогда
			
			Если СтрНайти(ЭтаФорма.КлючТекущегоВарианта, "ЗУ") Тогда
				ПоказатьЗначение(, ЗначениеОН);
			КонецЕсли;
			
			Если ЭтаФорма.РезультатПодбора.НайтиСтроки(Новый Структура("ОбъектНедвижимости", ЗначениеОН)).Количество() > 0 Тогда
				Возврат;			
			КонецЕсли;
			
			НоваяСтрока = ЭтаФорма.РезультатПодбора.Добавить();
			НоваяСтрока.ОбъектНедвижимости 	= ЗначениеОН;
			НоваяСтрока.ОбъектСтроительства = ЗначениеОС;
			
			//<872403>, Басаргин (26.09.2018) {						
			СпециальноеПредложение = CRMОтчетыВызовСервера.ПолучитьЗначениеРасшифровкиБезАнализа("_СпециальноеПредложение", Расшифровка, ЭтаФорма.ОтчетДанныеРасшифровки);
			Статус = CRMОтчетыВызовСервера.ПолучитьЗначениеРасшифровкиБезАнализа("_Статус", Расшифровка, ЭтаФорма.ОтчетДанныеРасшифровки);			
			БронированиеДомКлик = CRMОтчетыВызовСервера.ПолучитьЗначениеРасшифровкиБезАнализа("_БронированиеДомКлик", Расшифровка, ЭтаФорма.ОтчетДанныеРасшифровки);
			
			НомерКвартирыБТИ = CRMОтчетыВызовСервера.ПолучитьЗначениеРасшифровкиБезАнализа("НомерКвартирыБТИ", Расшифровка, ЭтаФорма.ОтчетДанныеРасшифровки);
			НомерКвартиры = CRMОтчетыВызовСервера.ПолучитьЗначениеРасшифровкиБезАнализа("НомерКвартиры", Расшифровка, ЭтаФорма.ОтчетДанныеРасшифровки);
			ПлощадьБТИ = CRMОтчетыВызовСервера.ПолучитьЗначениеРасшифровкиБезАнализа("ПлощадьБТИ", Расшифровка, ЭтаФорма.ОтчетДанныеРасшифровки);
			Площадь = CRMОтчетыВызовСервера.ПолучитьЗначениеРасшифровкиБезАнализа("Площадь", Расшифровка, ЭтаФорма.ОтчетДанныеРасшифровки);

			НоваяСтрока.НомерКвартиры = НомерКвартиры; //?(ЗначениеЗаполнено(НомерКвартирыБТИ), НомерКвартирыБТИ, НомерКвартиры);
			НоваяСтрока.ТипДома = CRMОтчетыВызовСервера.ПолучитьЗначениеРасшифровкиБезАнализа("_ВидМатериала", Расшифровка, ЭтаФорма.ОтчетДанныеРасшифровки);
			НоваяСтрока.КоличествоКомнат = CRMОтчетыВызовСервера.ПолучитьЗначениеРасшифровкиБезАнализа("_КоличествоКомнат", Расшифровка, ЭтаФорма.ОтчетДанныеРасшифровки);
			НоваяСтрока.Этаж = CRMОтчетыВызовСервера.ПолучитьЗначениеРасшифровкиБезАнализа("_Этаж", Расшифровка, ЭтаФорма.ОтчетДанныеРасшифровки);
			НоваяСтрока.Секция = CRMОтчетыВызовСервера.ПолучитьЗначениеРасшифровкиБезАнализа("Подъезд_Ссылка", Расшифровка, ЭтаФорма.ОтчетДанныеРасшифровки);
			НоваяСтрока.Площадь = Площадь; //?(ЗначениеЗаполнено(ПлощадьБТИ), ПлощадьБТИ, Площадь);
			НоваяСтрока.Отделка = CRMОтчетыВызовСервера.ПолучитьЗначениеРасшифровкиБезАнализа("_Отделка", Расшифровка, ЭтаФорма.ОтчетДанныеРасшифровки);
			НоваяСтрока.Стоимость = CRMОтчетыВызовСервера.ПолучитьЗначениеРасшифровкиБезАнализа("Стоимость", Расшифровка, ЭтаФорма.ОтчетДанныеРасшифровки);
			НоваяСтрока.СтоимостьСУчетомСкидки = CRMОтчетыВызовСервера.ПолучитьЗначениеРасшифровкиБезАнализа("СтоимостьСУчетомСкидки", Расшифровка, ЭтаФорма.ОтчетДанныеРасшифровки);
			НоваяСтрока.Цена = CRMОтчетыВызовСервера.ПолучитьЗначениеРасшифровкиБезАнализа("ЦенаЗаМетр", Расшифровка, ЭтаФорма.ОтчетДанныеРасшифровки);		
			НоваяСтрока.МаксимальнаяСкидка = CRMОтчетыВызовСервера.ПолучитьЗначениеРасшифровкиБезАнализа("МаксимальнаяСкидка", Расшифровка, ЭтаФорма.ОтчетДанныеРасшифровки);
			
			Если БронированиеДомКлик Тогда 
				НоваяСтрока.ЦветФона = Новый Цвет(204, 255, 204);	
			ИначеЕсли Статус = ПредопределенноеЗначение("Перечисление.СтатусыОбъектовНедвижимости.Забронирован") Тогда				
				НоваяСтрока.ЦветФона = Новый Цвет(204, 255, 255);
			ИначеЕсли СпециальноеПредложение Тогда
				НоваяСтрока.ЦветФона = Новый Цвет(255, 204, 204);
			Иначе
				НоваяСтрока.ЦветФона = Новый Цвет(255, 255, 255);
			КонецЕсли;			
			//<872403> }
			
		КонецЕсли;
		
	ИначеЕсли ЭтаФорма.НастройкиОтчета.ПолноеИмя = "Отчет.Квартирограмма"
														И Не ЭтаФорма.ФормаПодбора Тогда
		СтандартнаяОбработка = Ложь;	
		
		ПараметрыФормы = Новый Структура;
		ПараметрыФормы.Вставить("СформироватьПриОткрытии",		Истина);
		ПараметрыФормы.Вставить("Отбор",						Новый Структура("ОбъектСтроительства",ЗначениеОС));
		ПараметрыФормы.Вставить("ОбъектНедвижимостиВыделение",	ЗначениеОН);
					
		ОткрытьФорму("Отчет.Шахматка.Форма.ФормаОтчета", ПараметрыФормы, ЭтаФорма, Новый УникальныйИдентификатор());
		
	КонецЕсли;
	//EXTCODE Шумилин Сергей 15.03.2017 <--- }} 
	
КонецПроцедуры

Процедура ОбработкаДополнительнойРасшифровки(ЭтаФорма, Элемент, Расшифровка, СтандартнаяОбработка) Экспорт
	
	//EXTCODE Шумилин Сергей 15.03.2017 {{ --->
	Если ЭтаФорма.НастройкиОтчета.ПолноеИмя = "Отчет.Квартирограмма" Тогда
		
		СтандартнаяОбработка = Ложь;
		
		//ЗначениеОС = CRMОтчетыВызовСервера.ПолучитьЗначениеРасшифровкиБезАнализа("ОбъектСтроительства", Расшифровка, ЭтаФорма.ОтчетДанныеРасшифровки);	
		//ЗначениеОН = CRMОтчетыВызовСервера.ПолучитьЗначениеРасшифровкиБезАнализа("ОбъектНедвижимости", Расшифровка, ЭтаФорма.ОтчетДанныеРасшифровки);	
		//
		//ПараметрыФормы = Новый Структура;
		//ПараметрыФормы.Вставить("СформироватьПриОткрытии",		Истина);
		//ПараметрыФормы.Вставить("Отбор",						Новый Структура("ОбъектСтроительства",ЗначениеОС));
		//ПараметрыФормы.Вставить("ОбъектНедвижимостиВыделение",	ЗначениеОН);
		//			
		//ОткрытьФорму("Отчет.Шахматка.Форма.ФормаОтчета", ПараметрыФормы, ЭтаФорма, Новый УникальныйИдентификатор());
		
		//++++++++++++++++++++++++++++++++++++++++\\
		ОбработкаРасшифровки 	= Новый ОбработкаРасшифровкиКомпоновкиДанных(ЭтаФорма.ОтчетДанныеРасшифровки, Новый ИсточникДоступныхНастроекКомпоновкиДанных(ЭтаФорма.Отчет));
		ОписаниеОповещения		= Новый ОписаниеОповещения("ПоказатьВыборДействияЗавершение", ЭтаФорма);
		ОбработкаРасшифровки.ПоказатьВыборДействия(ОписаниеОповещения,Расшифровка);
		
	КонецЕсли;
	//EXTCODE Шумилин Сергей 15.03.2017 <--- }} 
	
КонецПроцедуры

Процедура СкопироватьОтбор(КомпоновщикПриемник, КомпоновщикИсточник) Экспорт
	
	НастройкиПриемник = КомпоновщикПриемник.Настройки;
	НастройкиИсточник = КомпоновщикИсточник.Настройки;
	ПользовательскиеНастройкиИсточник = КомпоновщикИсточник.ПользовательскиеНастройки;
	
	Для Каждого ЭлементОтбора Из НастройкиИсточник.Отбор.Элементы Цикл
		Если ЗначениеЗаполнено(ЭлементОтбора.ИдентификаторПользовательскойНастройки) Тогда
			
			Для каждого ПользовательскаяНастройка Из ПользовательскиеНастройкиИсточник.Элементы Цикл
				Если ПользовательскаяНастройка.ИдентификаторПользовательскойНастройки = ЭлементОтбора.ИдентификаторПользовательскойНастройки Тогда
					Если ТипЗнч(ПользовательскаяНастройка) = Тип("ЭлементОтбораКомпоновкиДанных")
						И ПользовательскаяНастройка.Использование Тогда
						
						ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора(
							НастройкиПриемник.Отбор,
							Строка(ЭлементОтбора.ЛевоеЗначение),
							ПользовательскаяНастройка.ПравоеЗначение,
							ПользовательскаяНастройка.ВидСравнения,
							,
							Истина);
						
					КонецЕсли;
					Прервать;
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;
	КонецЦикла;
	
	КомпоновщикПриемник.ЗагрузитьНастройки(НастройкиПриемник);

КонецПроцедуры

Процедура ПослеФормированияОтчета(ФормаОтчета, ОтчетСформирован) Экспорт

	Если Не ОтчетСформирован Тогда
	
		Возврат;	
	
	КонецЕсли;
	
	Если СтрНайти(ФормаОтчета.КлючСохраненияПоложенияОкна, "ОтчетПоИсточникамРекламы") > 0 
			ИЛИ СтрНайти(ФормаОтчета.КлючСохраненияПоложенияОкна, "ОтчетПоВзаимодействиям") > 0 Тогда
		ФормаОтчета.ОтчетТабличныйДокумент.ПоказатьУровеньГруппировокСтрок(0);	
	КонецЕсли;	

КонецПроцедуры




