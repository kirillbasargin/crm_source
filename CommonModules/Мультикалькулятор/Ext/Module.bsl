
Функция СериализоватьОтбор(пОтбор) Экспорт 
	
	ЗаписьXML = Новый ЗаписьXML();
	ЗаписьXML.УстановитьСтроку();
	ЗаписьXML.ЗаписатьНачалоЭлемента("Отборы");
	Для Каждого цЭлементОтбора Из пОтбор.Элементы Цикл
		СериализаторXDTO.ЗаписатьXML(ЗаписьXML, цЭлементОтбора);
	КонецЦикла;
	ЗаписьXML.ЗаписатьКонецЭлемента();
	Возврат ЗаписьXML.Закрыть();
	
КонецФункции // СериализоватьОтбор()

Процедура ДесериализоватьОтбор(пНастройки_Отбор, пОтбор) Экспорт 
	
	пОтбор.Элементы.Очистить();
	Если пНастройки_Отбор <> Неопределено Тогда
		ЧтениеXML = Новый ЧтениеXML();
		ЧтениеXML.УстановитьСтроку(пНастройки_Отбор);
		ЧтениеXML.ПерейтиКСодержимому();
		Если ЧтениеXML.ТипУзла = ТипУзлаXML.НачалоЭлемента И ЧтениеXML.Имя = "Отборы" Тогда
			ЧтениеXML.Прочитать();
			Пока ЧтениеXML.ТипУзла <> ТипУзлаXML.КонецЭлемента И ЧтениеXML.Имя <> "Отборы" Цикл
				ПолеОтбораXML = СериализаторXDTO.ПрочитатьXML(ЧтениеXML);
				ПолеОтбора = пОтбор.Элементы.Добавить(ТипЗнч(ПолеОтбораXML));
				СкопироватьЭлементыОтбораРекурсивно(ПолеОтбораXML, ПолеОтбора);
				//ПолеОтбора.Поле = ПолеОтбораXML.Поле;
			КонецЦикла;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры // ДесериализоватьОтбор()

Процедура СкопироватьЭлементыОтбораРекурсивно(пОтборОткуда, пОтборКуда)
	
	ЗаполнитьЗначенияСвойств(пОтборКуда, пОтборОткуда);
	Если ТипЗнч(пОтборОткуда) = Тип("ГруппаЭлементовОтбораКомпоновкиДанных") Тогда
		Для Каждого ЭлементОтбора Из пОтборОткуда.Элементы Цикл
			НовыйЭлементОтбора = пОтборКуда.Элементы.Добавить(ТипЗнч(ЭлементОтбора));
			СкопироватьЭлементыОтбораРекурсивно(ЭлементОтбора, НовыйЭлементОтбора);
		КонецЦикла;
	КонецЕсли;
	
КонецПроцедуры // СкопироватьЭлементыОтбораРекурсивно()


Функция СериализоватьМакетКомпоновкиДанных(МакетКомпоновкиДанных) Экспорт 
	
	ЗаписьXML = Новый ЗаписьXML();
	ЗаписьXML.УстановитьСтроку();
	ЗаписьXML.ЗаписатьНачалоЭлемента("МакетКомпоновкиДанных");
	СериализаторXDTO.ЗаписатьXML(ЗаписьXML, МакетКомпоновкиДанных);	
	ЗаписьXML.ЗаписатьКонецЭлемента();
	Возврат ЗаписьXML.Закрыть();
	
КонецФункции // СериализоватьМакетКомпоновкиДанных()

Процедура ДесериализоватьМакетКомпоновкиДанных(СериализованноеЗначение, МакетКомпоновкиДанных) Экспорт 
	
	
	Если СериализованноеЗначение <> Неопределено Тогда
		ЧтениеXML = Новый ЧтениеXML();
		ЧтениеXML.УстановитьСтроку(СериализованноеЗначение);
		ЧтениеXML.ПерейтиКСодержимому();
		Если ЧтениеXML.ТипУзла = ТипУзлаXML.НачалоЭлемента И ЧтениеXML.Имя = "МакетКомпоновкиДанных" Тогда
			ЧтениеXML.Прочитать();
			МакетКомпоновкиДанных = СериализаторXDTO.ПрочитатьXML(ЧтениеXML);
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры // ДесериализоватьОтбор()


Функция СериализоватьМассив(Массив) Экспорт 
	
	ЗаписьXML = Новый ЗаписьXML();
	ЗаписьXML.УстановитьСтроку();
	ЗаписьXML.ЗаписатьНачалоЭлемента("Массив");
	СериализаторXDTO.ЗаписатьXML(ЗаписьXML, Массив);	
	ЗаписьXML.ЗаписатьКонецЭлемента();
	Возврат ЗаписьXML.Закрыть();
	
КонецФункции // СериализоватьМакетКомпоновкиДанных()

Процедура ДесериализоватьМассив(СериализованноеЗначение, Массив) Экспорт 
	
	
	Если СериализованноеЗначение <> Неопределено Тогда
		ЧтениеXML = Новый ЧтениеXML();
		ЧтениеXML.УстановитьСтроку(СериализованноеЗначение);
		ЧтениеXML.ПерейтиКСодержимому();
		Если ЧтениеXML.ТипУзла = ТипУзлаXML.НачалоЭлемента И ЧтениеXML.Имя = "Массив" Тогда
			ЧтениеXML.Прочитать();
			Массив = СериализаторXDTO.ПрочитатьXML(ЧтениеXML);
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры // ДесериализоватьОтбор()

