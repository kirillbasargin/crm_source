Функция Парсер(пСтрока)
   Возврат Новый Структура("Строка,Длина,Указатель,Символ",пСтрока,СтрДлина(пСтрока),0,"");
КонецФункции

Функция ПрочитатьСимвол(пПарсер,пКоличество=1)
   пПарсер.Символ = "";
   Если пПарсер.Указатель >= пПарсер.Длина Тогда
       Возврат Ложь;
   КонецЕсли;
   пПарсер.Символ = Сред(пПарсер.Строка,пПарсер.Указатель + 1,пКоличество); 
   пПарсер.Указатель = пПарсер.Указатель + пКоличество;
   Возврат Истина;
КонецФункции

Функция ПрочитатьОбъект(пПарсер)
   
   лОбъект = Новый Структура;
   
   Для К = 1 По 1 Цикл
       Пока Истина Цикл
           Если не ПропуститьРазделители(пПарсер) Тогда
               ВызватьИсключение "Ошибка разбора";
           КонецЕсли;
           Если не ТестСимвол(пПарсер,"""") Тогда
               ВызватьИсключение "Ошибка разбора";
           КонецЕсли;
           ПрочитатьСимвол(пПарсер);
           лКлюч = ПрочитатьСтроку(пПарсер);
           Если не ПропуститьРазделители(пПарсер) Тогда
               ВызватьИсключение "Ошибка разбора";
           КонецЕсли;
           Если не ТестСимвол(пПарсер,":") Тогда
               ВызватьИсключение "Ошибка разбора";
           КонецЕсли;
           ПрочитатьСимвол(пПарсер);
           лЗначение = ПрочитатьЗначение(пПарсер);
           лОбъект.Вставить(лКлюч,лЗначение);
           Если не ПропуститьРазделители(пПарсер) Тогда
               ВызватьИсключение "Ошибка разбора";
           КонецЕсли;
           Если ТестСимвол(пПарсер,",") Тогда
               ПрочитатьСимвол(пПарсер);
               Продолжить;
           КонецЕсли;
           Если ТестСимвол(пПарсер,"}") Тогда
               Прервать;
           КонецЕсли;
           ВызватьИсключение "Ошибка разбора";
       КонецЦикла;
       
   КонецЦикла;
   
   Возврат лОбъект;
   
КонецФункции

Функция ПрочитатьМассив(пПарсер)
   
   лМассив = Новый Массив;
   
   Для К = 1 По 1 Цикл
       Пока Истина Цикл
           лЗначение = ПрочитатьЗначение(пПарсер);
           лМассив.Добавить(лЗначение);
           Если не ПропуститьРазделители(пПарсер) Тогда
               ВызватьИсключение "Ошибка разбора";
           КонецЕсли;
           Если ТестСимвол(пПарсер,",") Тогда
               Продолжить;
           КонецЕсли;
           Если ТестСимвол(пПарсер,"]") Тогда
               Прервать;
           КонецЕсли;
           ВызватьИсключение "Ошибка разбора";
       КонецЦикла;
   КонецЦикла;
   
   Возврат лМассив;
   
КонецФункции

Функция ПрочитатьЗначение(пПарсер)
   
   Если не ПропуститьРазделители(пПарсер) Тогда;
       ВызватьИсключение "Ошибка разбора";
   КонецЕсли;
   
   Если ТестСимвол(пПарсер,"{") Тогда
       ПрочитатьСимвол(пПарсер);
       Возврат ПрочитатьОбъект(пПарсер);
   КонецЕсли;
   
   Если ТестСимвол(пПарсер,"[") Тогда
       ПрочитатьСимвол(пПарсер);
       Возврат ПрочитатьМассив(пПарсер);
   КонецЕсли;
   
   Если ТестСимвол(пПарсер,"""") Тогда
       ПрочитатьСимвол(пПарсер);
       Возврат ПрочитатьСтроку(пПарсер);
   КонецЕсли;
   
   Если ТестСимвол(пПарсер,"1234567890+-.eE",2) Тогда
       Возврат ПрочитатьЧисло(пПарсер);
   КонецЕсли;
   
   Если ТестСимвол(пПарсер,"true",1) Тогда
       ПрочитатьСимвол(пПарсер,4);
       Возврат Истина;
   КонецЕсли;
   
   Если ТестСимвол(пПарсер,"false",1) Тогда
       ПрочитатьСимвол(пПарсер,5);
       Возврат Ложь;
   КонецЕсли;
   
   Если ТестСимвол(пПарсер,"null",1) Тогда
       ПрочитатьСимвол(пПарсер,4);
       Возврат Неопределено;
   КонецЕсли;
   
   ВызватьИсключение "Ошибка разбора";
   
КонецФункции

Функция ПрочитатьСтроку(пПарсер)
   лСтр = "";
   Пока пПарсер.Символ <> """" Цикл
	   Если Не пПарсер.Символ = "\" Тогда
		   лСтр = лСтр + пПарсер.Символ;
       Иначе
           Если не ПрочитатьСимвол(пПарсер) Тогда
               Прервать;
           КонецЕсли;
           Если пПарсер.Символ = "n" Тогда
               лСтр = лСтр + Символы.ПС;
           ИначеЕсли пПарсер.Символ = "r" Тогда
               лСтр = лСтр + Символы.ВК;
           ИначеЕсли пПарсер.Символ = """" Тогда
               лСтр = лСтр + """";
           ИначеЕсли пПарсер.Символ = "'" Тогда
               лСтр = лСтр + "'";
           Иначе
           КонецЕсли;
       КонецЕсли;
       Если не ПрочитатьСимвол(пПарсер) Тогда
           Прервать;
       КонецЕсли;
   КонецЦикла;
   ПрочитатьСимвол(пПарсер);
   Возврат лСтр;
КонецФункции

Функция ПрочитатьЧисло(пПарсер)
	лЦифрыСтр = "+-1234567890.eE";
	лЧислоСтр = "0";
	Пока Найти(лЦифрыСтр,пПарсер.Символ) > 0 Цикл
		//<484742>, Басаргин К.И.(19.04.2016) {
		лЧислоСтр = лЧислоСтр + пПарсер.Символ;
		Если не ПрочитатьСимвол(пПарсер) Тогда
			Прервать;
		КонецЕсли;		
		//<484742> };
	КонецЦикла;
	//<484742>, Басаргин К.И., 30.03.2016 12:23:54 {
	темпЧисло = "";
	Для й = 1 По СтрДлина(лЧислоСтр) Цикл
		Если Найти("0123456789", Сред(лЧислоСтр, й, 1)) Тогда
			темпЧисло = темпЧисло + Сред(лЧислоСтр, й, 1);	
		КонецЕсли;			
	КонецЦикла;
	Возврат Число(темпЧисло); //лЧислоСтр //СтрЗаменить(лЧислоСтр, "}", " ")  
	//<484742> }
КонецФункции

Функция ПропуститьРазделители(пПарсер)
   лРазделителиСтр = " " + Символы.ВК + Символы.ВТаб + Символы.НПП + Символы.ПС + Символы.ПФ + Символы.Таб;
   Пока Найти(лРазделителиСтр,пПарсер.Символ) > 0 Цикл
       Если не ПрочитатьСимвол(пПарсер) Тогда
           Возврат Ложь;
       КонецЕсли;
   КонецЦикла;
   Возврат Истина;
КонецФункции

Функция ТестСимвол(пПарсер,пСимвол,пРежим=1)
   // проверяет, начинается ли строка с указанной подстроки 
   // Режим:
   // 0 - без учета регистра
   // 1 - с учетом регистра
   // 2 - входжение первого символа в подстроку
   Если пРежим = 0 Тогда
       лДлина = СтрДлина(пСимвол);
       лНачалоСтроки = Сред(пПарсер.Строка,пПарсер.Указатель,лДлина);
       Возврат (ВРег(лНачалоСтроки) = ВРег(пСимвол));
   ИначеЕсли пРежим = 1 Тогда
       лДлина = СтрДлина(пСимвол);
       лНачалоСтроки = Сред(пПарсер.Строка,пПарсер.Указатель,лДлина);
       Возврат (лНачалоСтроки = пСимвол);
   ИначеЕсли пРежим = 2 Тогда
       лНачалоСтроки = Сред(пПарсер.Строка,пПарсер.Указатель,1);
       Возврат (Найти(пСимвол,лНачалоСтроки) > 0);
   КонецЕсли;
КонецФункции

Функция UnJSON(пСтрока,пЗаменитьКавычки=Ложь) Экспорт
   
   лСтрока = пСтрока;
   Если пЗаменитьКавычки Тогда
       лСтрока = СтрЗаменить(пСтрока,"'","""");
   КонецЕсли;
   
   Попытка
       лПарсер = Парсер(лСтрока);
       ПрочитатьСимвол(лПарсер);
       лЗначение = ПрочитатьЗначение(лПарсер);
   Исключение
       Возврат Неопределено;
   КонецПопытки;
   
   Возврат лЗначение;
   
КонецФункции

Функция JSON(Значение) Экспорт
      Разделитель="";
      
      ТипЗн=ТипЗнч(Значение);

      Если ТипЗн=Тип("Строка") Тогда
            Стр=""""+Маскировать(Значение)+""""

      ИначеЕсли ТипЗн=Тип("Число") ИЛИ ТипЗнч(Значение)=Тип("Булево") Тогда
            Стр=XMLСтрока(Значение)

      ИначеЕсли ТипЗн=Тип("Дата") Тогда
            Стр=""""+?(ЗначениеЗаполнено(Значение),XMLСтрока(Значение),"")+""""

      ИначеЕсли ТипЗн=Тип("Структура") Тогда
            Стр="{";
            Для Каждого Параметр Из Значение Цикл
                  Стр=Стр+Разделитель+Символы.ПС+""""+Параметр.Ключ+""":"+JSON(Параметр.Значение);
                  Разделитель=","
            КонецЦикла;
            Стр=Стр+Символы.ПС+"}";

      ИначеЕсли ТипЗн=Тип("Массив") Тогда
            Стр="[";
            Для Каждого Элемент Из Значение Цикл
                  Стр=Стр+Разделитель+Символы.ПС+JSON(Элемент);
                  Разделитель=","
            КонецЦикла;
            Стр=Стр+Символы.ПС+"]";

      ИначеЕсли ТипЗн=Тип("ТаблицаЗначений") Тогда
            Колонки=Значение.Колонки;
            Массив=Новый Массив;
            Для Каждого СтрокаТЗ Из Значение Цикл
                  Структура=Новый Структура;
                  Для Каждого Колонка Из Колонки Цикл
                        Структура.Вставить(Колонка.Имя,СтрокаТЗ[Колонка.Имя])
                  КонецЦикла;
                  Массив.Добавить(Структура);
            КонецЦикла;
            Стр=JSON(Массив)

      ИначеЕсли Значение=Неопределено Тогда
            Стр="null"

      Иначе
            Стр=""""+Маскировать(Значение)+""""
      КонецЕсли;

      Возврат Стр
КонецФункции
  
Функция Маскировать(Знач Стр) Экспорт
      Стр=СтрЗаменить(Стр,Символы.ПС,"\n");
      Стр=СтрЗаменить(Стр,Символы.ВК,"\r");
      Стр=СтрЗаменить(Стр,"""","\""");
      Стр=СтрЗаменить(Стр,"'","\'");
      Возврат Стр
КонецФункции

Процедура Тест() Экспорт
   
   Структура = Новый Структура("sIP,sDefaultGateway,nNode,nRing",1,2,3);
   Структура.Вставить("Error",Новый Структура("Code,Description",0,"OK"));
   лСтр = JSON(Структура);
   Сообщить("============================================");
   Сообщить(лСтр);
   Сообщить("============================================");
   Структура = UnJSON(лСтр);
   Сообщить(Структура);
   Сообщить(ЗначениеВСтрокуВнутр(Структура));
   
КонецПроцедуры