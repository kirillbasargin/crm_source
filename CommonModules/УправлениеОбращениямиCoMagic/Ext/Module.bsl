
#Область ПрограммныйИнтерфейс

Процедура ПолучениеОбращенийCoMagic() Экспорт
	
	ПараметрыСайтов = ПолучитьПараметрыПодключенияComagic();
	Если НЕ ПараметрыСайтов = Неопределено И ПараметрыСайтов.Количество() Тогда
		НайденыеКлиенты_МВТ = УправлениеЗаявкамиНаЗвонок.ПодготовитьТаблицуКлиентов();	
		Звонки_Avaya = ПолучитьТаблицуЗвонковAvaya(ПараметрыСайтов[0].НижняяГраница, ПараметрыСайтов[0].ВерхняяГраница);
		Для каждого СтрокаПараметров Из ПараметрыСайтов Цикл				
			ЗагрузитьДанныеCoMagic(СтрокаПараметров, НайденыеКлиенты_МВТ, Звонки_Avaya);			
		КонецЦикла; 
	КонецЕсли; 
	
КонецПроцедуры

Процедура УправляемаяЗагрузкаДанныхCoMagic(ПериодНачало, ПериодОкончание, ПараметрыСайтов, НайденыеКлиенты_МВТ) Экспорт
	
	Звонки_Avaya = Неопределено;
	Для каждого СтрокаПараметров Из ПараметрыСайтов Цикл						
		ЗагрузитьДанныеCoMagic(СтрокаПараметров, НайденыеКлиенты_МВТ, Звонки_Avaya, ПериодНачало, ПериодОкончание); 			
	КонецЦикла; 
	
КонецПроцедуры

Процедура ЗагрузитьДанныеCoMagic(ПараметрыСайта, НайденыеКлиенты_МВТ = Неопределено, Звонки_Avaya = Неопределено, ПериодНачало = Неопределено, ПериодОкончание = Неопределено) Экспорт
	
	ОшибкиЗагрузки = "";
	ЗагруженоЗаписей = 0;	
	СтруктураНачалаЗагрузки = СоздатьЗаписьНачалоСтатистикиЗагрузкиCoMagic(ПараметрыСайта.Ссылка, ОшибкиЗагрузки, ?(ПериодНачало = Неопределено, ПараметрыСайта.ПериодНачало, ПериодНачало), ?(ПериодОкончание = Неопределено, ПараметрыСайта.ПериодОкончание, ПериодОкончание));
	Если СтруктураНачалаЗагрузки = Неопределено Тогда
		Сообщить("Не удалось начать запись статистики загрузки.");
		Возврат;	
	КонецЕсли; 
	
	Если НайденыеКлиенты_МВТ = Неопределено Тогда
		НайденыеКлиенты_МВТ = УправлениеЗаявкамиНаЗвонок.ПодготовитьТаблицуКлиентов();	
	КонецЕсли; 
	
	Если Звонки_Avaya = Неопределено Тогда
		Звонки_Avaya = ПолучитьТаблицуЗвонковAvaya(?(ПериодНачало = Неопределено, ПараметрыСайта.ПериодНачало, ПериодНачало), ?(ПериодОкончание = Неопределено, ПараметрыСайта.ПериодОкончание, ПериодОкончание));
	КонецЕсли; 
	
	Попытка
		КлючСессии = CoMagicRestAPI.ПодключитьсяКCoMagic(ПараметрыСайта.Login, ОбщегоНазначения.ПрочитатьДанныеИзБезопасногоХранилища(ПараметрыСайта.Ссылка)); //ПараметрыСайта.Password
	Исключение
		ОшибкиЗагрузки = ОшибкиЗагрузки + "Не удалось подключиться к сервису CoMagic. " + ОписаниеОшибки() + Символы.ПС + ". Проверьте параметры подключения сайта " + ПараметрыСайта;
	КонецПопытки; 

	Если ЗначениеЗаполнено(КлючСессии) И ОшибкиЗагрузки = "" Тогда		
		Попытка
			ОбновитьДанныеСправочника_РК(CoMagicRestAPI.ПолучитьДоступныеРК(КлючСессии));  
		Исключение
			ОшибкиЗагрузки = ОшибкиЗагрузки + Символы.ПС + "Ошибка обновления РК: " + ОписаниеОшибки();
		КонецПопытки;
		Звонки_CoMagic = CoMagicRestAPI.ПолучениеИнформацииОЗвонках(КлючСессии, ?(ПериодНачало = Неопределено, ПараметрыСайта.ПериодНачало, ПериодНачало), ?(ПериодОкончание = Неопределено, ПараметрыСайта.ПериодОкончание, ПериодОкончание), ОшибкиЗагрузки);
		Заявки_CoMagic = CoMagicRestAPI.ПолучениеИнформацииОЗаявках(КлючСессии, ?(ПериодНачало = Неопределено, ПараметрыСайта.ПериодНачало, ПериодНачало), ?(ПериодОкончание = Неопределено, ПараметрыСайта.ПериодОкончание, ПериодОкончание), ОшибкиЗагрузки);
		Если ОшибкиЗагрузки = "" Тогда
			ЗагрузитьДанныеCallTracking(НайденыеКлиенты_МВТ, ПараметрыСайта.Ссылка, Звонки_CoMagic, Заявки_CoMagic, Звонки_Avaya, ОшибкиЗагрузки, ЗагруженоЗаписей);		
		КонецЕсли; 				
	КонецЕсли; 
		
	Попытка
		CoMagicRestAPI.ОтключитьсяОтCoMagic(КлючСессии);
	Исключение
		ОшибкиЗагрузки = ОшибкиЗагрузки + Символы.ПС + "Не удалось отключиться от сервиса CoMagic. " + ОписаниеОшибки() + Символы.ПС + ". Проверьте параметры подключения сайта " + ПараметрыСайта;
	КонецПопытки; 
	
	СоздатьЗаписьКонецСтатистикиЗагрузкиCoMagic(СтруктураНачалаЗагрузки, ПараметрыСайта.Ссылка, ЗагруженоЗаписей, ОшибкиЗагрузки, ?(ПериодНачало = Неопределено, ПараметрыСайта.ПериодНачало, ПериодНачало), ?(ПериодОкончание = Неопределено, ПараметрыСайта.ПериодОкончание, ПериодОкончание));
		
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура ЗагрузитьДанныеCallTracking(НайденыеКлиенты_МВТ, Сайт, ТаблицаЗвонков, ТаблицаЗаявок, Звонки_Avaya, Ошибки = "", ЗагруженоЗаписей = 0)
	
	//Формат(<Число>,"ЧГ=0")
	
	СайтОбъект = Сайт.ПолучитьОбъект();
	Если НЕ СайтОбъект = Неопределено Тогда
		Если Не ЗначениеЗаполнено(СайтОбъект.ID) Тогда
			Если ТаблицаЗвонков.Количество() Тогда
				СайтОбъект.ID = Формат(ТаблицаЗвонков[0].site_id, "ЧГ=0");
			Иначе
				Если ТаблицаЗаявок.Количество() Тогда
					СайтОбъект.ID = Формат(ТаблицаЗаявок[0].site_id, "ЧГ=0");	
				КонецЕсли; 	
			КонецЕсли;
			СайтОбъект.Записать();
		КонецЕсли; 
	КонецЕсли; 
	
	ЗагруженныеUCIDs = Новый Массив;	
	Для каждого Строка Из ТаблицаЗвонков Цикл
		
		Если НЕ Строка.Свойство("AC_ID") ИЛИ НЕ Строка.Свойство("ID") ИЛИ (Строка.Свойство("ID") И НЕ ЗначениеЗаполнено(Строка.ID)) Тогда
			Продолжить;
		КонецЕсли; 		
		
		РК = ?(НЕ ЗначениеЗаполнено(Строка.AC_ID) ИЛИ Строка.AC_ID = "-1" ИЛИ Строка.AC_ID = "null" ИЛИ Строка.AC_ID = 0 ИЛИ Строка.AC_ID = -1, Справочники.РекламныеКампании.РК_Отсутствует, НайтиРКПоКоду(Формат(Строка.AC_ID,"ЧГ=0"))); //Справочники.РекламныеКампании.НайтиПоКоду(Строка.AC_ID)!!!!!!!!!
		
		ДатаВремя_ТочностьДоСекунд = СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок(Строка.Call_Date, ".");
		ПериодОбращения = Дата(1, 1, 1);
		Если ДатаВремя_ТочностьДоСекунд.Количество() Тогда
			ДиВ = СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок(ДатаВремя_ТочностьДоСекунд[0], " ");
			cтрГМД = ДиВ[0];
			стрВ = ДиВ[1];
			ГМД = СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок(cтрГМД, "-");
			стрДата = Формат(Дата(ГМД[0],ГМД[1],ГМД[2]), "ДЛФ=Д");
			знДатаВремя = Дата(стрДата +" "+ стрВ);		
			ПериодОбращения = знДатаВремя;
		КонецЕсли; 
		
		ПреобразованныйНомер = УправлениеТелефониейКлиентСервер.ФорматироватьТелефон(СокрЛП(Строка.numa));//?(СтрДлина(СокрЛП(Строка.numa)) = 10 И Сред(СокрЛП(Строка.numa), 1, 1) = "9", "8" + СокрЛП(Строка.numa), СокрЛП(Строка.numa));
		НомерТелефона = ?(Не ЗначениеЗаполнено(Строка.numa) ИЛИ Строка.numa = "null", "", ПреобразованныйНомер);	
		ID_Поситителя = ?(Не ЗначениеЗаполнено(Строка.visitor_id) ИЛИ Строка.visitor_id = "null" ИЛИ Строка.visitor_id = -1, "", Формат(Строка.visitor_id, "ЧГ=0"));
		
		ИмяЗвонящего = Неопределено;
		Если ЗначениеЗаполнено(НомерТелефона) Тогда		
			Кл = УправлениеЗаявкамиНаЗвонок.НайтиКлиентаВТаблице(НомерТелефона, НайденыеКлиенты_МВТ);
			ИмяЗвонящего = ?(Кл = Неопределено, Неопределено , ?(Кл.НайденыеКлиенты.Количество() > 1, Неопределено, ?(ЗначениеЗаполнено(Кл.КонтактноеЛицо), Кл.КонтактноеЛицо, Неопределено)));
		КонецЕсли; 
		
		ДанныеОбращения = Новый Структура;
		ДанныеОбращения.Вставить("ТипОбращения", Перечисления.ТипыОбращенийComagic.Звонок);		
		ДанныеОбращения.Вставить("Сайт", Сайт);
		ДанныеОбращения.Вставить("РекламнаяКампания", РК);		
		ДанныеОбращения.Вставить("ПериодОбращения", ПериодОбращения);
		ДанныеОбращения.Вставить("НомерТелефона", НомерТелефона);
		
		ДанныеОбращения.Вставить("UTM_Campaign", Получить_UTM_Campaign(СокрЛП(Строка.UTM_Campaign)));
		ДанныеОбращения.Вставить("UTM_Medium", Получить_UTM_Medium(СокрЛП(Строка.UTM_Medium)));
		ДанныеОбращения.Вставить("UTM_Source", Получить_UTM_Source(СокрЛП(Строка.UTM_Source)));
		ДанныеОбращения.Вставить("UTM_Term", Получить_UTM_Term(СокрЛП(Строка.UTM_Term)));
		
		ДанныеОбращения.Вставить("ID_Поситителя", ID_Поситителя);
		ДанныеОбращения.Вставить("ИмяЗвонящего", ИмяЗвонящего);
		ДанныеОбращения.Вставить("Тип", Строка.visitor_type);
		ДанныеОбращения.Вставить("ID", Формат(Строка.ID, "ЧГ=0"));
		ДанныеОбращения.Вставить("ДатаЗагрузки", ТекущаяДата());
		ДанныеОбращения.Вставить("ua_client_id", ?(Строка.ua_client_id = "null" ИЛИ Строка.ua_client_id = Неопределено, "", Формат(Строка.ua_client_id, "ЧГ=0")));		
		
		ДанныеUCID = ПолучитьUCIDЗвонка(ДанныеОбращения.НомерТелефона, ДанныеОбращения.ПериодОбращения, Звонки_Avaya, ЗагруженныеUCIDs);
		Если НЕ ДанныеUCID = Неопределено Тогда
			ЗагруженныеUCIDs.Добавить(ДанныеUCID.UCID);
			ДанныеОбращения.Вставить("UCID", ДанныеUCID.UCID);			
			Если ЗначениеЗаполнено(ДанныеUCID.UCID) И НЕ ДанныеUCID.UCID = "00000000000000000000" И ЗначениеЗаполнено(ДанныеUCID.TALKTIME) Тогда
				ЗаполнитьДанныеПоЗвонку(ДанныеОбращения);
			КонецЕсли;
		КонецЕсли;                           

		СоздатьОбращение(ДанныеОбращения, ЗагруженоЗаписей, Ошибки);
					
	КонецЦикла; 
	
	Для каждого Строка Из ТаблицаЗаявок Цикл
		
		Если НЕ Строка.Свойство("AC_ID") ИЛИ НЕ Строка.Свойство("ID") ИЛИ (Строка.Свойство("ID") И НЕ ЗначениеЗаполнено(Строка.ID)) Тогда
			Продолжить;
		КонецЕсли; 		
			
		РК = ?(НЕ ЗначениеЗаполнено(Строка.AC_ID) ИЛИ Строка.AC_ID = "-1" ИЛИ Строка.AC_ID = "null" ИЛИ Строка.AC_ID = 0 ИЛИ Строка.AC_ID = -1, Справочники.РекламныеКампании.РК_Отсутствует, НайтиРКПоКоду(Формат(Строка.AC_ID,"ЧГ=0")));
					
		ДиВ = СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок(Строка.date_time, " ");
		ПериодОбращения = Дата(1, 1, 1);
		Если ДиВ.Количество() Тогда
			cтрГМД = ДиВ[0];
			стрВ = ДиВ[1];
			ГМД = СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок(cтрГМД, "-");
			стрДата = Формат(Дата(ГМД[0],ГМД[1],ГМД[2]), "ДЛФ=Д");
			знДатаВремя = Дата(стрДата +" "+ стрВ);		
			ПериодОбращения = знДатаВремя;
		КонецЕсли;
		
		ПреобразованныйНомер = УправлениеТелефониейКлиентСервер.ФорматироватьТелефон(СокрЛП(Строка.phone));//?(СтрДлина(СокрЛП(Строка.phone)) = 10 И Сред(СокрЛП(Строка.phone), 1, 1) = "9", "8" + СокрЛП(Строка.phone), СокрЛП(Строка.phone));
		НомерТелефона = ?(Не ЗначениеЗаполнено(Строка.phone) ИЛИ Строка.phone = "null", "", ПреобразованныйНомер);
		ID_Поситителя = ?(Не ЗначениеЗаполнено(Строка.visitor_id) ИЛИ Строка.visitor_id = "null" ИЛИ Строка.visitor_id = -1, "", Формат(Строка.visitor_id, "ЧГ=0"));
		
		ИмяЗвонящего = Неопределено;
		Если ЗначениеЗаполнено(НомерТелефона) Тогда		
			Кл = УправлениеЗаявкамиНаЗвонок.НайтиКлиентаВТаблице(НомерТелефона, НайденыеКлиенты_МВТ);
			ИмяЗвонящего = ?(Кл = Неопределено, Неопределено , ?(Кл.НайденыеКлиенты.Количество() > 1, Неопределено, ?(ЗначениеЗаполнено(Кл.КонтактноеЛицо), Кл.КонтактноеЛицо, Неопределено)));
		КонецЕсли; 
		
		ДанныеОбращения = Новый Структура;
		ДанныеОбращения.Вставить("ТипОбращения", Перечисления.ТипыОбращенийComagic.ЗаявкаССайта);		
		ДанныеОбращения.Вставить("Сайт", Сайт);
		ДанныеОбращения.Вставить("РекламнаяКампания", РК);		
		ДанныеОбращения.Вставить("ПериодОбращения", ПериодОбращения);
		ДанныеОбращения.Вставить("НомерТелефона", НомерТелефона);
		
		ДанныеОбращения.Вставить("UTM_Campaign", Получить_UTM_Campaign(СокрЛП(Строка.UTM_Campaign)));
		ДанныеОбращения.Вставить("UTM_Medium", Получить_UTM_Medium(СокрЛП(Строка.UTM_Medium)));
		ДанныеОбращения.Вставить("UTM_Source", Получить_UTM_Source(СокрЛП(Строка.UTM_Source)));
		ДанныеОбращения.Вставить("UTM_Term", Получить_UTM_Term(СокрЛП(Строка.UTM_Term)));
		
		ДанныеОбращения.Вставить("ID_Поситителя", ID_Поситителя);
		ДанныеОбращения.Вставить("ИмяЗвонящего", ИмяЗвонящего);
		ДанныеОбращения.Вставить("Тип", Строка.visitor_type);
		ДанныеОбращения.Вставить("ID", Формат(Строка.ID, "ЧГ=0"));
		ДанныеОбращения.Вставить("ДатаЗагрузки", ТекущаяДата());
		ДанныеОбращения.Вставить("ua_client_id", ?(Строка.ua_client_id = "null", "", Строка.ua_client_id));		
		
		СоздатьОбращение(ДанныеОбращения, ЗагруженоЗаписей, Ошибки);
		
	КонецЦикла; 
	
КонецПроцедуры

Процедура ОбновитьДанныеСправочника_РК(ДоступныеРК)
	
	Для каждого РК Из ДоступныеРК Цикл
		РК_Знч = Справочники.РекламныеКампании.НайтиПоНаименованию(РК.Наименование);//НайтиПоКоду(РК.Код);		
		Если Не ЗначениеЗаполнено(РК_Знч) Тогда
			НовРК = Справочники.РекламныеКампании.СоздатьЭлемент();
			НовРК.Наименование = РК.Наименование;
			НовРК.Записать();
		Иначе
			НовРК = РК_Знч;
		КонецЕсли; 			
		Попытка
			МенеджерЗаписи = РегистрыСведений.СоставИдентификаторовРКComagic.СоздатьМенеджерЗаписи();
			МенеджерЗаписи.AC_ID = РК.Код;
			МенеджерЗаписи.РК = НовРК.Ссылка;
			МенеджерЗаписи.Записать();
		Исключение
			Сообщить(ОписаниеОшибки());
		КонецПопытки;
	КонецЦикла; 
	
КонецПроцедуры

Процедура ЗаполнитьДанныеПоЗвонку(ДанныеОбращения)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	МИНИМУМ(ИсторияЗвонков.ДатаНачалаЗвонка) КАК ДатаНачалаЗвонка,
	|	ИсторияЗвонков.НомерТелефона КАК НомерТелефона
	|ПОМЕСТИТЬ ВТ_РаннийЗвонок
	|ИЗ
	|	РегистрСведений.ИсторияЗвонков КАК ИсторияЗвонков
	|ГДЕ
	|	ИсторияЗвонков.ДатаНачалаЗвонка МЕЖДУ &ПериодОбращения И &КонецТекущегоДня
	|	И ИсторияЗвонков.НомерТелефона ПОДОБНО &НомерТелефона
	|
	|СГРУППИРОВАТЬ ПО
	|	ИсторияЗвонков.НомерТелефона
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ДатаНачалаЗвонка,
	|	НомерТелефона
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_РаннийЗвонок.НомерТелефона КАК НомерТелефона,
	|	ИсторияЗвонков.ID_Звонка КАК ID_Звонка,
	|	ЕСТЬNULL(СоответствиеЗапросовЗвонкам.Запрос, ЗНАЧЕНИЕ(Документ.Запрос.ПустаясСылка)) КАК Запрос,
	|	ЕСТЬNULL(СоответствиеЗапросовЗвонкам.Взаимодействие, ЗНАЧЕНИЕ(Документ.ТелефонныйЗвонок.ПустаясСылка)) КАК Взаимодействие
	|ИЗ
	|	ВТ_РаннийЗвонок КАК ВТ_РаннийЗвонок
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ИсторияЗвонков КАК ИсторияЗвонков
	|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СоответствиеЗапросовЗвонкам КАК СоответствиеЗапросовЗвонкам
	|			ПО ИсторияЗвонков.ID_Звонка = СоответствиеЗапросовЗвонкам.ID_Звонка
	|		ПО ВТ_РаннийЗвонок.ДатаНачалаЗвонка = ИсторияЗвонков.ДатаНачалаЗвонка
	|			И ВТ_РаннийЗвонок.НомерТелефона = ИсторияЗвонков.НомерТелефона";
	
	Запрос.УстановитьПараметр("КонецТекущегоДня", КонецДня(ДанныеОбращения.ПериодОбращения));
	Запрос.УстановитьПараметр("ПериодОбращения", ДанныеОбращения.ПериодОбращения);
	Запрос.УстановитьПараметр("НомерТелефона", "%" + УправлениеТелефониейКлиентСервер.ОбрезатьНомер(ДанныеОбращения.НомерТелефона) + "%");
	
	РезультатЗапроса = Запрос.Выполнить();	
	Если НЕ РезультатЗапроса.Пустой() Тогда
		ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();	
		Если ВыборкаДетальныеЗаписи.Следующий() Тогда
			ДанныеОбращения.Вставить("ID_Звонка", ВыборкаДетальныеЗаписи.ID_Звонка);
			ДанныеОбращения.Вставить("Запрос", ВыборкаДетальныеЗаписи.Запрос);
			ДанныеОбращения.Вставить("Взаимодействие", ВыборкаДетальныеЗаписи.Взаимодействие);
		КонецЕсли;
	КонецЕсли;		
	
КонецПроцедуры

Функция ПолучитьUCIDЗвонка(НомерТелефона, ПериодОбращения, Звонки_Avaya = Неопределено, ЗагруженныеUCIDs = Неопределено)
	
	Если НЕ ЗагруженныеUCIDs = Неопределено И НЕ Звонки_Avaya = Неопределено И ЗначениеЗаполнено(НомерТелефона) И ЗначениеЗаполнено(ПериодОбращения) Тогда			
		НайденныеСтроки = Звонки_Avaya.НайтиСтроки(Новый Структура("CALLING_PTY", УправлениеТелефониейКлиентСервер.ОбрезатьНомер(НомерТелефона)));
		Если НайденныеСтроки.Количество() Тогда
			Возврат НайтиUCIDРаннегоВызова(НайденныеСтроки, ПериодОбращения, ЗагруженныеUCIDs);
		КонецЕсли;
	КонецЕсли; 	
	
КонецФункции

Функция НайтиUCIDРаннегоВызова(НайденныеСтроки, ПериодОбращения, ЗагруженныеUCIDs)
	
	Перем МинСтр;
	МинИнд = 0;	
	Для й = 0 По НайденныеСтроки.Количество() - 1 Цикл
		НайденнаяСтрока = НайденныеСтроки[й];
		Если НайденнаяСтрока.Период < ПериодОбращения ИЛИ НЕ ЗагруженныеUCIDs.Найти(НайденнаяСтрока.UCID) = Неопределено Тогда
			Продолжить;
		Иначе
			Если МинСтр = Неопределено Тогда
				МинСтр = НайденныеСтроки[й];	
				Продолжить;
			КонецЕсли; 
			Если НайденнаяСтрока.Период < МинСтр.Период Тогда
				МинСтр = НайденнаяСтрока;	
			КонецЕсли; 			
		КонецЕсли; 	
	КонецЦикла; 
	
	Возврат МинСтр;
	
КонецФункции 

Функция Получить_UTM_Source(UTM_Source) Экспорт
	
	Если НЕ ЗначениеЗаполнено(UTM_Source) ИЛИ UTM_Source = "null" Тогда
		Возврат Неопределено;
	КонецЕсли; 
	
	СпрЗнч = Справочники.UTM_Source.НайтиПоРеквизиту("Значение", UTM_Source);//.НайтиПоНаименованию(UTM_Source, Истина);
	Если Не ЗначениеЗаполнено(СпрЗнч) Тогда
		СпрЗнч = Справочники.UTM_Source.СоздатьЭлемент();
		СпрЗнч.Наименование = UTM_Source;
		СпрЗнч.Значение = UTM_Source;
		СпрЗнч.Записать();
	КонецЕсли; 
	
	Возврат СпрЗнч;
	
КонецФункции

Функция Получить_UTM_Campaign(UTM_Campaign) Экспорт
	
	Если НЕ ЗначениеЗаполнено(UTM_Campaign) ИЛИ UTM_Campaign = "null" Тогда
		Возврат Неопределено;
	КонецЕсли; 
	
	СпрЗнч = Справочники.UTM_Campaign.НайтиПоРеквизиту("Значение", UTM_Campaign);//.НайтиПоНаименованию(UTM_Campaign, Истина);
	Если Не ЗначениеЗаполнено(СпрЗнч) Тогда
		СпрЗнч = Справочники.UTM_Campaign.СоздатьЭлемент();
		СпрЗнч.Наименование = UTM_Campaign;
		СпрЗнч.Значение = UTM_Campaign;		
		СпрЗнч.Записать();
	КонецЕсли; 
	
	Возврат СпрЗнч;	

КонецФункции

Функция Получить_UTM_Medium(UTM_Medium) Экспорт
	
	Если НЕ ЗначениеЗаполнено(UTM_Medium) ИЛИ UTM_Medium = "null" Тогда
		Возврат Неопределено;
	КонецЕсли; 
	
	СпрЗнч = Справочники.UTM_Medium.НайтиПоРеквизиту("Значение", UTM_Medium);//.НайтиПоНаименованию(UTM_Medium, Истина);
	Если Не ЗначениеЗаполнено(СпрЗнч) Тогда
		СпрЗнч = Справочники.UTM_Medium.СоздатьЭлемент();
		СпрЗнч.Наименование = UTM_Medium;
		СпрЗнч.Значение = UTM_Medium;		
		СпрЗнч.Записать();
	КонецЕсли; 
	
	Возврат СпрЗнч;	
	
КонецФункции

Функция Получить_UTM_Term(UTM_Term) Экспорт
	
	Если НЕ ЗначениеЗаполнено(UTM_Term) ИЛИ UTM_Term = "null" Тогда
		Возврат Неопределено;
	КонецЕсли; 
	
	СпрЗнч = Справочники.UTM_Term.НайтиПоРеквизиту("Значение", UTM_Term);//.НайтиПоНаименованию(UTM_Term, Истина);
	Если Не ЗначениеЗаполнено(СпрЗнч) Тогда
		СпрЗнч = Справочники.UTM_Term.СоздатьЭлемент();
		СпрЗнч.Наименование = UTM_Term;
		СпрЗнч.Значение = UTM_Term;		
		СпрЗнч.Записать();
	КонецЕсли; 
	
	Возврат СпрЗнч;	
	
КонецФункции

Функция Получить_UTM_Content(UTM_Content) Экспорт
	
	Если НЕ ЗначениеЗаполнено(UTM_Content) ИЛИ UTM_Content = "null" Тогда
		Возврат Неопределено;
	КонецЕсли; 
	
	СпрЗнч = Справочники.UTM_Content.НайтиПоРеквизиту("Значение", UTM_Content);//.НайтиПоНаименованию(UTM_Content, Истина);
	Если Не ЗначениеЗаполнено(СпрЗнч) Тогда
		СпрЗнч = Справочники.UTM_Content.СоздатьЭлемент();
		СпрЗнч.Наименование = UTM_Content;
		СпрЗнч.Значение = UTM_Content;		
		СпрЗнч.Записать();
	КонецЕсли; 
	
	Возврат СпрЗнч;	
	
КонецФункции

Функция НайтиРКПоКоду(Код)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	СоставИдентификаторовРКComagic.РК КАК РК
	|ИЗ
	|	РегистрСведений.СоставИдентификаторовРКComagic КАК СоставИдентификаторовРКComagic
	|ГДЕ
	|	СоставИдентификаторовРКComagic.AC_ID = &Код";

	Запрос.УстановитьПараметр("Код", Код);

	Результат = Запрос.Выполнить();

	Если Не Результат.Пустой() Тогда
		ВыборкаДетальныеЗаписи = Результат.Выбрать();
		Если ВыборкаДетальныеЗаписи.Следующий() Тогда
			Возврат ВыборкаДетальныеЗаписи.РК;	
		КонецЕсли;
	КонецЕсли;
	
	Возврат Справочники.РекламныеКампании.РК_Отсутствует;
	
КонецФункции

Процедура СоздатьОбращение(ДанныеОбращения, ЗагруженоЗаписей, Ошибки = "") //Звонки_Avaya = Неопределено, ЗагруженныеUCIDs = Неопределено
	
	Если НЕ ОбращениеБылоЗагружено(ДанныеОбращения.ID, ДанныеОбращения.ТипОбращения) Тогда
		МенеджерЗаписи = РегистрыСведений.ДанныеCallTracking.СоздатьМенеджерЗаписи();		
		ЗаполнитьЗначенияСвойств(МенеджерЗаписи, ДанныеОбращения);
		Попытка
			МенеджерЗаписи.Записать();
		Исключение
			Ошибки = Ошибки	+ Символы.ПС + "Ошибка создания обращения: " + ОписаниеОшибки();
			Возврат;
		КонецПопытки;
		ЗагруженоЗаписей = ЗагруженоЗаписей + 1;
	КонецЕсли; 
	
КонецПроцедуры 

Функция ОбращениеБылоЗагружено(ID, ТипОбращения)
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	ДанныеCallTracking.ID
	               |ИЗ
	               |	РегистрСведений.ДанныеCallTracking КАК ДанныеCallTracking
	               |ГДЕ
	               |	ДанныеCallTracking.ID = &ID
	               |	И ДанныеCallTracking.ТипОбращения = &ТипОбращения";
	
	Запрос.УстановитьПараметр("ID", ID);
	Запрос.УстановитьПараметр("ТипОбращения", ТипОбращения);
	
	Возврат НЕ Запрос.Выполнить().Пустой();
		
КонецФункции 

Функция СоздатьЗаписьНачалоСтатистикиЗагрузкиCoMagic(Сайт, ОшибкиЗагрузки, ПериодНачало, ПериодОкончание)

	МенеджерЗаписи = РегистрыСведений.СтатистикаЗагрузкиComagic.СоздатьМенеджерЗаписи();		
	МенеджерЗаписи.ID = Строка(Новый УникальныйИдентификатор);
	МенеджерЗаписи.Период = ТекущаяДата();
	МенеджерЗаписи.Сайт = Сайт;
	МенеджерЗаписи.ПериодНачало = ПериодНачало;
	МенеджерЗаписи.ПериодОкончание = ПериодОкончание;
	МенеджерЗаписи.ОшибкиЗагрузки = ОшибкиЗагрузки; 		
	Попытка
		МенеджерЗаписи.Записать();
	Исключение
		Возврат Неопределено;
	КонецПопытки;
	
	Возврат Новый Структура("Период, Сайт, ID", МенеджерЗаписи.Период, Сайт, МенеджерЗаписи.ID);
	
КонецФункции

Процедура СоздатьЗаписьКонецСтатистикиЗагрузкиCoMagic(Структура, Сайт, ЗагруженоЗаписей, ОшибкиЗагрузки, ПериодНачало, ПериодОкончание)

	Успешно = (ОшибкиЗагрузки = "");
	НаборЗаписей = РегистрыСведений.СтатистикаЗагрузкиComagic.СоздатьНаборЗаписей(); //РегистрыСведений.СтатистикаЗагрузкиComagic.СоздатьМенеджерЗаписи();		
	НаборЗаписей.Отбор.Период.Установить(Структура.Период);
	НаборЗаписей.Отбор.Сайт.Установить(Сайт);
	НаборЗаписей.Прочитать();
	
	Если НаборЗаписей.Количество() = 0 Тогда
		НоваяЗапись = НаборЗаписей.Добавить();		
		НоваяЗапись.ID = Строка(Новый УникальныйИдентификатор);
		НоваяЗапись.Период = ТекущаяДата();
		НоваяЗапись.Сайт = Сайт;
		НоваяЗапись.ПериодНачало = ПериодНачало;
		НоваяЗапись.ПериодОкончание = ПериодОкончание;
		НоваяЗапись.Успешно = Успешно;
		НоваяЗапись.ЗагруженоЗаписей = ЗагруженоЗаписей;
		Если НЕ Успешно Тогда
			НоваяЗапись.ОшибкиЗагрузки = ОшибкиЗагрузки; 		
		КонецЕсли;
		НоваяЗапись.ЗавершениеЗагрузки = ТекущаяДата();
	Иначе 
    	Запись = НаборЗаписей[0];
		Запись.ID = Структура.ID;
		Запись.Период = Структура.Период;
		Запись.Сайт = Структура.Сайт;
		Запись.ПериодНачало = ПериодНачало;
		Запись.ПериодОкончание = ПериодОкончание;
		Запись.Успешно = Успешно;
		Запись.ЗагруженоЗаписей = ЗагруженоЗаписей;
		Если НЕ Успешно Тогда
			Запись.ОшибкиЗагрузки = ОшибкиЗагрузки; 		
		КонецЕсли;
		Запись.ЗавершениеЗагрузки = ТекущаяДата();
	КонецЕсли;	
	
	Если НаборЗаписей.Модифицированность() Тогда
		НаборЗаписей.Записать();	
	КонецЕсли; 
	
КонецПроцедуры

Функция ПолучитьПараметрыПодключенияComagic(Сайты = Неопределено) Экспорт
	
	Запрос = Новый Запрос;	
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ПараметрыПолученияОбращенийComagic.Наименование КАК Сайт,
	|	ПараметрыПолученияОбращенийComagic.Login КАК Login,
	|	ПараметрыПолученияОбращенийComagic.Password КАК Password,
	|	ПараметрыПолученияОбращенийComagic.ПолучатьОбращения КАК ПолучатьОбращения,
	|	ПараметрыПолученияОбращенийComagic.ВидПериода КАК ВидПериода,
	|	ВЫБОР
	|		КОГДА ПараметрыПолученияОбращенийComagic.ВидПериода = ЗНАЧЕНИЕ(Перечисление.ВидыПериодов.Дата)
	|			ТОГДА НАЧАЛОПЕРИОДА(&ТекущаяДата, ДЕНЬ)
	|		ИНАЧЕ ПараметрыПолученияОбращенийComagic.ПериодНачало
	|	КОНЕЦ КАК ПериодНачало,
	|	ВЫБОР
	|		КОГДА ПараметрыПолученияОбращенийComagic.ВидПериода = ЗНАЧЕНИЕ(Перечисление.ВидыПериодов.Дата)
	|			ТОГДА КОНЕЦПЕРИОДА(&ТекущаяДата, ДЕНЬ)
	|		ИНАЧЕ ПараметрыПолученияОбращенийComagic.ПериодОкончание
	|	КОНЕЦ КАК ПериодОкончание,
	|	ПараметрыПолученияОбращенийComagic.Ссылка КАК Ссылка,
	|	МИНИМУМ(ВЫБОР
	|			КОГДА ПараметрыПолученияОбращенийComagic.ВидПериода = ЗНАЧЕНИЕ(Перечисление.ВидыПериодов.Дата)
	|				ТОГДА НАЧАЛОПЕРИОДА(&ТекущаяДата, ДЕНЬ)
	|			ИНАЧЕ ПараметрыПолученияОбращенийComagic.ПериодНачало
	|		КОНЕЦ) КАК НижняяГраница,
	|	МАКСИМУМ(ВЫБОР
	|			КОГДА ПараметрыПолученияОбращенийComagic.ВидПериода = ЗНАЧЕНИЕ(Перечисление.ВидыПериодов.Дата)
	|				ТОГДА КОНЕЦПЕРИОДА(&ТекущаяДата, ДЕНЬ)
	|			ИНАЧЕ ПараметрыПолученияОбращенийComagic.ПериодОкончание
	|		КОНЕЦ) КАК ВерхняяГраница
	|ИЗ
	|	Справочник.ПараметрыПолученияОбращенийComagic КАК ПараметрыПолученияОбращенийComagic
	|ГДЕ
	|	ПараметрыПолученияОбращенийComagic.ПолучатьОбращения
	|	И ПараметрыПолученияОбращенийComagic.Ссылка В(&Сайты)
	|
	|СГРУППИРОВАТЬ ПО
	|	ПараметрыПолученияОбращенийComagic.Наименование,
	|	ПараметрыПолученияОбращенийComagic.Login,
	|	ПараметрыПолученияОбращенийComagic.Password,
	|	ПараметрыПолученияОбращенийComagic.ПолучатьОбращения,
	|	ПараметрыПолученияОбращенийComagic.ВидПериода,
	|	ПараметрыПолученияОбращенийComagic.Ссылка,
	|	ВЫБОР
	|		КОГДА ПараметрыПолученияОбращенийComagic.ВидПериода = ЗНАЧЕНИЕ(Перечисление.ВидыПериодов.Дата)
	|			ТОГДА КОНЕЦПЕРИОДА(&ТекущаяДата, ДЕНЬ)
	|		ИНАЧЕ ПараметрыПолученияОбращенийComagic.ПериодОкончание
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ПараметрыПолученияОбращенийComagic.ВидПериода = ЗНАЧЕНИЕ(Перечисление.ВидыПериодов.Дата)
	|			ТОГДА НАЧАЛОПЕРИОДА(&ТекущаяДата, ДЕНЬ)
	|		ИНАЧЕ ПараметрыПолученияОбращенийComagic.ПериодНачало
	|	КОНЕЦ";

	Запрос.УстановитьПараметр("ТекущаяДата", ТекущаяДатаСеанса());
	
	Если Сайты = Неопределено Тогда
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "И ПараметрыПолученияОбращенийComagic.Ссылка В(&Сайты)", "");	
	Иначе
		Запрос.УстановитьПараметр("Сайты", Сайты);
	КонецЕсли; 	
	
	Возврат Запрос.Выполнить().Выгрузить();

КонецФункции

Функция ПолучитьТаблицуЗвонковAvaya(ПериодНачало, ПериодОкончание) Экспорт
	
	СтрокаПодключения = Константы.СтрокаПодключенияAvaya_CMS.Получить();
	МассивПодстрок = СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок(СтрокаПодключения, ";");
	Если МассивПодстрок.Количество() = 4 Тогда
		Srvr = МассивПодстрок[0];
		Ref = МассивПодстрок[1]; 
		Usr = МассивПодстрок[2];
		Pwd = МассивПодстрок[3];
	Иначе 
		//тест
		Srvr = "MOSRLU1C01:31541";
		Ref = "Avaya_CMS"; 
		Usr = "Администратор";
		Pwd = "zsefb9517";
	КонецЕсли; 
	
	Подключение = ПолучитьПодключениеКСервернойБД(Srvr, Ref, Usr, Pwd);
		
	Если НЕ Подключение = Неопределено Тогда
		ТЗ_Звонки_Avaya = Новый ТаблицаЗначений;	
		ТЗ_Звонки_Avaya.Колонки.Добавить("Период");
		ТЗ_Звонки_Avaya.Колонки.Добавить("UCID");
		ТЗ_Звонки_Avaya.Колонки.Добавить("CALLING_PTY");
		ТЗ_Звонки_Avaya.Колонки.Добавить("TALKTIME");		
		Запрос = Подключение.NewObject("Запрос");
		Запрос.Текст = "ВЫБРАТЬ
					   |	CMSDATA.Период,
		               |	CMSDATA.UCID,
		               |	CMSDATA.CALLING_PTY,
		               |	CMSDATA.TALKTIME					   
		               |ИЗ
		               |	РегистрСведений.CMSDATA КАК CMSDATA
		               |ГДЕ
		               |	CMSDATA.Период МЕЖДУ &ПериодНачало И &ПериодОкончание
		               |
		               |УПОРЯДОЧИТЬ ПО
		               |	CMSDATA.Период";
		
		Запрос.УстановитьПараметр("ПериодНачало", ПериодНачало);
		Запрос.УстановитьПараметр("ПериодОкончание", ПериодОкончание);
		
		Выборка = Запрос.Выполнить().Выбрать();
		Пока Выборка.Следующий() Цикл
			Если ЗначениеЗаполнено(Выборка.CALLING_PTY) Тогда				
				НовСтр = ТЗ_Звонки_Avaya.Добавить();
				НовСтр.Период = Выборка.Period;
				НовСтр.UCID = Выборка.UCID;
				НовСтр.CALLING_PTY = УправлениеТелефониейКлиентСервер.ОбрезатьНомер(УправлениеТелефониейКлиентСервер.ФорматироватьТелефон(СокрЛП(Выборка.CALLING_PTY)));//ФорматироватьТелефон(СокрЛП(Выборка.CALLING_PTY))
				НовСтр.TALKTIME = Выборка.TALKTIME;				
			КонецЕсли; 
		КонецЦикла;		
		
		Возврат ТЗ_Звонки_Avaya;
	КонецЕсли; 

КонецФункции

Функция ПолучитьПодключениеКСервернойБД(Srvr, Ref, Usr, Pwd, ВерсияКоннектора = "V83.COMConnector") Экспорт
	
	Попытка
		Параметры = "Srvr=""" + Srvr + """;Ref="""+ Ref +""";Usr=""" + Usr + """;Pwd=""" + Pwd + """;";
		V8COMConnector = Новый COMОбъект(ВерсияКоннектора);	
		
		Возврат V8COMConnector.Connect(Параметры);
	Исключение
	КонецПопытки;	
	
КонецФункции

Функция ПреобразоватьДатуВФорматЗапроса(Дата) Экспорт
		
	//СтрокаДата = Формат(Дата, "ДФ=гггг,М,д,Ч,м,с"); // Получаем: 20100228235859
	//ДатаМассив = ОбщегоНазначения.РазложитьСтрокуВМассивПодстрок(СтрокаДата, ",");
	//Г = ДатаМассив[0];
	//М = ДатаМассив[1];
	//Д = ДатаМассив[2];	
	//Ч = ДатаМассив[3];
	//Ми = ДатаМассив[4];
	//С = ДатаМассив[5];
	
	Возврат ?(ЗначениеЗаполнено(Дата), "ДАТАВРЕМЯ(" + Формат(Дата, "ДФ=гггг,М,д,Ч,м,с") + ")", "ДАТАВРЕМЯ(1,1,1,0,0,0)");
	
КонецФункции

Процедура ОбновитьПараметрыИнтерваловЗагрузкиComagic()
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ПараметрыПолученияОбращенийComagic.Ссылка КАК Ссылка,
	|	ПараметрыПолученияОбращенийComagic.ПериодОкончание КАК ПериодОкончание
	|ИЗ
	|	Справочник.ПараметрыПолученияОбращенийComagic КАК ПараметрыПолученияОбращенийComagic
	|ГДЕ
	|	ПараметрыПолученияОбращенийComagic.ПолучатьОбращения
	|	И НЕ ПараметрыПолученияОбращенийComagic.ВидПериода = ЗНАЧЕНИЕ(Перечисление.ВидыПериодов.Дата)";
		
	Результат = Запрос.Выполнить();
	Если НЕ Результат.Пустой() Тогда
		Выборка = Результат.Выбрать();
		Пока Выборка.Следующий() Цикл
			Если НЕ Выборка.ПериодОкончание = КонецДня(ТекущаяДата()) Тогда
				Параметры = Выборка.Ссылка.ПолучитьОбъект();
				Параметры.ПериодНачало = НачалоДня(ТекущаяДата());
				Параметры.ПериодОкончание = КонецДня(ТекущаяДата());
				Параметры.Записать();				
			КонецЕсли;
		КонецЦикла; 
	КонецЕсли;	
	
КонецПроцедуры 

#КонецОбласти
