
#Область ПрограммныйИнтерфейс

Процедура ОбработкаСобытийТелефонии(Источник, Событие, Данные) Экспорт 
	
	УправлениеТелефониейКлиент.ВывестиСообщениеЛога(Строка(Формат(ТекущаяДата(),"ДЛФ=T")) + " " + Событие + " => " + Данные);
	
	ЭтоОшибка = Найти(Событие, "Error from:");
	Если ЭтоОшибка Тогда
		Возврат;
	КонецЕсли;
	
	Если Событие = "OnStartApplicationSessionResponseHandler" Тогда //СтартСессии
		
		глТелефония["ИдентификаторСессииТелефонии"] = Сред(Данные, Найти(Данные, "SessionId=") + СтрДлина("SessionId=")); 
		
	ИначеЕсли Событие = "OnPhoneStartMonitorResponseHandler" Тогда //СтартМонитора
		
		глТелефония.Вставить("MonitorId", Сред(Данные, Найти(Данные, "MonitorId=") + СтрДлина("MonitorId="))); 		
		
	ИначеЕсли Событие = "OnDisplayUpdatedEventHandler" Тогда //ОбновлениеОтображенияЗвонка 
		
		глТелефония["ПоследнийОбновленныйНомерТелефона"] = УправлениеТелефониейКлиентСервер.ФорматироватьТелефон(УправлениеТелефониейКлиент.ПолучитьНомерИзСообщенияЛога(Данные, "ContentsOfDisplay="));

	ИначеЕсли Событие = "OnGetDeviceIdResponseHandler" Тогда //РегистрацияТекущегоНомера
				
		ОбработкаСобытия_РегистрацияТекущегоНомера(Данные);	
				
	ИначеЕсли Событие = "OnDeliveredEventHandler" Тогда //ВходящийЗвонок 
		
		ОбработкаСобытия_ВходящийЗвонок(Данные);		
		
	ИначеЕсли Событие = "OnOriginatedEventHandler" Тогда //ИсходящийЗвонок 
		
		ОбработкаСобытия_ИсходящийЗвонок(Данные);
			
	ИначеЕсли Событие = "OnEstablishedEventHandler" Тогда //НачалоРазговора
		
		ОбработкаСобытия_НачалоРазговора(Данные);
			
	ИначеЕсли Событие = "OnHeldEventHandler" Тогда	//УстановкаЗвонкаНаУдержание

		ОбработкаСобытия_УстановкаЗвонкаНаУдержание(Данные);
		
	ИначеЕсли Событие = "OnRetrievedEventHandler" Тогда //ВозвратЗвонкаИзУдержания

		ОбработкаСобытия_ВозвратЗвонкаИзУдержания(Данные);
		
	ИначеЕсли Событие = "OnTransferredEventHandler" Тогда //ПереводЗвонка	
		
		ОбработкаСобытия_ПереводЗвонка(Данные);
		
	ИначеЕсли Событие = "OnFailedEventHandler" Тогда //НеудавшийсяЗвонок 
		
		ОбработкаСобытия_НеудавшийсяЗвонок(Данные);
		
	ИначеЕсли Событие = "OnConnectionClearedEventHandler" И НЕ Найти(глТелефония["ДанныеПредыдущегоСобытия"], "OnConnectionClearedEventHandler") И НЕ Найти(глТелефония["ДанныеПредыдущегоСобытия"], "OnFailedEventHandler") Тогда //ОкончаниеЗвонка 
		
		ОбработкаСобытия_ОкончаниеЗвонка(Данные);
		
	ИначеЕсли Событие = "OnDivertedEventHandler" Тогда //АвтоматическаяПереадресация
		
		ОбработкаСобытия_АвтоматическаяПереадресация(Данные);
		
	ИначеЕсли Событие = "OnConferencedEventHandler" И Найти(глТелефония["ДанныеПредыдущегоСобытия"], "OnDisplayUpdatedEventHandler") Тогда //НачалоКонференции
		
		ОбработкаСобытия_НачалоКонференции(Данные);
		
	ИначеЕсли Событие = "OnHookswitchUpdatedEventHandler" ИЛИ Событие = "OnGetHookswitchResponseHandler" Тогда //АвтоматическаяПереадресация
	
		Попытка
			глТелефония["ТелефоннаяТрубкаОпущена"] = глAvayaMediaComponent.читатьПараметр("HookState");
			Если НЕ глТелефония["ТелефоннаяТрубкаОпущена"] Тогда
				Если НЕ глТекущиеЗвонки.Количество() Тогда
					УправлениеТелефониейКлиентПовтИсп.ОткрытьРабочуюПанельТелефонии();
					Оповестить("ТелефоннаяТрубкаСнята", , "Телефония");
					глТелефония["ТелефоннаяТрубкаОпущена"] = Ложь;
				КонецЕсли;	
			Иначе	
				Если НЕ глТекущиеЗвонки.Количество() Тогда
					Оповестить("ТелефоннаяТрубкаОпущена", , "Телефония");
					глТелефония["ТелефоннаяТрубкаОпущена"] = Истина;
				КонецЕсли;	
		    КонецЕсли;			
		Исключение
		КонецПопытки;
		
	ИначеЕсли Событие = "OnMakeCallResponseHandler" Тогда 
		
		//to do . . .		
		
	КонецЕсли;
	
	глТелефония["ДанныеПредыдущегоСобытия"] = Данные;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура ОбработкаСобытия_РегистрацияТекущегоНомера(Данные)
	
	НомерТелефона = УправлениеТелефониейКлиент.ПолучитьНомерИзСообщенияЛога(Данные, "deviceId=");
	Если ЗначениеЗаполнено(НомерТелефона) Тогда
		глТелефония["deviceID"] = НомерТелефона;
		УправлениеТелефониейСервер.ОпределитьНомерТелефона(НомерТелефона);	
		Оповестить("ИзменениеСтатусаТелефонии", глТелефония["deviceID"], "Телефония");
	КонецЕсли;
	
КонецПроцедуры

Процедура ОбработкаСобытия_ВходящийЗвонок(Данные)
	
	НомерТелефона = УправлениеТелефониейКлиентСервер.ФорматироватьТелефон(УправлениеТелефониейКлиент.ПолучитьНомерИзСообщенияЛога(Данные, "CallingDeviceId="));	
	Если ЗначениеЗаполнено(НомерТелефона) И НЕ НомерТелефона = глТелефония["deviceID"] Тогда
		УправлениеТелефониейКлиент.ДобавитьЗвонокВСписокТекущих(НомерТелефона, "ВходящийЗвонок", Истина, УправлениеТелефониейКлиент.ПолучитьНомерИзСообщенияЛога(Данные, "CallId=", Истина, Истина));
		УправлениеТелефониейКлиент.ОткрытьКарточкуЗвонка();
	КонецЕсли;
	
КонецПроцедуры

Процедура ОбработкаСобытия_ИсходящийЗвонок(Данные) 
	
	НомерТелефона = УправлениеТелефониейКлиентСервер.ФорматироватьТелефон(УправлениеТелефониейКлиент.ПолучитьНомерИзСообщенияЛога(Данные, "CalledDeviceId="));
	Если ЗначениеЗаполнено(НомерТелефона) И НЕ НомерТелефона = глТелефония["deviceID"] Тогда	
		УправлениеТелефониейКлиент.ДобавитьЗвонокВСписокТекущих(НомерТелефона, "ИсходящийЗвонок", Ложь, УправлениеТелефониейКлиент.ПолучитьНомерИзСообщенияЛога(Данные, "CallId=", Истина, Истина)); //, УправлениеТелефониейКлиент.ПолучитьНомерИзСообщенияЛога(Данные, "GloballyUniqueCallLinkageId=")
		УправлениеТелефониейКлиентПовтИсп.ОткрытьРабочуюПанельТелефонии();
	КонецЕсли;
		
КонецПроцедуры

Процедура ОбработкаСобытия_НачалоРазговора(Данные) 
	
	CallId_Avaya = УправлениеТелефониейКлиент.ПолучитьНомерИзСообщенияЛога(Данные, "CallId=", Истина, Истина);
	ВызывающийНомер = УправлениеТелефониейКлиентСервер.ФорматироватьТелефон(УправлениеТелефониейКлиент.ПолучитьНомерИзСообщенияЛога(Данные, "CallingDeviceId="));
	ВызываемыйНомер = УправлениеТелефониейКлиентСервер.ФорматироватьТелефон(УправлениеТелефониейКлиент.ПолучитьНомерИзСообщенияЛога(Данные, "CalledDeviceId=")); 	
	Отвечающий = УправлениеТелефониейКлиентСервер.ФорматироватьТелефон(УправлениеТелефониейКлиент.ПолучитьНомерИзСообщенияЛога(Данные, "AnsweringDeviceId=", Истина));
	Перенаправляющий = УправлениеТелефониейКлиентСервер.ФорматироватьТелефон(УправлениеТелефониейКлиент.ПолучитьНомерИзСообщенияЛога(Данные, "LastRedirectedDeviceId=", Истина));
	Если ЗначениеЗаполнено(Перенаправляющий) И ЗначениеЗаполнено(Отвечающий) Тогда
		Для каждого Звонок Из глТекущиеЗвонки Цикл					
			Если Звонок.ПеренаправленС = Перенаправляющий 
				И Звонок.ПеренаправленНа = Отвечающий
				И Звонок.СостояниеЗвонка = ПредопределенноеЗначение("Перечисление.СостоянияТелефонныхЗвонков.Переадресован") Тогда
				НомерТелефона = Звонок.НомерТелефона; 
			КонецЕсли;
		КонецЦикла;				
	Иначе	
		НомерТелефона = ?(ВызывающийНомер = глТелефония["deviceID"], ВызываемыйНомер, ВызывающийНомер);
	КонецЕсли;
	
	Если ЗначениеЗаполнено(CallId_Avaya) Тогда
		ПараметрыЗвонка = УправлениеТелефониейКлиент.ПолучитьПараметрыЗвонкаПоCallId(CallId_Avaya);
	Иначе
		Если ЗначениеЗаполнено(НомерТелефона) Тогда
			ПараметрыЗвонка = УправлениеТелефониейКлиент.ПолучитьПараметрыЗвонка(НомерТелефона);
		КонецЕсли;
	КонецЕсли;
	Если НЕ ПараметрыЗвонка = Неопределено Тогда
		ПараметрыЗвонка.CallId_Avaya = ?(ЗначениеЗаполнено(CallId_Avaya), CallId_Avaya, ПараметрыЗвонка.CallId_Avaya);
		ПараметрыЗвонка.UCID = ?(ЗначениеЗаполнено(ПараметрыЗвонка.UCID), ПараметрыЗвонка.UCID, УправлениеТелефониейКлиент.ПолучитьНомерИзСообщенияЛога(Данные, "GloballyUniqueCallLinkageId=")); 
		УправлениеТелефониейКлиент.ОбновитьПараметрыЗвонка(ПараметрыЗвонка, "НачалоРазговора", ПредопределенноеЗначение("Перечисление.СостоянияТелефонныхЗвонков.Разговор"));			
	КонецЕсли;		
		
КонецПроцедуры

Процедура ОбработкаСобытия_НеудавшийсяЗвонок(Данные) 
	
	CallId_Avaya = УправлениеТелефониейКлиент.ПолучитьНомерИзСообщенияЛога(Данные, "CallId=", Истина, Истина);
	ВызывающийНомер = УправлениеТелефониейКлиентСервер.ФорматироватьТелефон(УправлениеТелефониейКлиент.ПолучитьНомерИзСообщенияЛога(Данные, "CallingDeviceId=", Истина));
	ВызываемыйНомер = УправлениеТелефониейКлиентСервер.ФорматироватьТелефон(УправлениеТелефониейКлиент.ПолучитьНомерИзСообщенияЛога(Данные, "CalledDeviceId=", Истина)); 	
	НомерТелефона = ?(ВызывающийНомер = глТелефония["deviceID"], ВызываемыйНомер, ВызывающийНомер);	
	НеудавшийсяНомер = УправлениеТелефониейКлиентСервер.ФорматироватьТелефон(УправлениеТелефониейКлиент.ПолучитьНомерИзСообщенияЛога(Данные, "FailingDeviceId=", Истина));
	
	Если ЗначениеЗаполнено(НеудавшийсяНомер) Тогда	
		Если ЗначениеЗаполнено(CallId_Avaya) Тогда
			ПараметрыЗвонка = УправлениеТелефониейКлиент.ПолучитьПараметрыЗвонкаПоCallId(CallId_Avaya);
		Иначе
			ПараметрыЗвонка = УправлениеТелефониейКлиент.ПолучитьПараметрыЗвонка(НеудавшийсяНомер);
		КонецЕсли;
		Если ПараметрыЗвонка = Неопределено Тогда
			ПараметрыЗвонка = УправлениеТелефониейКлиент.ДобавитьЗвонокВСписокТекущих(НеудавшийсяНомер, "ИсходящийЗвонок", Ложь, CallId_Avaya);		
		КонецЕсли;	
		УправлениеТелефониейКлиент.ОбновитьПараметрыЗвонка(ПараметрыЗвонка, "ИсходящийЗвонок", ПредопределенноеЗначение("Перечисление.СостоянияТелефонныхЗвонков.Вызов"), Ложь);
		Возврат;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(CallId_Avaya) Тогда
		ПараметрыЗвонка = УправлениеТелефониейКлиент.ПолучитьПараметрыЗвонкаПоCallId(CallId_Avaya);
	Иначе
		ПараметрыЗвонка = УправлениеТелефониейКлиент.ПолучитьПараметрыЗвонка(НомерТелефона);
	КонецЕсли;	
	Если НЕ ПараметрыЗвонка = Неопределено Тогда
		УправлениеТелефониейКлиент.ОбновитьПараметрыЗвонка(ПараметрыЗвонка, "ОкончаниеЗвонка", ПредопределенноеЗначение("Перечисление.СостоянияТелефонныхЗвонков.НеПринят"), Истина);	
	КонецЕсли;
		
КонецПроцедуры

Процедура ОбработкаСобытия_ОкончаниеЗвонка(Данные) 
	
	Если глТекущиеЗвонки.ВГраница() < 0 Тогда
		Возврат;
	КонецЕсли;
	
	CallId_Avaya = УправлениеТелефониейКлиент.ПолучитьНомерИзСообщенияЛога(Данные, "CallId=", Истина, Истина);
	НомерТелефона = УправлениеТелефониейКлиент.ПолучитьНомерИзСообщенияЛога(Данные, "ReleasingDeviceId=");
	Если ЗначениеЗаполнено(CallId_Avaya) Тогда
		ПараметрыЗвонка = УправлениеТелефониейКлиент.ПолучитьПараметрыЗвонкаПоCallId(CallId_Avaya);
	КонецЕсли;
	
	Если глТелефония["ИспользоватьAvayaMediaLibrary"] И ПараметрыЗвонка = Неопределено Тогда
		Если НЕ глТекущиеЗвонки.Количество() Тогда
			глТелефония["ТелефоннаяТрубкаОпущена"] = Истина;
		КонецЕсли;		
		Возврат;	
	КонецЕсли;
	
	Если ПараметрыЗвонка = Неопределено Тогда
		Если ЗначениеЗаполнено(НомерТелефона) И НЕ НомерТелефона = глТелефония["deviceID"] Тогда 
			ПараметрыЗвонка = УправлениеТелефониейКлиент.ПолучитьПараметрыЗвонка(НомерТелефона);
		ИначеЕсли ЗначениеЗаполнено(глТелефония["НомерТелефона"]) Тогда
			ПараметрыЗвонка = УправлениеТелефониейКлиент.ПолучитьПараметрыЗвонка(глТелефония["НомерТелефона"]);	
		ИначеЕсли НЕ ЗначениеЗаполнено(НомерТелефона) И глТекущиеЗвонки.ВГраница() > 0 И глТекущиеЗвонки[глТекущиеЗвонки.ВГраница()].СостояниеЗвонка = ПредопределенноеЗначение("Перечисление.СостоянияТелефонныхЗвонков.НаУдержании") Тогда
			ПараметрыЗвонка = УправлениеТелефониейКлиент.ПолучитьПараметрыЗвонка(глТекущиеЗвонки[глТекущиеЗвонки.ВГраница()].НомерТелефона);	
		ИначеЕсли НомерТелефона = глТелефония["deviceID"] И глТекущиеЗвонки.ВГраница() = 0 И глТекущиеЗвонки[0].СостояниеЗвонка = ПредопределенноеЗначение("Перечисление.СостоянияТелефонныхЗвонков.Вызов") Тогда
			Возврат;		
		КонецЕсли;
	КонецЕсли;
	
	Если НЕ ПараметрыЗвонка = Неопределено Тогда 
		Если ПараметрыЗвонка.СостояниеЗвонка = ПредопределенноеЗначение("Перечисление.СостоянияТелефонныхЗвонков.Вызов") ИЛИ НЕ ЗначениеЗаполнено(ПараметрыЗвонка.ДатаНачалаРазговора) Тогда 
			СостояниеЗвонка = ПредопределенноеЗначение("Перечисление.СостоянияТелефонныхЗвонков.НеПринят");
		Иначе
			СостояниеЗвонка = ПредопределенноеЗначение("Перечисление.СостоянияТелефонныхЗвонков.Принят");
		КонецЕсли;
		Если ЗначениеЗаполнено(ПараметрыЗвонка.ID_Перенапраление)
			И ЗначениеЗаполнено(ПараметрыЗвонка.ДатаПеренаправленияЗвонка)			
			Тогда
			СостояниеЗвонка = ПредопределенноеЗначение("Перечисление.СостоянияТелефонныхЗвонков.Переадресован");
		КонецЕсли;
		Если глТелефония.Состояние_ПопыткаПереадресации.ПопыткаПереадресации Тогда
			Если (СостояниеЗвонка = ПредопределенноеЗначение("Перечисление.СостоянияТелефонныхЗвонков.НеПринят") 
				ИЛИ СостояниеЗвонка = ПредопределенноеЗначение("Перечисление.СостоянияТелефонныхЗвонков.Принят"))
				И глТелефония.Состояние_ПопыткаПереадресации.ПеренаправленНа = ПараметрыЗвонка.НомерТелефона Тогда
				СостояниеЗвонка = ПредопределенноеЗначение("Перечисление.СостоянияТелефонныхЗвонков.ПопыткаПереадресации");
				ЗаполнитьЗначенияСвойств(ПараметрыЗвонка, глТелефония.Состояние_ПопыткаПереадресации);
			КонецЕсли;
			УправлениеТелефониейКлиент.ОчиститьПараметрыПопыткиПереадресации();
		КонецЕсли;
		УправлениеТелефониейКлиент.ОбновитьПараметрыЗвонка(ПараметрыЗвонка, "ОкончаниеЗвонка", СостояниеЗвонка, Истина);
	ИначеЕсли (ЗначениеЗаполнено(НомерТелефона) И НомерТелефона = глТелефония["deviceID"]) ИЛИ (НЕ ЗначениеЗаполнено(НомерТелефона) И глТелефония["ТелефоннаяТрубкаОпущена"]) Тогда 
		Индекс = глТекущиеЗвонки.ВГраница();
		Пока Индекс >= 0 Цикл
			ПараметрыЗвонка = глТекущиеЗвонки[Индекс];		
			Если ПараметрыЗвонка.СостояниеЗвонка = ПредопределенноеЗначение("Перечисление.СостоянияТелефонныхЗвонков.Вызов") ИЛИ НЕ ЗначениеЗаполнено(ПараметрыЗвонка.ДатаНачалаРазговора) Тогда 
				СостояниеЗвонка = ПредопределенноеЗначение("Перечисление.СостоянияТелефонныхЗвонков.НеПринят");
			Иначе
				СостояниеЗвонка = ПредопределенноеЗначение("Перечисление.СостоянияТелефонныхЗвонков.Принят");
			КонецЕсли;
			Если ЗначениеЗаполнено(ПараметрыЗвонка.ID_Перенапраление)
				И ЗначениеЗаполнено(ПараметрыЗвонка.ДатаПеренаправленияЗвонка)
				Тогда
				СостояниеЗвонка = ПредопределенноеЗначение("Перечисление.СостоянияТелефонныхЗвонков.Переадресован");
			КонецЕсли;
			Если глТелефония.Состояние_ПопыткаПереадресации.ПопыткаПереадресации Тогда
				Если (СостояниеЗвонка = ПредопределенноеЗначение("Перечисление.СостоянияТелефонныхЗвонков.НеПринят") 
					ИЛИ СостояниеЗвонка = ПредопределенноеЗначение("Перечисление.СостоянияТелефонныхЗвонков.Принят")) 
					И глТелефония.Состояние_ПопыткаПереадресации.ПеренаправленНа = ПараметрыЗвонка.НомерТелефона Тогда
					СостояниеЗвонка = ПредопределенноеЗначение("Перечисление.СостоянияТелефонныхЗвонков.ПопыткаПереадресации");
					ЗаполнитьЗначенияСвойств(ПараметрыЗвонка, глТелефония.Состояние_ПопыткаПереадресации);
				КонецЕсли;
				УправлениеТелефониейКлиент.ОчиститьПараметрыПопыткиПереадресации();
			КонецЕсли;		
			УправлениеТелефониейКлиент.ОбновитьПараметрыЗвонка(ПараметрыЗвонка, "ОкончаниеЗвонка", СостояниеЗвонка, Истина);	
			Индекс = Индекс - 1;
		КонецЦикла;
	КонецЕсли;                                                     
	
	Если НЕ глТекущиеЗвонки.Количество() Тогда
		глТелефония["ТелефоннаяТрубкаОпущена"] = Истина;
	КонецЕсли;	
		
КонецПроцедуры

Процедура ОбработкаСобытия_УстановкаЗвонкаНаУдержание(Данные) 
	
	НомерТелефона = УправлениеТелефониейКлиентСервер.ФорматироватьТелефон(УправлениеТелефониейКлиент.ПолучитьНомерИзСообщенияЛога(Данные, "HoldingDeviceId="));
	CallId_Avaya = УправлениеТелефониейКлиентСервер.ФорматироватьТелефон(УправлениеТелефониейКлиент.ПолучитьНомерИзСообщенияЛога(Данные, "CallId=", Истина, Истина));
	Если ЗначениеЗаполнено(CallId_Avaya) Тогда
		ПараметрыЗвонка = УправлениеТелефониейКлиент.ПолучитьПараметрыЗвонкаПоCallId(CallId_Avaya);
	КонецЕсли;
	
	Если ПараметрыЗвонка = Неопределено Тогда
		Если ЗначениеЗаполнено(НомерТелефона) И НомерТелефона = глТелефония["deviceID"] Тогда
			Если глТекущиеЗвонки.Количество() > 1 Тогда 
				Для каждого Звонок Из глТекущиеЗвонки Цикл 
					Если Звонок.СостояниеЗвонка = ПредопределенноеЗначение("Перечисление.СостоянияТелефонныхЗвонков.Разговор") Тогда
						ПараметрыЗвонка = УправлениеТелефониейКлиент.ПолучитьПараметрыЗвонка(Звонок.НомерТелефона);	
					КонецЕсли;	
				КонецЦикла;
			Иначе
				Если ЗначениеЗаполнено(глТелефония["НомерТелефона"]) Тогда
					ПараметрыЗвонка = УправлениеТелефониейКлиент.ПолучитьПараметрыЗвонка(глТелефония["НомерТелефона"]);
				Иначе
					Для каждого Звонок Из глТекущиеЗвонки Цикл 
						Если Звонок.СостояниеЗвонка = ПредопределенноеЗначение("Перечисление.СостоянияТелефонныхЗвонков.Разговор") Тогда
							ПараметрыЗвонка = УправлениеТелефониейКлиент.ПолучитьПараметрыЗвонка(Звонок.НомерТелефона);	
						КонецЕсли;	
					КонецЦикла;
				КонецЕсли;
			КонецЕсли;		
		КонецЕсли;
	КонецЕсли;

	Если НЕ ПараметрыЗвонка = Неопределено Тогда
		УправлениеТелефониейКлиент.ОбновитьПараметрыЗвонка(ПараметрыЗвонка, "УстановкаЗвонкаНаУдержание", ПредопределенноеЗначение("Перечисление.СостоянияТелефонныхЗвонков.НаУдержании"));
	КонецЕсли;		
		
КонецПроцедуры

Процедура ОбработкаСобытия_ВозвратЗвонкаИзУдержания(Данные) 
	
	НомерТелефона = УправлениеТелефониейКлиентСервер.ФорматироватьТелефон(УправлениеТелефониейКлиент.ПолучитьНомерИзСообщенияЛога(Данные, "RetrievingDeviceId="));
	CallId_Avaya = УправлениеТелефониейКлиентСервер.ФорматироватьТелефон(УправлениеТелефониейКлиент.ПолучитьНомерИзСообщенияЛога(Данные, "CallId=", Истина, Истина));
	Если ЗначениеЗаполнено(CallId_Avaya) Тогда
		ПараметрыЗвонка = УправлениеТелефониейКлиент.ПолучитьПараметрыЗвонкаПоCallId(CallId_Avaya);
	КонецЕсли;
	
	Если ПараметрыЗвонка = Неопределено Тогда
		Если ЗначениеЗаполнено(НомерТелефона) И НЕ НомерТелефона = глТелефония["deviceID"] Тогда 
			ПараметрыЗвонка =УправлениеТелефониейКлиент.ПолучитьПараметрыЗвонка(НомерТелефона);
		ИначеЕсли ЗначениеЗаполнено(глТелефония["ПоследнийОбновленныйНомерТелефона"]) Тогда
			ПараметрыЗвонка = УправлениеТелефониейКлиент.ПолучитьПараметрыЗвонка(глТелефония["ПоследнийОбновленныйНомерТелефона"]);
			Если ПараметрыЗвонка = Неопределено Тогда
				Если СтрДлина(глТелефония["ПоследнийОбновленныйНомерТелефона"]) = 4 И ЗначениеЗаполнено(глТелефония["НомерЛинии"]) Тогда
					ПараметрыЗвонка = УправлениеТелефониейКлиент.ПолучитьПараметрыЗвонка(глТелефония["ПоследнийОбновленныйНомерТелефона"], глТелефония["НомерЛинии"]);		
				КонецЕсли;
			КонецЕсли;
		ИначеЕсли глТекущиеЗвонки.Количество() > 1 Тогда
			ПараметрыЗвонка = УправлениеТелефониейКлиент.ПолучитьПараметрыЗвонка(глТекущиеЗвонки[глТекущиеЗвонки.ВГраница() - 1].НомерТелефона);
		КонецЕсли;
		Если ПараметрыЗвонка = Неопределено Тогда
			Если глТекущиеЗвонки.Количество() = 1 И глТекущиеЗвонки[глТекущиеЗвонки.ВГраница()].СостояниеЗвонка = ПредопределенноеЗначение("Перечисление.СостоянияТелефонныхЗвонков.НаУдержании") Тогда
				ПараметрыЗвонка = глТекущиеЗвонки[глТекущиеЗвонки.ВГраница()];
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
	Если НЕ ПараметрыЗвонка = Неопределено Тогда
		УправлениеТелефониейКлиент.ОбновитьПараметрыЗвонка(ПараметрыЗвонка, "ВозвратЗвонкаИзУдержания", ПредопределенноеЗначение("Перечисление.СостоянияТелефонныхЗвонков.Разговор"));
	КонецЕсли;
		
КонецПроцедуры

Процедура ОбработкаСобытия_ПереводЗвонка(Данные) 
	
	УправлениеТелефониейКлиент.ОчиститьПараметрыПопыткиПереадресации();
	Если глТекущиеЗвонки.ВГраница() < 0 Тогда
		Возврат;
	КонецЕсли;	
		
	CallId_Avaya = УправлениеТелефониейКлиентСервер.ФорматироватьТелефон(УправлениеТелефониейКлиент.ПолучитьНомерИзСообщенияЛога(Данные, "Cur_CallId=", Истина, Истина));	
	First_CallId = УправлениеТелефониейКлиентСервер.ФорматироватьТелефон(УправлениеТелефониейКлиент.ПолучитьНомерИзСообщенияЛога(Данные, "First_CallId=", Истина, Истина));
	Primary_CallId = УправлениеТелефониейКлиентСервер.ФорматироватьТелефон(УправлениеТелефониейКлиент.ПолучитьНомерИзСообщенияЛога(Данные, "PrimaryOldCallConnectionId="));
	НомерПереводящего = УправлениеТелефониейКлиентСервер.ФорматироватьТелефон(УправлениеТелефониейКлиент.ПолучитьНомерИзСообщенияЛога(Данные, "TransferringDeviceId="));
	НомерПринимающего = УправлениеТелефониейКлиентСервер.ФорматироватьТелефон(УправлениеТелефониейКлиент.ПолучитьНомерИзСообщенияЛога(Данные, "TransferredDeviceId=", Истина));	
	НомерПринимающего = ?(НЕ ЗначениеЗаполнено(НомерПринимающего), глТелефония["ПоследнийОбновленныйНомерТелефона"], НомерПринимающего); 
	
	Если ЗначениеЗаполнено(НомерПереводящего) И ЗначениеЗаполнено(НомерПринимающего) Тогда
		Если НомерПереводящего = глТелефония["deviceID"] Тогда
			Если НЕ ЗначениеЗаполнено(УправлениеТелефониейКлиентСервер.ФорматироватьТелефон(УправлениеТелефониейКлиент.ПолучитьНомерИзСообщенияЛога(Данные, "TransferredDeviceId=", Истина))) И НЕ ЗначениеЗаполнено(глТелефония["ПоследнийОбновленныйНомерТелефона"]) Тогда	 //перевод на внешний номер			
				НомерПринимающего = глТекущиеЗвонки[глТекущиеЗвонки.ВГраница()].НомерТелефона;  
			КонецЕсли;			
			ПараметрыЗвонка = УправлениеТелефониейКлиент.ПолучитьПараметрыЗвонка(НомерПринимающего);	
			Если НЕ ПараметрыЗвонка = Неопределено Тогда 
				Если ЗначениеЗаполнено(First_CallId) Тогда
					ПараметрыЗвонка.First_CallId = First_CallId;
				КонецЕсли;					
				УправлениеТелефониейКлиент.ОбновитьПараметрыЗвонка(ПараметрыЗвонка, "ОкончаниеЗвонка", ПредопределенноеЗначение("Перечисление.СостоянияТелефонныхЗвонков.Переадресация"), Истина);
				Для каждого Звонок Из глТекущиеЗвонки Цикл
					Если Звонок.СостояниеЗвонка = ПредопределенноеЗначение("Перечисление.СостоянияТелефонныхЗвонков.НаУдержании") 
						И Звонок.ДатаНачалаЗвонка < ПараметрыЗвонка.ДатаНачалаЗвонка Тогда
						Звонок.ПеренаправленС = НомерПереводящего;
						Звонок.ПеренаправленНа = НомерПринимающего;
						Звонок.ID_Перенапраление = ПараметрыЗвонка.ID_Звонка;
						Звонок.UCID_Перенапраление = ПараметрыЗвонка.UCID;
						Если НЕ ЗначениеЗаполнено(Звонок.ДатаОкончанияЗвонка) Тогда
							Звонок.ДатаОкончанияЗвонка = ТекущаяДата();
						КонецЕсли;
						Если ЗначениеЗаполнено(First_CallId) Тогда
							Звонок.First_CallId = First_CallId;
						КонецЕсли;
						Если ЗначениеЗаполнено(Primary_CallId) Тогда
							Звонок.Primary_CallId = Primary_CallId;
						КонецЕсли;						
						УправлениеТелефониейКлиент.ОбновитьПараметрыЗвонка(Звонок, "ПереводЗвонка", ПредопределенноеЗначение("Перечисление.СостоянияТелефонныхЗвонков.Переадресован"), Истина);
					КонецЕсли;
				КонецЦикла;
			КонецЕсли;			
		Иначе
			//2 вызова
			Звонок = УправлениеТелефониейКлиент.ПолучитьПараметрыЗвонка(НомерПереводящего);
			Если НЕ Звонок = Неопределено Тогда
				Если ЗначениеЗаполнено(First_CallId) Тогда
					Звонок.First_CallId = First_CallId;
				КонецЕсли;					
				УправлениеТелефониейКлиент.ОбновитьПараметрыЗвонка(Звонок, "ОкончаниеЗвонка", ПредопределенноеЗначение("Перечисление.СостоянияТелефонныхЗвонков.Переадресация"), Истина);
			КонецЕсли;			
			ПараметрыЗвонка = Неопределено;
			Если ЗначениеЗаполнено(глТелефония["ПоследнийОбновленныйНомерТелефона"]) Тогда
				Если НомерПринимающего = глТелефония["deviceID"] Тогда
					ПараметрыЗвонка = УправлениеТелефониейКлиент.ДобавитьЗвонокВСписокТекущих(глТелефония["ПоследнийОбновленныйНомерТелефона"], "ВходящийЗвонок", Истина, CallId_Avaya);					
				Иначе
					ПараметрыЗвонка = УправлениеТелефониейКлиент.ДобавитьЗвонокВСписокТекущих(глТелефония["ПоследнийОбновленныйНомерТелефона"], "ИсходящийЗвонок", Ложь, CallId_Avaya);
				КонецЕсли;
			КонецЕсли;			
			Если НЕ ПараметрыЗвонка = Неопределено И НЕ Звонок = Неопределено Тогда 
				ПараметрыЗвонка.ПеренаправленС = НомерПереводящего;
				ПараметрыЗвонка.ПеренаправленНа = НомерПринимающего;				
				Если НЕ Звонок = Неопределено Тогда
					ПараметрыЗвонка.ДатаПеренаправленияЗвонка = ТекущаяДата();
					ПараметрыЗвонка.ID_Перенапраление = Звонок.ID_Звонка;				
					ПараметрыЗвонка.UCID_Перенапраление = Звонок.UCID;				
				КонецЕсли;
				Если ЗначениеЗаполнено(First_CallId) Тогда
					ПараметрыЗвонка.First_CallId = First_CallId;
				КонецЕсли;
				Если ЗначениеЗаполнено(Primary_CallId) Тогда
					ПараметрыЗвонка.Primary_CallId = Primary_CallId;
				КонецЕсли;				
				УправлениеТелефониейКлиент.ОткрытьКарточкуЗвонка();
				Если НЕ глТелефония["ТелефоннаяТрубкаОпущена"] Тогда
					УправлениеТелефониейКлиент.ОбновитьПараметрыЗвонка(ПараметрыЗвонка, "НачалоРазговора", ПредопределенноеЗначение("Перечисление.СостоянияТелефонныхЗвонков.Разговор"));
				Иначе
					УправлениеТелефониейКлиент.ОбновитьПараметрыЗвонка(ПараметрыЗвонка, ?(НомерПринимающего = глТелефония["deviceID"], "ВходящийЗвонок", "ИсходящийЗвонок"), ПараметрыЗвонка.СостояниеЗвонка);
				КонецЕсли;
			КонецЕсли;			
		КонецЕсли;
	КонецЕсли;	
	
КонецПроцедуры

Процедура ОбработкаСобытия_АвтоматическаяПереадресация(Данные) 
	
	CallId_Avaya = УправлениеТелефониейКлиент.ПолучитьНомерИзСообщенияЛога(Данные, "CallId=", Истина, Истина);
	НомерТелефона = УправлениеТелефониейКлиентСервер.ФорматироватьТелефон(УправлениеТелефониейКлиент.ПолучитьНомерИзСообщенияЛога(Данные, "DivertingDeviceId="));
	Приемник = УправлениеТелефониейКлиентСервер.ФорматироватьТелефон(УправлениеТелефониейКлиент.ПолучитьНомерИзСообщенияЛога(Данные, "NewDestinationDeviceId="));
	Если ЗначениеЗаполнено(НомерТелефона) И НЕ НомерТелефона = глТелефония["deviceID"] Тогда 		
		Если ЗначениеЗаполнено(CallId_Avaya) Тогда
			ПараметрыЗвонка = УправлениеТелефониейКлиент.ПолучитьПараметрыЗвонкаПоCallId(CallId_Avaya);
		Иначе
			ПараметрыЗвонка = УправлениеТелефониейКлиент.ПолучитьПараметрыЗвонка(НомерТелефона);
		КонецЕсли;
		Если НЕ ПараметрыЗвонка = Неопределено Тогда  
			ПараметрыЗвонка.ДатаПеренаправленияЗвонка = ТекущаяДата();
			ПараметрыЗвонка.ПеренаправленС = НомерТелефона;
			ПараметрыЗвонка.ПеренаправленНа = Приемник;	
			УправлениеТелефониейКлиент.ОбновитьПараметрыЗвонка(ПараметрыЗвонка, "ОкончаниеЗвонка", ПредопределенноеЗначение("Перечисление.СостоянияТелефонныхЗвонков.АвтоПереадресация"), Истина);
		Иначе
			Индекс = глТекущиеЗвонки.ВГраница();
			Пока Индекс >= 0 Цикл
				ПараметрыЗвонка = глТекущиеЗвонки[Индекс];
				ПараметрыЗвонка.ДатаПеренаправленияЗвонка = ТекущаяДата();
				ПараметрыЗвонка.ПеренаправленС = НомерТелефона;
				ПараметрыЗвонка.ПеренаправленНа = Приемник;					
				Если ПараметрыЗвонка.СостояниеЗвонка = ПредопределенноеЗначение("Перечисление.СостоянияТелефонныхЗвонков.Вызов") Тогда
					УправлениеТелефониейКлиент.ОбновитьПараметрыЗвонка(ПараметрыЗвонка, "ОкончаниеЗвонка", ПредопределенноеЗначение("Перечисление.СостоянияТелефонныхЗвонков.АвтоПереадресация"), Истина);
				КонецЕсли;
				Индекс = Индекс - 1;
			КонецЦикла;
		КонецЕсли;
		Если ЗначениеЗаполнено(Приемник) Тогда
			УправлениеТелефониейКлиент.ДобавитьЗвонокВСписокТекущих(Приемник, "ИсходящийЗвонок", Ложь, CallId_Avaya);	
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

Процедура ОбработкаСобытия_НачалоКонференции(Данные) 
	
	Индекс = глТекущиеЗвонки.ВГраница();
	Пока Индекс >= 0 Цикл
		ПараметрыЗвонка = глТекущиеЗвонки[Индекс];
		Если ПараметрыЗвонка.СостояниеЗвонка = ПредопределенноеЗначение("Перечисление.СостоянияТелефонныхЗвонков.Вызов") Тогда
			СостояниеЗвонка = ПредопределенноеЗначение("Перечисление.СостоянияТелефонныхЗвонков.НеПринят");
		Иначе
			СостояниеЗвонка = ПредопределенноеЗначение("Перечисление.СостоянияТелефонныхЗвонков.Принят");
		КонецЕсли;
		УправлениеТелефониейКлиент.ОбновитьПараметрыЗвонка(ПараметрыЗвонка, "ОкончаниеЗвонка", СостояниеЗвонка, Истина);
		Индекс = Индекс - 1;
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти
