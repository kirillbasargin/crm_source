
#Область ПрограммныйИнтерфейс

Функция ПолучитьНастройкиТелефонии() Экспорт 
		
	Если (Метаданные.Роли.Найти("Телефония_Пользователь") = Неопределено ИЛИ НЕ РольДоступна("Телефония_Пользователь")) 
		И (Метаданные.Роли.Найти("Телефония_Администратор") = Неопределено ИЛИ НЕ РольДоступна("Телефония_Администратор"))
		И (Метаданные.Роли.Найти("ПолныеПрава") = Неопределено ИЛИ НЕ РольДоступна("ПолныеПрава")) Тогда
		Возврат Неопределено;
	КонецЕсли;
		
    Настройки = Новый Структура;
	Настройки.Вставить("aesServerIpAddr", Константы.aesServerIpAddr.Получить());
    Настройки.Вставить("aesDeviceIp", Константы.aesDeviceIp.Получить());
    Настройки.Вставить("aesDevicePassword", Константы.aesDevicePassword.Получить());
    Настройки.Вставить("aesServerPort", Константы.aesServerPort.Получить());
    Настройки.Вставить("aesUserName", Константы.aesUserName.Получить());
    Настройки.Вставить("aesUserPassword", Константы.aesUserPassword.Получить());
    Настройки.Вставить("deviceExtension", ПолучитьТекущийНомерТелефона());
	Настройки.Вставить("aesLogging", Константы.aesLogging.Получить());
	Настройки.Вставить("ПутьККомпонентеТелефонии", Константы.ПутьККомпонентеТелефонии.Получить());
	Настройки.Вставить("АктивироватьЛог", ПолучитьНастройкуТелефонииПользователя("АктивироватьЛог"));
	Настройки.Вставить("КаталогСохраненияЛоговТелефонии", ПолучитьНастройкуТелефонииПользователя("КаталогСохраненияЛоговТелефонии"));
	Настройки.Вставить("Логин", ПолучитьНастройкуТелефонииПользователя("Логин"));
	Настройки.Вставить("ИспользоватьAvayaMediaLibrary", Константы.ИспользоватьAvayaMediaLibrary.Получить());
	Настройки.Вставить("Использовать", УправлениеТелефониейСервер.ПолучитьИспользованиеТелефонии());
	
	Возврат Настройки;
    
КонецФункции

Процедура УстановитьНастройкиТелефонии(НастройкиТелефонии) Экспорт 
	
	Константы.aesServerIpAddr.Установить(НастройкиТелефонии.aesServerIpAddr);
	Константы.aesDeviceIp.Установить(НастройкиТелефонии.aesDeviceIp);
	Константы.aesDevicePassword.Установить(НастройкиТелефонии.aesDevicePassword);
	Константы.aesServerPort.Установить(НастройкиТелефонии.aesServerPort);
	Константы.aesUserName.Установить(НастройкиТелефонии.aesUserName);
	Константы.aesUserPassword.Установить(НастройкиТелефонии.aesUserPassword);
	Константы.aesLogging.Установить(НастройкиТелефонии.aesLogging);
	Константы.ПутьККомпонентеТелефонии.Установить(НастройкиТелефонии.ПутьККомпонентеТелефонии);
	Константы.ИспользоватьAvayaMediaLibrary.Установить(НастройкиТелефонии.ИспользоватьAvayaMediaLibrary);
	
КонецПроцедуры

Функция ПолучитьТекущийНомерТелефона(Пользователь = Неопределено) Экспорт
	
	Возврат ПолучитьНастройкуТелефонииПользователя("ТекущийНомерТелефона", Пользователь);  
		
КонецФункции

Процедура ОпределитьНомерТелефона(НомерТелефона) Экспорт

	Если НЕ НомерТелефона = ПолучитьТекущийНомерТелефона() Тогда 
		УстановитьТекущийНомерТелефона(, НомерТелефона);
	КонецЕсли;
	
КонецПроцедуры
		
Процедура УстановитьТекущийНомерТелефона(Пользователь = Неопределено, ТекущийНомерТелефона) Экспорт
	
	УстановитьНастройкуТелефонииПользователя("ТекущийНомерТелефона", ТекущийНомерТелефона, Пользователь);  
		
КонецПроцедуры

Функция ПолучитьИспользованиеТелефонии(Пользователь = Неопределено) Экспорт

	ТелефонияВключена = ПолучитьНастройкуТелефонииПользователя("ТелефонияВключена", Пользователь);
	Возврат ?(ТелефонияВключена = Неопределено, Ложь, ТелефонияВключена И (РольДоступна("Телефония_Пользователь") ИЛИ РольДоступна("Телефония_Администратор") ИЛИ РольДоступна("АдминистраторСистемы") ИЛИ РольДоступна("Администрирование")));
 
КонецФункции

Процедура УстановитьНастройкуТелефонииПользователя(Настройка, Значение, Пользователь = Неопределено) Экспорт
	
	Если НЕ ЗначениеЗаполнено(Настройка) Тогда
		Возврат;
	КонецЕсли;
	
	Попытка
		РегМен = РегистрыСведений.ПользовательскиеНастройкиТелефонии.СоздатьМенеджерЗаписи();
		РегМен.Пользователь = ?(Пользователь = Неопределено, Пользователи.АвторизованныйПользователь(), Пользователь);
		РегМен.Прочитать();			
		Если РегМен.Выбран() Тогда		
			РегМен[Настройка] = Значение;
			РегМен.Записать();
		КонецЕсли;
	Исключение
	КонецПопытки;
		
КонецПроцедуры

Процедура ЗаполнитьПараметрыНовогоЗвонка(ПараметрыЗвонка) Экспорт  
	
	ПараметрыЗвонка.Ответственный = Пользователи.АвторизованныйПользователь();
	ПараметрыЗвонка.ВидЗвонка = ?(ПараметрыЗвонка.Направление, Перечисления.ВидыЗвонков.Входящий, Перечисления.ВидыЗвонков.Исходящий);		
	ПараметрыЗвонка.СостояниеЗвонка = Перечисления.СостоянияТелефонныхЗвонков.Вызов;
	Если ПараметрыЗвонка.ЭтоВнутреннийВызов Тогда
		ПараметрыЗвонка.ТипЗвонка = Перечисления.ТипыЗвонков.Внутренний;
		ПараметрыЗвонка.Контакт = ОпределитьПользователяТелефонии(ПараметрыЗвонка.НомерТелефона);
	Иначе
		ПараметрыЗвонка.ТипЗвонка = Перечисления.ТипыЗвонков.Прямой;
		ПараметрыЗвонка.Контакт = ОпределитьКлиента(ПараметрыЗвонка.НомерТелефона);	
	КонецЕсли;
	ПараметрыЗвонка.НовыйВызов = Ложь;
	
	Если ЗначениеЗаполнено(ПараметрыЗвонка.Запрос) Тогда
		ПараметрыЗвонка.СтатусЗвонка = Справочники.СтатусыЗвонков.ПредпродажноеОбслуживание;
	Иначе
 		ПараметрыЗвонка.СтатусЗвонка = ?(ЗначениеЗаполнено(ПараметрыЗвонка.СтатусЗвонка), ПараметрыЗвонка.СтатусЗвонка, Справочники.СтатусыЗвонков.НеОбработан);	
	КонецЕсли;	
	
	Если ЗначениеЗаполнено(ПараметрыЗвонка.ЗаявкаИнициатор) Тогда
		ЗаявкаОбъект = ПараметрыЗвонка.ЗаявкаИнициатор.ПолучитьОбъект();
		Если НЕ ЗаявкаОбъект = Неопределено Тогда
			ЗаявкаОбъект.ПопытокДозвониться = ЗаявкаОбъект.ПопытокДозвониться + 1;
			ЗаявкаОбъект.ПопытокСегодня = ЗаявкаОбъект.ПопытокСегодня + 1;
			//Если ЗаявкаОбъект.ПопытокДозвониться >= 5
			//	И ЗаявкаОбъект.Статус = Перечисления.СтатусЗаявкиCallBack.БылиПопыткиДозвониться
			//	И ((НачалоДня(ТекущаяДата()) - НачалоДня(ЗаявкаОбъект.reqData)) / (60 * 60 * 24)) >= 1  
			//	И ЗаявкаОбъект.ДатаРаспределения <= ТекущаяДата() Тогда			
			//	//Если ЗаявкаОбъект.Приоритет = Перечисления.ПриоритетыЗаявокНаЗвонок.Приоритет3 Тогда
			//	//	ЗаявкаОбъект.Приоритет = Перечисления.ПриоритетыЗаявокНаЗвонок.Приоритет4;
			//	//    ЗаявкаОбъект.Статус = Перечисления.СтатусЗаявкиCallBack.НеОбработано;
			//	//	ЗаявкаОбъект.Ответственный = Неопределено;
			//	//	ЗаявкаОбъект.ДатаРаспределения = НачалоДня(ТекущаяДата()) + 60 * 60 * 24; 
			//	//Иначе					
			//		ЗаявкаОбъект.Статус = Перечисления.СтатусЗаявкиCallBack.НеДозвон;
			//	//КонецЕсли;
			//Иначе
			//	ЗаявкаОбъект.Статус = Перечисления.СтатусЗаявкиCallBack.БылиПопыткиДозвониться;
			//КонецЕсли;
			ЗаявкаОбъект.Статус = Перечисления.СтатусЗаявкиCallBack.БылиПопыткиДозвониться;
			Если НЕ ЗаявкаОбъект.Ответственный = ПараметрыЗвонка.Ответственный Тогда
				ЗаявкаОбъект.Ответственный = ПараметрыЗвонка.Ответственный;		
			КонецЕсли;
			ЗаявкаОбъект.Записать(РежимЗаписиДокумента.Проведение);
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

Процедура ЗаписатьЗвонок(ПараметрыЗвонка) Экспорт
	
	Если ПараметрыЗвонка.НовыйВызов Тогда
		ЗаполнитьПараметрыНовогоЗвонка(ПараметрыЗвонка);	
	КонецЕсли;
	
	Если Константы.ИспользоватьAvayaMediaLibrary.Получить() Тогда
		Если ПараметрыЗвонка.СостояниеЗвонка = ПредопределенноеЗначение("Перечисление.СостоянияТелефонныхЗвонков.Переадресован") 
			ИЛИ ПараметрыЗвонка.СостояниеЗвонка = ПредопределенноеЗначение("Перечисление.СостоянияТелефонныхЗвонков.Переадресация") Тогда 
			ОбработкаГруппыЗвонков_AvayaMediaLibrary(ПараметрыЗвонка);
		КонецЕсли;
	Иначе
		Если ПараметрыЗвонка.СостояниеЗвонка = ПредопределенноеЗначение("Перечисление.СостоянияТелефонныхЗвонков.Переадресован") Тогда		
			ОбработкаГруппыЗвонков(ПараметрыЗвонка);
		КонецЕсли;
	КонецЕсли;		
	
	Если ЗначениеЗаполнено(ПараметрыЗвонка.ПеренаправленНа) Тогда
		ПараметрыЗвонка.СтатусЗвонка = ПолучитьСтатусПереадресацииПоНомеру(ПараметрыЗвонка.ПеренаправленНа);	
	КонецЕсли;
	
	ВыполнитьЗаписьВРегистр(ПараметрыЗвонка);
	
	Если ПараметрыЗвонка.ПерезаписатьЗапрос Тогда
		Попытка	
			ДокументОбъект = ПараметрыЗвонка.Запрос.ПолучитьОбъект();
			ДокументОбъект.Записать();
		Исключение
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ОписаниеОшибки());
		КонецПопытки;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ПараметрыЗвонка.ЗаявкаИнициатор) И ЗначениеЗаполнено(ПараметрыЗвонка.ДатаНачалаРазговора) Тогда
		ЗаявкаОбъект = ПараметрыЗвонка.ЗаявкаИнициатор.ПолучитьОбъект();
		Если НЕ ЗаявкаОбъект = Неопределено Тогда
			ЗаявкаОбъект.Статус = Перечисления.СтатусЗаявкиCallBack.Обработано;
			Если НЕ ЗаявкаОбъект.Ответственный = ПараметрыЗвонка.Ответственный Тогда
				ЗаявкаОбъект.Ответственный = ПараметрыЗвонка.Ответственный;		
			КонецЕсли;			
			ЗаявкаОбъект.Записать(РежимЗаписиДокумента.Проведение);
		КонецЕсли;		
	КонецЕсли;
	
	Если ПараметрыЗвонка.ПерезаписатьКонтакт И ЗначениеЗаполнено(ПараметрыЗвонка.Контакт) Тогда
		//УстановитьКонтактДляГруппыЗвонков(ПараметрыЗвонка);  
		ПараметрыЗвонка.ПерезаписатьКонтакт = Ложь;
	КонецЕсли;	
	
КонецПроцедуры

Процедура ВыполнитьЗаписьВРегистр(ПараметрыЗвонка) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	НаборЗаписей = РегистрыСведений.ИсторияЗвонков.СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.ID_Звонка.Установить(ПараметрыЗвонка.ID_Звонка);	
	НаборЗаписей.Отбор.ДатаНачалаЗвонка.Установить(ПараметрыЗвонка.ДатаНачалаЗвонка);
	НаборЗаписей.Отбор.ВызывающийНомер.Установить(ПараметрыЗвонка.ВызывающийНомер);
	НаборЗаписей.Отбор.ВызываемыйНомер.Установить(ПараметрыЗвонка.ВызываемыйНомер);
	НаборЗаписей.Отбор.Контакт.Установить(ПараметрыЗвонка.Контакт);	
	НаборЗаписей.Прочитать();
	
	Если НаборЗаписей.Количество() Тогда
		Для Каждого Запись Из НаборЗаписей Цикл
			ЗаполнитьЗначенияСвойств(Запись, ПараметрыЗвонка);
		КонецЦикла;
	Иначе
		Запись = НаборЗаписей.Добавить();
		ЗаполнитьЗначенияСвойств(Запись, ПараметрыЗвонка);
	КонецЕсли;
		
	Если НаборЗаписей.Модифицированность() Тогда
		НаборЗаписей.Записать();		
	КонецЕсли;

КонецПроцедуры

Функция ПолучитьНастройкуТелефонииПользователя(Настройка, Пользователь = Неопределено) Экспорт
	
	Если НЕ ЗначениеЗаполнено(Настройка) Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ПользовательскиеНастройкиТелефонии." + Настройка + " КАК Настройка
	|ИЗ
	|	РегистрСведений.ПользовательскиеНастройкиТелефонии КАК ПользовательскиеНастройкиТелефонии
	|ГДЕ
	|	ПользовательскиеНастройкиТелефонии.Пользователь = &Пользователь";
	
	Запрос.УстановитьПараметр("Пользователь", ?(Пользователь = Неопределено, Пользователи.АвторизованныйПользователь(), Пользователь));
		
	РезультатЗапроса = Запрос.Выполнить();
	Если НЕ РезультатЗапроса.Пустой() Тогда
		Выборка = РезультатЗапроса.Выбрать();
		Если Выборка.Следующий() Тогда
			Возврат Выборка["Настройка"];
		КонецЕсли;
	КонецЕсли;
		
КонецФункции

Функция ОпределитьПользователяТелефонии(НомерТелефона, ПоискАктивногоСеанса = Истина) Экспорт 
	
	Если ПоискАктивногоСеанса Тогда
		АктивныеПользователи = ПолучитьАктивныхПользователей();
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ПользовательскиеНастройкиТелефонии.Пользователь КАК Контакт
	|ИЗ
	|	РегистрСведений.ПользовательскиеНастройкиТелефонии КАК ПользовательскиеНастройкиТелефонии
	|ГДЕ
	|	(ПользовательскиеНастройкиТелефонии.ТекущийНомерТелефона = &НомерТелефона
	|			ИЛИ ПользовательскиеНастройкиТелефонии.Логин = &НомерТелефона)";
	
	Запрос.УстановитьПараметр("НомерТелефона", НомерТелефона);	
			
	РезультатЗапроса = Запрос.Выполнить();
	Если НЕ РезультатЗапроса.Пустой() Тогда
		Выборка = РезультатЗапроса.Выбрать();	
		Пока Выборка.Следующий() Цикл
			Если ПоискАктивногоСеанса Тогда
				Если НЕ АктивныеПользователи.Найти(Выборка.Контакт) = Неопределено Тогда
					Возврат Выборка.Контакт;	
				КонецЕсли; 
			Иначе
				Возврат Выборка.Контакт;
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;	
		
КонецФункции

Функция ПолучитьАктивныхПользователей(ПользователиДляОпределения = Неопределено) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);

	АктивныеПользователи = Новый Массив;	
	СоединенияИнформационнойБазы = ПолучитьСеансыИнформационнойБазы();                 
	Для Каждого Соединение Из СоединенияИнформационнойБазы Цикл
		Если //Найти(Соединение.Пользователь.Имя, "ABSGROUP\") И 
			НЕ Найти(Соединение.ИмяПриложения, "Designer") И НЕ Найти(Соединение.ИмяПриложения, "BackgroundJob") Тогда
			НайденныйПользователь = Справочники.Пользователи.НайтиПоРеквизиту("ИдентификаторПользователяИБ", Соединение.Пользователь.УникальныйИдентификатор);
			//НайденныйПользователь = ?(ПользователиДляОпределения = Неопределено, НайденныйПользователь, ПользователиДляОпределения.Найти(НайденныйПользователь));
			Если ЗначениеЗаполнено(НайденныйПользователь) И АктивныеПользователи.Найти(НайденныйПользователь) = Неопределено 
				И ?(ПользователиДляОпределения = Неопределено, Истина, НЕ ПользователиДляОпределения.Найти(НайденныйПользователь) = Неопределено) Тогда
				АктивныеПользователи.Добавить(НайденныйПользователь);	
			КонецЕсли; 
		КонецЕсли;
	КонецЦикла;
	
	Возврат АктивныеПользователи;
		
КонецФункции

Функция ОпределитьКлиента(НомерТелефона) Экспорт
		
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ 
	|	КлиентыКонтактнаяИнформация.Клиент КАК Контакт
	|ИЗ
	|	РегистрСведений.КлиентыКонтактнаяИнформация КАК КлиентыКонтактнаяИнформация
	|ГДЕ
	|	КлиентыКонтактнаяИнформация.Телефоны ПОДОБНО &НомерТелефона";
	
	Запрос.УстановитьПараметр("НомерТелефона", "%" + УправлениеТелефониейКлиентСервер.ОбрезатьНомер(НомерТелефона) + "%");	
			
	РезультатЗапроса = Запрос.Выполнить();
	Если НЕ РезультатЗапроса.Пустой() Тогда
		Выборка = РезультатЗапроса.Выбрать();	
		Если Выборка.Следующий() И Выборка.Количество() = 1 Тогда 
			Возврат Выборка.Контакт;
		КонецЕсли;
	КонецЕсли;	
	
КонецФункции

Функция СоздатьСсылкуНаЗвонок(КлючЗаписи) Экспорт
	
	КлючЗаписиРег = РегистрыСведений.ИсторияЗвонков.СоздатьКлючЗаписи(КлючЗаписи);
	Если Не КлючЗаписиРег.Пустой() Тогда	 
		Возврат ПолучитьНавигационнуюСсылку(КлючЗаписиРег);	 
	КонецЕсли;
	
КонецФункции

Процедура УстановитьСтатусЗвонка(ID_Звонка, СтатусЗвонка) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ИсторияЗвонков.ID_Звонка КАК ID_Звонка,
	|	ИсторияЗвонков.ДатаНачалаЗвонка КАК ДатаНачалаЗвонка,
	|	ИсторияЗвонков.ВызывающийНомер КАК ВызывающийНомер,
	|	ИсторияЗвонков.ВызываемыйНомер КАК ВызываемыйНомер,
	|	ИсторияЗвонков.Контакт КАК Контакт
	|ИЗ
	|	РегистрСведений.ИсторияЗвонков КАК ИсторияЗвонков
	|ГДЕ
	|	ИсторияЗвонков.ID_Звонка = &ID_Звонка";
	
	Запрос.УстановитьПараметр("ID_Звонка", ID_Звонка);
	
	РезультатЗапроса = Запрос.Выполнить();
	Если НЕ РезультатЗапроса.Пустой() Тогда
		ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();		
		Если ВыборкаДетальныеЗаписи.Следующий() Тогда	
			НаборЗаписей = РегистрыСведений.ИсторияЗвонков.СоздатьНаборЗаписей();
			НаборЗаписей.Отбор.ID_Звонка.Установить(ВыборкаДетальныеЗаписи.ID_Звонка);	
			НаборЗаписей.Отбор.ДатаНачалаЗвонка.Установить(ВыборкаДетальныеЗаписи.ДатаНачалаЗвонка);
			НаборЗаписей.Отбор.ВызывающийНомер.Установить(ВыборкаДетальныеЗаписи.ВызывающийНомер);
			НаборЗаписей.Отбор.ВызываемыйНомер.Установить(ВыборкаДетальныеЗаписи.ВызываемыйНомер);
			НаборЗаписей.Отбор.Контакт.Установить(ВыборкаДетальныеЗаписи.Контакт);	
			НаборЗаписей.Прочитать();
			Если НаборЗаписей.Количество() Тогда
				Для Каждого Запись Из НаборЗаписей Цикл					
					Если НЕ Запись.СтатусЗвонка = СтатусЗвонка Тогда
						Запись.СтатусЗвонка = СтатусЗвонка;
					КонецЕсли;
				КонецЦикла;
				Если НаборЗаписей.Модифицированность() Тогда
					НаборЗаписей.Записать();
				КонецЕсли;				
			КонецЕсли;				
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

Процедура УстановитьКонтактЗвонкаИзВзаимодействия(Взаимодействие) Экспорт

	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ВЫРАЗИТЬ(ПредметыПапкиВзаимодействий.Предмет КАК Документ.Запрос) КАК Запрос,
	|	&Взаимодействие КАК Взаимодействие
	|ПОМЕСТИТЬ ВТ_Запрос
	|ИЗ
	|	РегистрСведений.ПредметыПапкиВзаимодействий КАК ПредметыПапкиВзаимодействий
	|ГДЕ
	|	ПредметыПапкиВзаимодействий.Взаимодействие = &Взаимодействие
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Запрос
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СоответствиеЗапросовЗвонкам.ID_Звонка КАК ID_Звонка,
	|	ВЫРАЗИТЬ(СоответствиеЗапросовЗвонкам.Взаимодействие.АбонентКонтакт КАК Справочник.Клиенты) КАК Контакт,
	|	ВЫРАЗИТЬ(ИсторияЗвонков.Контакт КАК Справочник.Клиенты) КАК КонтактЗвонка
	|ИЗ
	|	РегистрСведений.СоответствиеЗапросовЗвонкам КАК СоответствиеЗапросовЗвонкам
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_Запрос КАК ВТ_Запрос
	|		ПО СоответствиеЗапросовЗвонкам.Запрос = ВТ_Запрос.Запрос
	|			И СоответствиеЗапросовЗвонкам.Взаимодействие = ВТ_Запрос.Взаимодействие
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ИсторияЗвонков КАК ИсторияЗвонков
	|		ПО СоответствиеЗапросовЗвонкам.ID_Звонка = ИсторияЗвонков.ID_Звонка
	|ГДЕ
	|	(ВЫРАЗИТЬ(СоответствиеЗапросовЗвонкам.Взаимодействие.АбонентКонтакт КАК Справочник.Клиенты)) <> (ВЫРАЗИТЬ(ИсторияЗвонков.Контакт КАК Справочник.Клиенты))";
	
	Запрос.УстановитьПараметр("Взаимодействие", Взаимодействие);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Если РезультатЗапроса.Пустой() Тогда
		Возврат;
	КонецЕсли;
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	Если ВыборкаДетальныеЗаписи.Следующий() Тогда
		УстановитьКонтактЗвонка(ВыборкаДетальныеЗаписи.ID_Звонка, ВыборкаДетальныеЗаписи.Контакт);
	КонецЕсли;
	
КонецПроцедуры 

Процедура УстановитьКонтактЗвонка(ID_Звонка, Контакт) Экспорт
	
	Если НЕ (ТипЗнч(Контакт) = Тип("СправочникСсылка.Клиенты")
		ИЛИ ТипЗнч(Контакт) = Тип("СправочникСсылка.Пользователи")) Тогда
		Возврат;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ИсторияЗвонков.ID_Звонка КАК ID_Звонка,
	|	ИсторияЗвонков.ДатаНачалаЗвонка КАК ДатаНачалаЗвонка,
	|	ИсторияЗвонков.ВызывающийНомер КАК ВызывающийНомер,
	|	ИсторияЗвонков.ВызываемыйНомер КАК ВызываемыйНомер,
	|	ИсторияЗвонков.Контакт КАК Контакт
	|ИЗ
	|	РегистрСведений.ИсторияЗвонков КАК ИсторияЗвонков
	|ГДЕ
	|	ИсторияЗвонков.ID_Звонка = &ID_Звонка";
	
	Запрос.УстановитьПараметр("ID_Звонка", ID_Звонка);
	
	РезультатЗапроса = Запрос.Выполнить();
	Если НЕ РезультатЗапроса.Пустой() Тогда
		ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();		
		Если ВыборкаДетальныеЗаписи.Следующий() Тогда	
			НаборЗаписей = РегистрыСведений.ИсторияЗвонков.СоздатьНаборЗаписей();
			НаборЗаписей.Отбор.ID_Звонка.Установить(ВыборкаДетальныеЗаписи.ID_Звонка);	
			НаборЗаписей.Отбор.ДатаНачалаЗвонка.Установить(ВыборкаДетальныеЗаписи.ДатаНачалаЗвонка);
			НаборЗаписей.Отбор.ВызывающийНомер.Установить(ВыборкаДетальныеЗаписи.ВызывающийНомер);
			НаборЗаписей.Отбор.ВызываемыйНомер.Установить(ВыборкаДетальныеЗаписи.ВызываемыйНомер);
			//НаборЗаписей.Отбор.Контакт.Установить(ВыборкаДетальныеЗаписи.Контакт);	
			НаборЗаписей.Прочитать();
			Если НаборЗаписей.Количество() Тогда
				Для Каждого Запись Из НаборЗаписей Цикл					
					Если НЕ Запись.Контакт = Контакт Тогда
						Запись.Контакт = Контакт;
					КонецЕсли;
				КонецЦикла;
				Если НаборЗаписей.Модифицированность() Тогда
					НаборЗаписей.Записать();
				КонецЕсли;				
			КонецЕсли;				
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

Функция ПолучитьСтатусПереадресацииПоНомеру(НомерТелефона) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
	|	ПользовательскиеНастройкиТелефонии.Пользователь КАК Пользователь
	|ПОМЕСТИТЬ ВТ_Пользователь
	|ИЗ
	|	РегистрСведений.ПользовательскиеНастройкиТелефонии КАК ПользовательскиеНастройкиТелефонии
	|ГДЕ
	|	(ПользовательскиеНастройкиТелефонии.ТекущийНомерТелефона = &ТекущийНомерТелефона
	|			ИЛИ ПользовательскиеНастройкиТелефонии.Логин = &ТекущийНомерТелефона)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Пользователь
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
	|	ВЫБОР
	|		КОГДА ГруппыПользователейСостав.Ссылка.Родитель = ЗНАЧЕНИЕ(Справочник.ГруппыПользователей.ПустаяСсылка)
	|			ТОГДА ГруппыПользователейСостав.Ссылка
	|		КОГДА ГруппыПользователейСостав.Ссылка.Родитель.Родитель = ЗНАЧЕНИЕ(Справочник.ГруппыПользователей.ПустаяСсылка)
	|			ТОГДА ГруппыПользователейСостав.Ссылка.Родитель
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.ГруппыПользователей.ПустаяСсылка)
	|	КОНЕЦ КАК Группа
	|ПОМЕСТИТЬ ВТ_ГруппыПользователя
	|ИЗ
	|	Справочник.ГруппыПользователей.Состав КАК ГруппыПользователейСостав
	|ГДЕ
	|	ГруппыПользователейСостав.Пользователь В
	|			(ВЫБРАТЬ
	|				ВТ_Пользователь.Пользователь КАК Пользователь
	|			ИЗ
	|				ВТ_Пользователь КАК ВТ_Пользователь)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ ПЕРВЫЕ 1
	|	ЕСТЬNULL(СоответствиеГруппПользователейСтатусамЗвонков.СтатусЗвонка, ЗНАЧЕНИЕ(Справочник.СтатусыЗвонков.ПереадресацияПрочиеВопросы)) КАК СтатусЗвонка
	|ИЗ
	|	ВТ_ГруппыПользователя КАК ВТ_ГруппыПользователя
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СоответствиеГруппПользователейСтатусамЗвонков КАК СоответствиеГруппПользователейСтатусамЗвонков
	|		ПО ВТ_ГруппыПользователя.Группа = СоответствиеГруппПользователейСтатусамЗвонков.ГруппаПользователей";
	
	Запрос.УстановитьПараметр("ТекущийНомерТелефона", НомерТелефона);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Если ВыборкаДетальныеЗаписи.Следующий() Тогда
		Возврат ВыборкаДетальныеЗаписи.СтатусЗвонка;
	КонецЕсли;			
	
	Возврат Справочники.СтатусыЗвонков.ПереадресацияПрочиеВопросы;
	
КонецФункции

Функция ПолучитьПоследнийЗвонокПоЗаявке(ЗаявкаИнициатор) Экспорт
		
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ ПЕРВЫЕ 1
	|	ИсторияЗвонков.ID_Звонка КАК ID_Звонка,
	|	ИсторияЗвонков.ДатаНачалаЗвонка КАК ДатаНачалаЗвонка,
	|	ИсторияЗвонков.ВызывающийНомер КАК ВызывающийНомер,
	|	ИсторияЗвонков.ВызываемыйНомер КАК ВызываемыйНомер,
	|	ИсторияЗвонков.Контакт КАК Контакт,
	|	ИсторияЗвонков.НомерТелефона КАК НомерТелефона,
	|	ИсторияЗвонков.СтатусЗвонка КАК СтатусЗвонка
	|ИЗ
	|	РегистрСведений.ИсторияЗвонков КАК ИсторияЗвонков
	|ГДЕ
	|	ИсторияЗвонков.ЗаявкаИнициатор = &ЗаявкаИнициатор
	|
	|УПОРЯДОЧИТЬ ПО
	|	ИсторияЗвонков.ДатаНачалаЗвонка УБЫВ";

	Запрос.УстановитьПараметр("ЗаявкаИнициатор", ЗаявкаИнициатор);

	РезультатЗапроса = Запрос.Выполнить();
	
	Если НЕ РезультатЗапроса.Пустой() Тогда
		ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();	
		Если ВыборкаДетальныеЗаписи.Следующий() Тогда		
			КлючЗаписи = Новый Структура("ID_Звонка, ДатаНачалаЗвонка, ВызывающийНомер, ВызываемыйНомер, Контакт");
			ЗаполнитьЗначенияСвойств(КлючЗаписи, ВыборкаДетальныеЗаписи);		
			Возврат Новый Структура("НомерТелефона, ID_Звонка, НавСсылка, Дата, СтатусЗвонка", ВыборкаДетальныеЗаписи.НомерТелефона, ВыборкаДетальныеЗаписи.ID_Звонка, УправлениеТелефониейСервер.СоздатьСсылкуНаЗвонок(КлючЗаписи), ВыборкаДетальныеЗаписи.ДатаНачалаЗвонка, ВыборкаДетальныеЗаписи.СтатусЗвонка);
		КонецЕсли;
	КонецЕсли;
	
КонецФункции

Функция ПолучитьДанныеЗвонка(ID_Звонка) Экспорт
		
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ ПЕРВЫЕ 1
	|	ИсторияЗвонков.ID_Звонка КАК ID_Звонка,
	|	ИсторияЗвонков.ДатаНачалаЗвонка КАК ДатаНачалаЗвонка,
	|	ИсторияЗвонков.ВызывающийНомер КАК ВызывающийНомер,
	|	ИсторияЗвонков.ВызываемыйНомер КАК ВызываемыйНомер,
	|	ИсторияЗвонков.Контакт КАК Контакт,
	|	ИсторияЗвонков.НомерТелефона КАК НомерТелефона,
	|	ИсторияЗвонков.СтатусЗвонка КАК СтатусЗвонка
	|ИЗ
	|	РегистрСведений.ИсторияЗвонков КАК ИсторияЗвонков
	|ГДЕ
	|	ИсторияЗвонков.ID_Звонка = &ID_Звонка
	|
	|УПОРЯДОЧИТЬ ПО
	|	ИсторияЗвонков.ДатаНачалаЗвонка УБЫВ";

	Запрос.УстановитьПараметр("ID_Звонка", ID_Звонка);

	РезультатЗапроса = Запрос.Выполнить();
	
	Если НЕ РезультатЗапроса.Пустой() Тогда
		ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();	
		Если ВыборкаДетальныеЗаписи.Следующий() Тогда		
			КлючЗаписи = Новый Структура("ID_Звонка, ДатаНачалаЗвонка, ВызывающийНомер, ВызываемыйНомер, Контакт");
			ЗаполнитьЗначенияСвойств(КлючЗаписи, ВыборкаДетальныеЗаписи);		
			Возврат Новый Структура("НомерТелефона, ID_Звонка, НавСсылка, Дата, СтатусЗвонка", ВыборкаДетальныеЗаписи.НомерТелефона, ВыборкаДетальныеЗаписи.ID_Звонка, УправлениеТелефониейСервер.СоздатьСсылкуНаЗвонок(КлючЗаписи), ВыборкаДетальныеЗаписи.ДатаНачалаЗвонка, ВыборкаДетальныеЗаписи.СтатусЗвонка);
		КонецЕсли;
	КонецЕсли;
	
КонецФункции

Функция ПолучитьКонтактныеДанныеКлиента(Клиент) Экспорт
	
	СтруктураПараметров = Новый Структура("АдресФактическогоПроживания, ФИОКлиента, СерияНомерПаспорта, ДатаРожденияКлиента, НомерТелефона, EmailКлиента");
	
	СтруктураПараметров.ДатаРожденияКлиента = Клиент.ДатаРождения;
	СтруктураПараметров.ФИОКлиента = Клиент.ФИО;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	КлиентыКонтактнаяИнформация.Представление КАК Представление,
	|	"""" КАК Серия,
	|	"""" КАК Номер,
	|	1 КАК Ключ
	|ИЗ
	|	Справочник.Клиенты.КонтактнаяИнформация КАК КлиентыКонтактнаяИнформация
	|ГДЕ
	|	КлиентыКонтактнаяИнформация.Ссылка = &ФизЛицо
	|	И КлиентыКонтактнаяИнформация.Тип = ЗНАЧЕНИЕ(Перечисление.ТипыКонтактнойИнформации.Адрес)
	|	И КлиентыКонтактнаяИнформация.Вид = ЗНАЧЕНИЕ(Справочник.ВидыКонтактнойИнформации.АдресМестаПроживанияКлиента)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	"""",
	|	ДокументыФизическихЛицСрезПоследних.Серия,
	|	ДокументыФизическихЛицСрезПоследних.Номер,
	|	2
	|ИЗ
	|	РегистрСведений.ДокументыФизическихЛиц.СрезПоследних(
	|			&Период,
	|			ФизЛицо = &ФизЛицо
	|				И ВидДокумента = ЗНАЧЕНИЕ(Справочник.ВидыДокументовФизическихЛиц.ПаспортРФ)) КАК ДокументыФизическихЛицСрезПоследних
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	КлиентыКонтактнаяИнформация.Представление,
	|	"""",
	|	"""",
	|	3
	|ИЗ
	|	Справочник.Клиенты.КонтактнаяИнформация КАК КлиентыКонтактнаяИнформация
	|ГДЕ
	|	КлиентыКонтактнаяИнформация.Ссылка = &ФизЛицо
	|	И КлиентыКонтактнаяИнформация.Тип = ЗНАЧЕНИЕ(Перечисление.ТипыКонтактнойИнформации.Телефон)
	|	И КлиентыКонтактнаяИнформация.Вид = ЗНАЧЕНИЕ(Справочник.ВидыКонтактнойИнформации.ОсновнойТелефонКлиента)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	КлиентыКонтактнаяИнформация.Представление,
	|	"""",
	|	"""",
	|	4
	|ИЗ
	|	Справочник.Клиенты.КонтактнаяИнформация КАК КлиентыКонтактнаяИнформация
	|ГДЕ
	|	КлиентыКонтактнаяИнформация.Ссылка = &ФизЛицо
	|	И КлиентыКонтактнаяИнформация.Тип = ЗНАЧЕНИЕ(Перечисление.ТипыКонтактнойИнформации.АдресЭлектроннойПочты)
	|	И КлиентыКонтактнаяИнформация.Вид = ЗНАЧЕНИЕ(Справочник.ВидыКонтактнойИнформации.EmailКлиента)";
	
	Запрос.УстановитьПараметр("Период", ТекущаяДата());
	Запрос.УстановитьПараметр("ФизЛицо", Клиент);
	
	Результат = Запрос.Выполнить();
	
	Если Результат.Пустой() Тогда
		СтруктураПараметров.АдресФактическогоПроживания = "";
	Иначе
		Выборка = Результат.Выбрать();
		Пока Выборка.Следующий() Цикл
			Если Выборка.Ключ = 1 Тогда
				СтруктураПараметров.АдресФактическогоПроживания = Выборка.Представление;
			ИначеЕсли Выборка.Ключ = 2 Тогда
				СтруктураПараметров.СерияНомерПаспорта = Выборка.Серия + " " + Выборка.Номер;
			ИначеЕсли Выборка.Ключ = 3 Тогда
				СтруктураПараметров.НомерТелефона = Выборка.Представление;
			ИначеЕсли Выборка.Ключ = 4 Тогда
				СтруктураПараметров.EmailКлиента = Строка(СтруктураПараметров.EmailКлиента) + ?(НЕ ПустаяСтрока(СтруктураПараметров.EmailКлиента), ";" + Выборка.Представление, Выборка.Представление);
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
	Возврат СтруктураПараметров;
	
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура ОбработкаГруппыЗвонков_AvayaMediaLibrary(ПараметрыЗвонка)
	
	Если НЕ ЗначениеЗаполнено(ПараметрыЗвонка.First_CallId) Тогда 
		Возврат;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 	
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ ПЕРВЫЕ 1
	|	ИсторияЗвонков.ID_Группы КАК ID_Группы,
	|	ИсторияЗвонков.ID_Звонка КАК ID_Звонка,
	|	ИсторияЗвонков.ДатаНачалаЗвонка КАК ДатаНачалаЗвонка,
	|	ИсторияЗвонков.ВызывающийНомер КАК ВызывающийНомер,
	|	ИсторияЗвонков.ВызываемыйНомер КАК ВызываемыйНомер,
	|	ИсторияЗвонков.Контакт КАК Контакт
	|ИЗ
	|	РегистрСведений.ИсторияЗвонков КАК ИсторияЗвонков
	|ГДЕ
	|	ИсторияЗвонков.CallId_Avaya = &First_CallId
	|	И ИсторияЗвонков.ДатаНачалаЗвонка МЕЖДУ &НачалоДня И &КонецДня
	|
	|УПОРЯДОЧИТЬ ПО
	|	ИсторияЗвонков.ДатаНачалаЗвонка,
	|	ИсторияЗвонков.CallId_Avaya";
	
	Запрос.УстановитьПараметр("First_CallId", ПараметрыЗвонка.First_CallId);
	Запрос.УстановитьПараметр("НачалоДня", НачалоДня(ТекущаяДата()));
	Запрос.УстановитьПараметр("КонецДня", КонецДня(ТекущаяДата()));
	
	РезультатЗапроса = Запрос.Выполнить();
	Если НЕ РезультатЗапроса.Пустой() Тогда
		ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();	
		Если ВыборкаДетальныеЗаписи.Следующий() Тогда		
			ПараметрыЗвонка.ID_Группы = ВыборкаДетальныеЗаписи.ID_Звонка;
		КонецЕсли;
	Иначе
		Если ПараметрыЗвонка.СостояниеЗвонка = ПредопределенноеЗначение("Перечисление.СостоянияТелефонныхЗвонков.Переадресован") Тогда
			ПараметрыЗвонка.ID_Группы = ПараметрыЗвонка.ID_Звонка;
		КонецЕсли;
	КонецЕсли;	
	
	Если ПараметрыЗвонка.СостояниеЗвонка = ПредопределенноеЗначение("Перечисление.СостоянияТелефонныхЗвонков.Переадресован") Тогда
		Запрос = Новый Запрос;
		Запрос.Текст = 	
		"ВЫБРАТЬ
		|	ИсторияЗвонков.ID_Звонка КАК ID_Звонка,
		|	ИсторияЗвонков.ДатаНачалаЗвонка КАК ДатаНачалаЗвонка,
		|	ИсторияЗвонков.ВызывающийНомер КАК ВызывающийНомер,
		|	ИсторияЗвонков.ВызываемыйНомер КАК ВызываемыйНомер,
		|	ИсторияЗвонков.Контакт КАК Контакт,
		|	ИсторияЗвонков.Направление КАК Направление,
		|	ИсторияЗвонков.ДатаОкончанияЗвонка КАК ДатаОкончанияЗвонка,
		|	ИсторияЗвонков.Ответственный КАК Ответственный
		|ИЗ
		|	РегистрСведений.ИсторияЗвонков КАК ИсторияЗвонков
		|ГДЕ
		|	ИсторияЗвонков.ID_Группы = &ID_Звонка
		|	И НЕ ИсторияЗвонков.ID_Группы = &ID_Группы
		|	И ИсторияЗвонков.СостояниеЗвонка = &СостояниеЗвонка";
		
		Запрос.УстановитьПараметр("СостояниеЗвонка", ПредопределенноеЗначение("Перечисление.СостоянияТелефонныхЗвонков.ПопыткаПереадресации"));
		Запрос.УстановитьПараметр("ID_Звонка", ПараметрыЗвонка.ID_Звонка);
		Запрос.УстановитьПараметр("ID_Группы", ПараметрыЗвонка.ID_Группы);
		
		РезультатЗапроса = Запрос.Выполнить();
		Если НЕ РезультатЗапроса.Пустой() Тогда
			ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();	
			Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
				НаборЗаписей = РегистрыСведений.ИсторияЗвонков.СоздатьНаборЗаписей();
				НаборЗаписей.Отбор.ID_Звонка.Установить(ВыборкаДетальныеЗаписи.ID_Звонка);	
				НаборЗаписей.Отбор.ДатаНачалаЗвонка.Установить(ВыборкаДетальныеЗаписи.ДатаНачалаЗвонка);
				НаборЗаписей.Отбор.ВызывающийНомер.Установить(ВыборкаДетальныеЗаписи.ВызывающийНомер);
				НаборЗаписей.Отбор.ВызываемыйНомер.Установить(ВыборкаДетальныеЗаписи.ВызываемыйНомер);
				НаборЗаписей.Отбор.Контакт.Установить(ВыборкаДетальныеЗаписи.Контакт);	
				НаборЗаписей.Прочитать();
				Если НаборЗаписей.Количество() Тогда
					Для Каждого Запись Из НаборЗаписей Цикл	
						Запись.ID_Группы = ПараметрыЗвонка.ID_Группы;
					КонецЦикла;
					Если НаборЗаписей.Модифицированность() Тогда
						НаборЗаписей.Записать();
					КонецЕсли;				
				КонецЕсли;					
			КонецЦикла;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

Процедура ОбработкаГруппыЗвонков(ПараметрыЗвонка)
	
	Если ПараметрыЗвонка.ТипЗвонка = Перечисления.ТипыЗвонков.Прямой Тогда // И ПараметрыЗвонка.Направление 	
		Запрос = Новый Запрос;
		Запрос.Текст = 	
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ ПЕРВЫЕ 1
		|	ИсторияЗвонков.ID_Звонка КАК ID_Звонка,
		|	ИсторияЗвонков.ДатаНачалаЗвонка КАК ДатаНачалаЗвонка,
		|	ИсторияЗвонков.ВызывающийНомер КАК ВызывающийНомер,
		|	ИсторияЗвонков.ВызываемыйНомер КАК ВызываемыйНомер,
		|	ИсторияЗвонков.Контакт КАК Контакт,
		|	ИсторияЗвонков.Направление КАК Направление,
		|	ИсторияЗвонков.ДатаОкончанияЗвонка КАК ДатаОкончанияЗвонка,
		|	ИсторияЗвонков.Ответственный КАК Ответственный
		|ИЗ
		|	РегистрСведений.ИсторияЗвонков КАК ИсторияЗвонков
		|ГДЕ
		|	ИсторияЗвонков.ВызываемыйНомер = &ВызываемыйНомер
		|	И ИсторияЗвонков.Ответственный = &Ответственный
		|	И ИсторияЗвонков.СостояниеЗвонка = &СостояниеЗвонка
		|	И ВЫБОР
		|			КОГДА РАЗНОСТЬДАТ(&ДатаНачалаЗвонка, ИсторияЗвонков.ДатаОкончанияЗвонка, СЕКУНДА) >= 0
		|				ТОГДА РАЗНОСТЬДАТ(&ДатаНачалаЗвонка, ИсторияЗвонков.ДатаОкончанияЗвонка, СЕКУНДА) <= 40
		|			ИНАЧЕ РАЗНОСТЬДАТ(ИсторияЗвонков.ДатаОкончанияЗвонка, &ДатаНачалаЗвонка, СЕКУНДА) <= 40
		|		КОНЕЦ
		|	И ИсторияЗвонков.ЭтоВнутреннийВызов
		|	И ИсторияЗвонков.Направление
		|
		|УПОРЯДОЧИТЬ ПО
		|	ИсторияЗвонков.ДатаНачалаЗвонка УБЫВ";
		
		Запрос.УстановитьПараметр("ДатаНачалаЗвонка", ПараметрыЗвонка.ДатаНачалаЗвонка);	
		Запрос.УстановитьПараметр("ВызываемыйНомер", ПараметрыЗвонка.ВызываемыйНомер);
		Запрос.УстановитьПараметр("СостояниеЗвонка", ПредопределенноеЗначение("Перечисление.СостоянияТелефонныхЗвонков.Переадресация"));
		Запрос.УстановитьПараметр("Ответственный", ПараметрыЗвонка.Ответственный);
		
		РезультатЗапроса = Запрос.Выполнить();
		Если НЕ РезультатЗапроса.Пустой() Тогда
			ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();	
			Если ВыборкаДетальныеЗаписи.Следующий() Тогда			
				ПараметрыЗвонка.ПеренаправленС = ВыборкаДетальныеЗаписи.ВызывающийНомер;
				ПараметрыЗвонка.ПеренаправленНа = ВыборкаДетальныеЗаписи.ВызываемыйНомер;
				ПараметрыЗвонка.ID_Перенапраление = ВыборкаДетальныеЗаписи.ID_Звонка;
				
				Запрос = Новый Запрос;
				Запрос.Текст = 	
				"ВЫБРАТЬ РАЗРЕШЕННЫЕ ПЕРВЫЕ 1
				|	ИсторияЗвонков.ID_Группы КАК ID_Группы,
				|	ИсторияЗвонков.ID_Звонка КАК ID_Звонка,
				|	ИсторияЗвонков.ДатаНачалаЗвонка КАК ДатаНачалаЗвонка,
				|	ИсторияЗвонков.ВызывающийНомер КАК ВызывающийНомер,
				|	ИсторияЗвонков.ВызываемыйНомер КАК ВызываемыйНомер,
				|	ИсторияЗвонков.Контакт КАК Контакт
				|ИЗ
				|	РегистрСведений.ИсторияЗвонков КАК ИсторияЗвонков
				|ГДЕ
				|	ВЫБОР
				|			КОГДА ИсторияЗвонков.Направление
				|				ТОГДА ИсторияЗвонков.ВызывающийНомер = &НомерТелефона
				|			ИНАЧЕ ИсторияЗвонков.ВызываемыйНомер = &НомерТелефона
				|		КОНЕЦ
				|	И НЕ ИсторияЗвонков.Ответственный = &Ответственный
				|	И ИсторияЗвонков.СостояниеЗвонка = &СостояниеЗвонка
				|	И ВЫБОР
				|			КОГДА РАЗНОСТЬДАТ(&ДатаНачалаЗвонка, ИсторияЗвонков.ДатаОкончанияЗвонка, СЕКУНДА) >= 0
				|				ТОГДА РАЗНОСТЬДАТ(&ДатаНачалаЗвонка, ИсторияЗвонков.ДатаОкончанияЗвонка, СЕКУНДА) <= 40
				|			ИНАЧЕ РАЗНОСТЬДАТ(ИсторияЗвонков.ДатаОкончанияЗвонка, &ДатаНачалаЗвонка, СЕКУНДА) <= 40
				|		КОНЕЦ
				|
				|УПОРЯДОЧИТЬ ПО
				|	ИсторияЗвонков.ДатаНачалаЗвонка УБЫВ";
				
				Запрос.УстановитьПараметр("ДатаНачалаЗвонка", ПараметрыЗвонка.ДатаНачалаЗвонка);	
				Запрос.УстановитьПараметр("НомерТелефона", ПараметрыЗвонка.НомерТелефона); //ПараметрыЗвонка.ВызывающийНомер	
				Запрос.УстановитьПараметр("СостояниеЗвонка", ПредопределенноеЗначение("Перечисление.СостоянияТелефонныхЗвонков.Переадресован"));
				Запрос.УстановитьПараметр("Ответственный", ПараметрыЗвонка.Ответственный);
				
				_РезультатЗапроса = Запрос.Выполнить();
				Если НЕ _РезультатЗапроса.Пустой() Тогда
					_ВыборкаДетальныеЗаписи = _РезультатЗапроса.Выбрать();	
					Если _ВыборкаДетальныеЗаписи.Следующий() Тогда			
						ПараметрыЗвонка.ID_Группы = _ВыборкаДетальныеЗаписи.ID_Группы;
						
						Запрос = Новый Запрос;
						Запрос.Текст = 	
						"ВЫБРАТЬ РАЗРЕШЕННЫЕ ПЕРВЫЕ 1
						|	ИсторияЗвонков.ID_Группы КАК ID_Группы,
						|	ИсторияЗвонков.ID_Звонка КАК ID_Звонка,
						|	ИсторияЗвонков.ДатаНачалаЗвонка КАК ДатаНачалаЗвонка,
						|	ИсторияЗвонков.ВызывающийНомер КАК ВызывающийНомер,
						|	ИсторияЗвонков.ВызываемыйНомер КАК ВызываемыйНомер,
						|	ИсторияЗвонков.Контакт КАК Контакт
						|ИЗ
						|	РегистрСведений.ИсторияЗвонков КАК ИсторияЗвонков
						|ГДЕ
						|	ИсторияЗвонков.ВызывающийНомер = &ВызывающийНомер
						|	И ИсторияЗвонков.ВызываемыйНомер = &ВызываемыйНомер
						|	И НЕ ИсторияЗвонков.Ответственный = &Ответственный
						|	И НЕ ИсторияЗвонков.Направление = &Направление
						|	И ИсторияЗвонков.СостояниеЗвонка = &СостояниеЗвонка
						|	И ВЫБОР
						|			КОГДА РАЗНОСТЬДАТ(&ДатаОкончанияЗвонка, ИсторияЗвонков.ДатаОкончанияЗвонка, СЕКУНДА) >= 0
						|				ТОГДА РАЗНОСТЬДАТ(&ДатаОкончанияЗвонка, ИсторияЗвонков.ДатаОкончанияЗвонка, СЕКУНДА) <= 40
						|			ИНАЧЕ РАЗНОСТЬДАТ(ИсторияЗвонков.ДатаОкончанияЗвонка, &ДатаОкончанияЗвонка, СЕКУНДА) <= 40
						|		КОНЕЦ
						|
						|УПОРЯДОЧИТЬ ПО
						|	ИсторияЗвонков.ДатаНачалаЗвонка УБЫВ";
						
						Запрос.УстановитьПараметр("ДатаОкончанияЗвонка", ВыборкаДетальныеЗаписи.ДатаОкончанияЗвонка);	
						Запрос.УстановитьПараметр("ВызывающийНомер", ВыборкаДетальныеЗаписи.ВызывающийНомер);
						Запрос.УстановитьПараметр("ВызываемыйНомер", ВыборкаДетальныеЗаписи.ВызываемыйНомер);	
						Запрос.УстановитьПараметр("СостояниеЗвонка", ПредопределенноеЗначение("Перечисление.СостоянияТелефонныхЗвонков.Переадресация"));
						Запрос.УстановитьПараметр("Ответственный", ВыборкаДетальныеЗаписи.Ответственный);
						Запрос.УстановитьПараметр("Направление", ВыборкаДетальныеЗаписи.Направление);
						
						__РезультатЗапроса = Запрос.Выполнить();
						Если НЕ __РезультатЗапроса.Пустой() Тогда
							__ВыборкаДетальныеЗаписи = __РезультатЗапроса.Выбрать();	
							Если __ВыборкаДетальныеЗаписи.Следующий() Тогда			
								НаборЗаписей = РегистрыСведений.ИсторияЗвонков.СоздатьНаборЗаписей();
								НаборЗаписей.Отбор.ID_Звонка.Установить(__ВыборкаДетальныеЗаписи.ID_Звонка);	
								НаборЗаписей.Отбор.ДатаНачалаЗвонка.Установить(__ВыборкаДетальныеЗаписи.ДатаНачалаЗвонка);
								НаборЗаписей.Отбор.ВызывающийНомер.Установить(__ВыборкаДетальныеЗаписи.ВызывающийНомер);
								НаборЗаписей.Отбор.ВызываемыйНомер.Установить(__ВыборкаДетальныеЗаписи.ВызываемыйНомер);
								НаборЗаписей.Отбор.Контакт.Установить(__ВыборкаДетальныеЗаписи.Контакт);	
								НаборЗаписей.Прочитать();
								Если НаборЗаписей.Количество() Тогда
									Для Каждого Запись Из НаборЗаписей Цикл	
										Если НЕ Запись.ID_Группы = ПараметрыЗвонка.ID_Группы Тогда
											Запись.ID_Группы = ПараметрыЗвонка.ID_Группы;
										КонецЕсли;
									КонецЦикла;
									Если НаборЗаписей.Модифицированность() Тогда
										НаборЗаписей.Записать();
									КонецЕсли;				
								КонецЕсли;
							КонецЕсли;
						КонецЕсли;
					Иначе
						ПараметрыЗвонка.ID_Группы = ПараметрыЗвонка.ID_Звонка;	
					КонецЕсли;
				Иначе
					ПараметрыЗвонка.ID_Группы = ПараметрыЗвонка.ID_Звонка;	
				КонецЕсли;
			
				Если ЗначениеЗаполнено(ПараметрыЗвонка.ID_Группы) Тогда
					НаборЗаписей = РегистрыСведений.ИсторияЗвонков.СоздатьНаборЗаписей();
					НаборЗаписей.Отбор.ID_Звонка.Установить(ВыборкаДетальныеЗаписи.ID_Звонка);	
					НаборЗаписей.Отбор.ДатаНачалаЗвонка.Установить(ВыборкаДетальныеЗаписи.ДатаНачалаЗвонка);
					НаборЗаписей.Отбор.ВызывающийНомер.Установить(ВыборкаДетальныеЗаписи.ВызывающийНомер);
					НаборЗаписей.Отбор.ВызываемыйНомер.Установить(ВыборкаДетальныеЗаписи.ВызываемыйНомер);
					НаборЗаписей.Отбор.Контакт.Установить(ВыборкаДетальныеЗаписи.Контакт);	
					НаборЗаписей.Прочитать();
					Если НаборЗаписей.Количество() Тогда
						Для Каждого Запись Из НаборЗаписей Цикл	
							Если НЕ Запись.ID_Группы = ПараметрыЗвонка.ID_Группы Тогда
								Запись.ID_Группы = ПараметрыЗвонка.ID_Группы;
							КонецЕсли;
						КонецЦикла;
						Если НаборЗаписей.Модифицированность() Тогда
							НаборЗаписей.Записать();
						КонецЕсли;				
					КонецЕсли;
				КонецЕсли;
			Иначе
				ПараметрыЗвонка.ID_Группы = ПараметрыЗвонка.ID_Звонка;
			КонецЕсли;
		Иначе
			ПараметрыЗвонка.ID_Группы = ПараметрыЗвонка.ID_Звонка;
			
			Запрос = Новый Запрос;
			Запрос.Текст = 	
			"ВЫБРАТЬ РАЗРЕШЕННЫЕ ПЕРВЫЕ 1
			|	ИсторияЗвонков.ID_Группы КАК ID_Группы,
			|	ИсторияЗвонков.ID_Звонка КАК ID_Звонка,
			|	ИсторияЗвонков.ДатаНачалаЗвонка КАК ДатаНачалаЗвонка,
			|	ИсторияЗвонков.ВызывающийНомер КАК ВызывающийНомер,
			|	ИсторияЗвонков.ВызываемыйНомер КАК ВызываемыйНомер,
			|	ИсторияЗвонков.Контакт КАК Контакт
			|ИЗ
			|	РегистрСведений.ИсторияЗвонков КАК ИсторияЗвонков
			|ГДЕ
			|	ИсторияЗвонков.ВызывающийНомер = &ВызывающийНомер
			|	И ИсторияЗвонков.ВызываемыйНомер = &ВызываемыйНомер
			|	И ИсторияЗвонков.Ответственный = &Ответственный
			|	И ИсторияЗвонков.СостояниеЗвонка = &СостояниеЗвонка
			|	И ВЫБОР
			|			КОГДА РАЗНОСТЬДАТ(&ДатаОкончанияЗвонка, ИсторияЗвонков.ДатаОкончанияЗвонка, СЕКУНДА) >= 0
			|				ТОГДА РАЗНОСТЬДАТ(&ДатаОкончанияЗвонка, ИсторияЗвонков.ДатаОкончанияЗвонка, СЕКУНДА) <= 40
			|			ИНАЧЕ РАЗНОСТЬДАТ(ИсторияЗвонков.ДатаОкончанияЗвонка, &ДатаОкончанияЗвонка, СЕКУНДА) <= 40
			|		КОНЕЦ
			|
			|УПОРЯДОЧИТЬ ПО
			|	ИсторияЗвонков.ДатаНачалаЗвонка УБЫВ";
			
			Запрос.УстановитьПараметр("ДатаОкончанияЗвонка", ПараметрыЗвонка.ДатаОкончанияЗвонка);	
			Запрос.УстановитьПараметр("ВызывающийНомер", ПараметрыЗвонка.ПеренаправленС);	
			Запрос.УстановитьПараметр("ВызываемыйНомер", ПараметрыЗвонка.ПеренаправленНа);
			Запрос.УстановитьПараметр("СостояниеЗвонка", ПредопределенноеЗначение("Перечисление.СостоянияТелефонныхЗвонков.Переадресация"));
			Запрос.УстановитьПараметр("Ответственный", ПараметрыЗвонка.Ответственный);			
			
			РезультатЗапроса = Запрос.Выполнить();
			Если НЕ РезультатЗапроса.Пустой() Тогда
				ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();	
				Если ВыборкаДетальныеЗаписи.Следующий() Тогда			
					НаборЗаписей = РегистрыСведений.ИсторияЗвонков.СоздатьНаборЗаписей();
					НаборЗаписей.Отбор.ID_Звонка.Установить(ВыборкаДетальныеЗаписи.ID_Звонка);	
					НаборЗаписей.Отбор.ДатаНачалаЗвонка.Установить(ВыборкаДетальныеЗаписи.ДатаНачалаЗвонка);
					НаборЗаписей.Отбор.ВызывающийНомер.Установить(ВыборкаДетальныеЗаписи.ВызывающийНомер);
					НаборЗаписей.Отбор.ВызываемыйНомер.Установить(ВыборкаДетальныеЗаписи.ВызываемыйНомер);
					НаборЗаписей.Отбор.Контакт.Установить(ВыборкаДетальныеЗаписи.Контакт);	
					НаборЗаписей.Прочитать();
					Если НаборЗаписей.Количество() Тогда
						Для Каждого Запись Из НаборЗаписей Цикл	
							Если НЕ Запись.ID_Группы = ПараметрыЗвонка.ID_Группы Тогда
								Запись.ID_Группы = ПараметрыЗвонка.ID_Группы;
							КонецЕсли;
						КонецЦикла;
						Если НаборЗаписей.Модифицированность() Тогда
							НаборЗаписей.Записать();
						КонецЕсли;				
					КонецЕсли;
				КонецЕсли;
			КонецЕсли;			
		КонецЕсли;
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(ПараметрыЗвонка.ID_Группы) Тогда
		ПараметрыЗвонка.ID_Группы = ПараметрыЗвонка.ID_Звонка;
	КонецЕсли;
	
КонецПроцедуры

Процедура УстановитьКонтактДляГруппыЗвонков(ПараметрыЗвонка)
		
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ИсторияЗвонков.ID_Звонка КАК ID_Звонка,
	|	ИсторияЗвонков.ДатаНачалаЗвонка КАК ДатаНачалаЗвонка,
	|	ИсторияЗвонков.ВызывающийНомер КАК ВызывающийНомер,
	|	ИсторияЗвонков.ВызываемыйНомер КАК ВызываемыйНомер,
	|	ИсторияЗвонков.Контакт КАК Контакт
	|ИЗ
	|	РегистрСведений.ИсторияЗвонков КАК ИсторияЗвонков
	|ГДЕ
	|	НЕ ИсторияЗвонков.ЭтоВнутреннийВызов
	|	И ИсторияЗвонков.ID_Группы = &ID_Группы
	|	И ИсторияЗвонков.Контакт <> &Контакт";
	
	Запрос.УстановитьПараметр("ID_Группы", ПараметрыЗвонка.ID_Группы);
	Запрос.УстановитьПараметр("Контакт", ПараметрыЗвонка.Контакт);
	
	РезультатЗапроса = Запрос.Выполнить();
	Если НЕ РезультатЗапроса.Пустой() Тогда
		ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();		
		Пока ВыборкаДетальныеЗаписи.Следующий() Цикл	
			НаборЗаписей = РегистрыСведений.ИсторияЗвонков.СоздатьНаборЗаписей();
			НаборЗаписей.Отбор.ID_Звонка.Установить(ВыборкаДетальныеЗаписи.ID_Звонка);	
			НаборЗаписей.Отбор.ДатаНачалаЗвонка.Установить(ВыборкаДетальныеЗаписи.ДатаНачалаЗвонка);
			НаборЗаписей.Отбор.ВызывающийНомер.Установить(ВыборкаДетальныеЗаписи.ВызывающийНомер);
			НаборЗаписей.Отбор.ВызываемыйНомер.Установить(ВыборкаДетальныеЗаписи.ВызываемыйНомер);
			НаборЗаписей.Отбор.Контакт.Установить(ВыборкаДетальныеЗаписи.Контакт);	
			НаборЗаписей.Прочитать();
			Если НаборЗаписей.Количество() Тогда
				Для Каждого Запись Из НаборЗаписей Цикл					
					Запись.Контакт = ПараметрыЗвонка.Контакт;
				КонецЦикла;
				Если НаборЗаписей.Модифицированность() Тогда
					НаборЗаписей.Записать();
				КонецЕсли;				
			КонецЕсли;				
		КонецЦикла;
	КонецЕсли;	
	
КонецПроцедуры

#КонецОбласти
