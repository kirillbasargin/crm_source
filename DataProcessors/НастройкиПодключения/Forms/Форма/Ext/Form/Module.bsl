
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
    УстановитьПривилегированныйРежим(Истина);
    СтруктураПароли = ОбщегоНазначения.ПрочитатьДанныеИзБезопасногоХранилища("СтандартныеПодсистемы.УправлениеДоступом", "ИмяПользователяУПНДляWebСервисов, ПарольПользователяУПНДляWebСервисов");
    УстановитьПривилегированныйРежим(Ложь);
    ИмяПользователяУПНДляWebСервисов 	= СтруктураПароли.ИмяПользователяУПНДляWebСервисов;
    ПарольПользователяУПНДляWebСервисов = ?(ЗначениеЗаполнено(СтруктураПароли.ПарольПользователяУПНДляWebСервисов), ЭтотОбъект.УникальныйИдентификатор, "");
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ПарольПользователяУПНДляWebСервисовПриИзменении(Элемент)
	ПарольИзменёнПользовательУПНДляWebCервисов = Истина;
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура Записать(Команда)
	ЗаписатьНаСервере();
	Закрыть();
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ЗаписатьНаСервере()
	
	Если ПарольИзменёнПользовательУПНДляWebCервисов Тогда
        УстановитьПривилегированныйРежим(Истина);
        ОбщегоНазначения.ЗаписатьДанныеВБезопасноеХранилище("СтандартныеПодсистемы.УправлениеДоступом", ИмяПользователяУПНДляWebСервисов, 	"ИмяПользователяУПНДляWebСервисов");
		ОбщегоНазначения.ЗаписатьДанныеВБезопасноеХранилище("СтандартныеПодсистемы.УправлениеДоступом", ПарольПользователяУПНДляWebСервисов, "ПарольПользователяУПНДляWebСервисов");
        УстановитьПривилегированныйРежим(Ложь);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

