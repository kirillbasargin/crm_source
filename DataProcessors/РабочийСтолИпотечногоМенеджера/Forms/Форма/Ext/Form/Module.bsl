
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ЗаполнитьЗадачи(ТолькоМоиЗадачи);
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	ПодключитьОбработчикОжидания("ОбновитьЗадачи", 300);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовФормы

&НаКлиенте
Процедура АнкетыНажатие(Элемент)
	
	Если ТолькоМоиДокументы Тогда
		Отбор = Новый Структура("Ответственный", ПользователиКлиентСервер.ТекущийПользователь());
	Иначе
		Отбор = Новый Структура("Ответственный", ПолучитьСписокПользователей(ПользователиКлиентСервер.ТекущийПользователь()));
	КонецЕсли;
	
	ПараметрыФормы = Новый Структура("Отбор", Отбор);
	ОткрытьФорму("Документ.Анкета.ФормаСписка", ПараметрыФормы, ЭтаФорма, ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура ЗапросыНаОдобрениеИпотекиНажатие(Элемент)
	
	Если ТолькоМоиДокументы Тогда
		Отбор = Новый Структура("Ответственный", ПользователиКлиентСервер.ТекущийПользователь());
	Иначе
		Отбор = Новый Структура("Ответственный", ПолучитьСписокПользователей(ПользователиКлиентСервер.ТекущийПользователь()));
	КонецЕсли;
	
	ПараметрыФормы = Новый Структура("Отбор", Отбор);
	ОткрытьФорму("Документ.ЗапросНаОдобрениеОбъекта.ФормаСписка", ПараметрыФормы, ЭтаФорма, ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура ИпотечныеЗаявкиНажатие(Элемент)
	
	Если ТолькоМоиДокументы Тогда
		Отбор = Новый Структура("Ответственный", ПользователиКлиентСервер.ТекущийПользователь());
	Иначе
		Отбор = Новый Структура("Ответственный", ПолучитьСписокПользователей(ПользователиКлиентСервер.ТекущийПользователь()));
	КонецЕсли;
	
	ПараметрыФормы = Новый Структура("Отбор", Отбор);
	ОткрытьФорму("Документ.ИпотечнаяЗаявка.ФормаСписка", ПараметрыФормы, ЭтаФорма, ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура РасчетыИпотекиНажатие(Элемент)
	
	Если ТолькоМоиДокументы Тогда
		Отбор = Новый Структура("Ответственный", ПользователиКлиентСервер.ТекущийПользователь());
	Иначе
		Отбор = Новый Структура("Ответственный", ПолучитьСписокПользователей(ПользователиКлиентСервер.ТекущийПользователь()));
	КонецЕсли;
	
	ПараметрыФормы = Новый Структура("Отбор", Отбор);
	ОткрытьФорму("Документ.РасчетИпотеки.ФормаСписка", ПараметрыФормы, ЭтаФорма, ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура ЗапланированоНаСегодняНажатие(Элемент)
	
	Если ТолькоМоиЗадачи Тогда
		Ответственный = ПользователиКлиентСервер.ТекущийПользователь();
	Иначе
		Ответственный = ПолучитьСписокСотрудников(ПользователиКлиентСервер.ТекущийПользователь());
	КонецЕсли;
	
	ПараметрыОткрываемойФормы = Новый Структура("Отбор, Ответственный", Неопределено, Ответственный);	
	ПараметрыОткрываемойФормы.Вставить("УстанавливатьОтборАктуальныеВзаимодействия", Истина); 
	ПараметрыОткрываемойФормы.Вставить("ОтборДляМенеджераФилиала", Истина);
	
	ФормаСпискаПараметрическая = ПолучитьФорму("ЖурналДокументов.Взаимодействия.Форма.ФормаСпискаПараметрическая", ПараметрыОткрываемойФормы, ЭтотОбъект, ЭтаФорма.УникальныйИдентификатор);
	Если ФормаСпискаПараметрическая.Открыта() Тогда
		ФормаСпискаПараметрическая.КонтекстВыбора = ПараметрыОткрываемойФормы;
	КонецЕсли;
	ФормаСпискаПараметрическая.Открыть();
	
КонецПроцедуры

&НаКлиенте
Процедура ЗавершеноСегодняНажатие(Элемент)
	
	Если ТолькоМоиЗадачи Тогда
		Ответственный = ПользователиКлиентСервер.ТекущийПользователь();
	Иначе
		Ответственный = ПолучитьСписокСотрудников(ПользователиКлиентСервер.ТекущийПользователь());
	КонецЕсли;
	
	ПараметрыОткрываемойФормы = Новый Структура("Отбор, Ответственный", Неопределено, Ответственный);
	ПараметрыОткрываемойФормы.Вставить("УстанавливатьОтборЗавершенныеВзаимодействия", Истина);
	ПараметрыОткрываемойФормы.Вставить("ОтборДляМенеджераФилиала", Истина);
	
	ФормаСпискаПараметрическая = ПолучитьФорму("ЖурналДокументов.Взаимодействия.Форма.ФормаСпискаПараметрическая", ПараметрыОткрываемойФормы, ЭтотОбъект);
	Если ФормаСпискаПараметрическая.Открыта() Тогда
		ФормаСпискаПараметрическая.КонтекстВыбора = ПараметрыОткрываемойФормы;
	КонецЕсли;
	ФормаСпискаПараметрическая.Открыть();
	
КонецПроцедуры

&НаКлиенте
Процедура ПросроченныеВзаимодействияНажатие(Элемент)
	
	Если ТолькоМоиЗадачи Тогда
		Ответственный = ПользователиКлиентСервер.ТекущийПользователь();
	Иначе
		Ответственный = ПолучитьСписокСотрудников(ПользователиКлиентСервер.ТекущийПользователь());
	КонецЕсли;
	
	ПараметрыОткрываемойФормы = Новый Структура("Отбор, Ответственный", Неопределено, Ответственный);		
	ПараметрыОткрываемойФормы.Вставить("УстанавливатьОтборПросроченныеВзаимодействия", Истина);
	ПараметрыОткрываемойФормы.Вставить("ОтборДляМенеджераФилиала", Истина);
	
	ФормаСпискаПараметрическая = ПолучитьФорму("ЖурналДокументов.Взаимодействия.Форма.ФормаСпискаПараметрическая", ПараметрыОткрываемойФормы, ЭтотОбъект);
	Если ФормаСпискаПараметрическая.Открыта() Тогда
		ФормаСпискаПараметрическая.КонтекстВыбора = ПараметрыОткрываемойФормы;
	КонецЕсли;
	ФормаСпискаПараметрическая.Открыть();
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервереБезКонтекста
Функция ПолучитьСписокПользователей(ТекущийПользователь)
	
	Список = Новый СписокЗначений;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
				"ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
				|	ГруппыПользователейСостав.Ссылка КАК Группа
				|ПОМЕСТИТЬ ВТ_СписокГрупп
				|ИЗ
				|	Справочник.ГруппыПользователей.Состав КАК ГруппыПользователейСостав
				|ГДЕ
				|	ГруппыПользователейСостав.Пользователь = &Пользователь
				|;
				|
				|////////////////////////////////////////////////////////////////////////////////
				|ВЫБРАТЬ РАЗЛИЧНЫЕ
				|	ГруппыПользователейСостав.Пользователь КАК Пользователь
				|ИЗ
				|	Справочник.ГруппыПользователей.Состав КАК ГруппыПользователейСостав
				|ГДЕ
				|	ГруппыПользователейСостав.Ссылка В ИЕРАРХИИ
				|			(ВЫБРАТЬ
				|				ВТ.Группа
				|			ИЗ
				|				ВТ_СписокГрупп КАК ВТ)";
	
	Запрос.УстановитьПараметр("Пользователь", ТекущийПользователь);
	
	Результат = Запрос.Выполнить();	
	Если Результат.Пустой() Тогда
		Список.Добавить(ТекущийПользователь);
	Иначе
		Выборка = Результат.Выбрать();
		Пока Выборка.Следующий() Цикл
			Список.Добавить(Выборка.Пользователь);
		КонецЦикла;
	КонецЕсли;
	
	Возврат Список;
	
КонецФункции

&НаСервере
Процедура ЗаполнитьЗадачи(ТолькоМоиЗадачи)
	
	ПараметрыЗаполнения = ПолучитьДанныеПоВзаимодействиям(Пользователи.ТекущийПользователь(), ТолькоМоиЗадачи);
	
	Элементы.ЗапланированоНаСегодня.Заголовок = "Запланировано на сегодня (" + Строка(ПараметрыЗаполнения.Запланированные) + ")";
	Элементы.ЗавершеноСегодня.Заголовок = "Завершено сегодня (" + Строка(ПараметрыЗаполнения.Завершенные) + ")";
	Элементы.ПросроченныеВзаимодействия.Заголовок = "Просроченные взаимодействия (" + Строка(ПараметрыЗаполнения.Просроченные) + ")";
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьДанныеПоВзаимодействиям(ТекущийПользователь, ТолькоМоиЗадачи)
	
	СписокПользователей = Новый Массив;
	Если ТолькоМоиЗадачи Тогда
		СписокПользователей.Добавить(ТекущийПользователь);
	Иначе
		СписокПользователей = ПолучитьСписокСотрудников(ТекущийПользователь);
	КонецЕсли;
	
	ПараметрыЗаполнения = Новый Структура("Запланированные, Завершенные, Просроченные", 0, 0, 0);	

	Запрос = Новый Запрос;
	Запрос.Текст = 
				"ВЫБРАТЬ РАЗРЕШЕННЫЕ
				|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ Взаимодействия.Ссылка) КАК Запланированные,
				|	0 КАК Завершенные,
				|	0 КАК Просроченные
				|ПОМЕСТИТЬ ВременнаяТаблица
				|ИЗ
				|	ЖурналДокументов.Взаимодействия КАК Взаимодействия
				|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПредметыПапкиВзаимодействий КАК ПредметыПапкиВзаимодействий
				|		ПО Взаимодействия.Ссылка = ПредметыПапкиВзаимодействий.Взаимодействие
				|ГДЕ
				|	Взаимодействия.Ответственный В(&Менеджер)
				|	И ЕСТЬNULL(ПредметыПапкиВзаимодействий.РассмотретьПосле, ДАТАВРЕМЯ(1, 1, 1)) МЕЖДУ НАЧАЛОПЕРИОДА(&Период, ДЕНЬ) И КОНЕЦПЕРИОДА(&Период, ДЕНЬ)
				|	И ВЫБОР
				|			КОГДА ЕСТЬNULL(ПредметыПапкиВзаимодействий.Рассмотрено, ЛОЖЬ)
				|				ТОГДА ""Завершено""
				|			КОГДА Взаимодействия.Отменено
				|				ТОГДА ""Отменено""
				|			ИНАЧЕ ""Запланировано""
				|		КОНЕЦ = ""Запланировано""
				|
				|ОБЪЕДИНИТЬ ВСЕ
				|
				|ВЫБРАТЬ
				|	0,
				|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ Взаимодействия.Ссылка),
				|	0
				|ИЗ
				|	ЖурналДокументов.Взаимодействия КАК Взаимодействия
				|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПредметыПапкиВзаимодействий КАК ПредметыПапкиВзаимодействий
				|		ПО Взаимодействия.Ссылка = ПредметыПапкиВзаимодействий.Взаимодействие
				|ГДЕ
				|	Взаимодействия.Ответственный В(&Менеджер)
				|	И ВЫБОР
				|			КОГДА ЕСТЬNULL(ПредметыПапкиВзаимодействий.Рассмотрено, ЛОЖЬ) = ИСТИНА
				|					ИЛИ Взаимодействия.Отменено = ИСТИНА
				|				ТОГДА Взаимодействия.ДатаОкончания
				|			ИНАЧЕ ЕСТЬNULL(ПредметыПапкиВзаимодействий.РассмотретьПосле, ДАТАВРЕМЯ(1, 1, 1))
				|		КОНЕЦ МЕЖДУ НАЧАЛОПЕРИОДА(&Период, ДЕНЬ) И КОНЕЦПЕРИОДА(&Период, ДЕНЬ)
				|	И ВЫБОР
				|			КОГДА ЕСТЬNULL(ПредметыПапкиВзаимодействий.Рассмотрено, ЛОЖЬ)
				|				ТОГДА ""Завершено""
				|			КОГДА Взаимодействия.Отменено
				|				ТОГДА ""Отменено""
				|			ИНАЧЕ ""Запланировано""
				|		КОНЕЦ = ""Завершено""
				|
				|ОБЪЕДИНИТЬ ВСЕ
				|
				|ВЫБРАТЬ
				|	0,
				|	0,
				|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ Взаимодействия.Ссылка)
				|ИЗ
				|	ЖурналДокументов.Взаимодействия КАК Взаимодействия
				|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПредметыПапкиВзаимодействий КАК ПредметыПапкиВзаимодействий
				|		ПО Взаимодействия.Ссылка = ПредметыПапкиВзаимодействий.Взаимодействие
				|ГДЕ
				|	Взаимодействия.Автор В(&Менеджер)
				|	И ЕСТЬNULL(ПредметыПапкиВзаимодействий.РассмотретьПосле, ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)) < НАЧАЛОПЕРИОДА(&Период, ДЕНЬ)
				|	И ВЫБОР
				|			КОГДА ЕСТЬNULL(ПредметыПапкиВзаимодействий.Рассмотрено, ЛОЖЬ)
				|				ТОГДА ""Завершено""
				|			КОГДА Взаимодействия.Отменено
				|				ТОГДА ""Отменено""
				|			ИНАЧЕ ""Запланировано""
				|		КОНЕЦ = ""Запланировано""
				|;
				|
				|////////////////////////////////////////////////////////////////////////////////
				|ВЫБРАТЬ
				|	СУММА(ВременнаяТаблица.Запланированные) КАК Запланированные,
				|	СУММА(ВременнаяТаблица.Завершенные) КАК Завершенные,
				|	СУММА(ВременнаяТаблица.Просроченные) КАК Просроченные
				|ИЗ
				|	ВременнаяТаблица КАК ВременнаяТаблица";

	Запрос.УстановитьПараметр("Менеджер", СписокПользователей);
	Запрос.УстановитьПараметр("Период",	ТекущаяДата());
	
	Результат = Запрос.Выполнить();
	Если Не Результат.Пустой() Тогда
		Выборка = Результат.Выбрать();
		Выборка.Следующий();
		ЗаполнитьЗначенияСвойств(ПараметрыЗаполнения, Выборка);
	КонецЕсли;
		
	Возврат ПараметрыЗаполнения;
	
КонецФункции

&НаСервереБезКонтекста
Функция ПолучитьСписокСотрудников(ТекущийПользователь)
	
	СписокРезультат = Новый СписокЗначений;
	СписокРезультат.Добавить(ТекущийПользователь);
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
				"ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
				|	ГруппыПользователейСостав.Ссылка КАК Группа
				|ПОМЕСТИТЬ ВТ_СписокГрупп
				|ИЗ
				|	Справочник.ГруппыПользователей.Состав КАК ГруппыПользователейСостав
				|ГДЕ
				|	ГруппыПользователейСостав.Пользователь = &Пользователь
				|;
				|
				|////////////////////////////////////////////////////////////////////////////////
				|ВЫБРАТЬ
				|	ГруппыПользователейСостав.Ссылка КАК Пользователь
				|ИЗ
				|	Справочник.ГруппыПользователей.Состав КАК ГруппыПользователейСостав
				|ГДЕ
				|	ГруппыПользователейСостав.Ссылка В
				|			(ВЫБРАТЬ
				|				ВТ_СписокГрупп.Группа КАК Группа
				|			ИЗ
				|				ВТ_СписокГрупп КАК ВТ_СписокГрупп)
				|
				|СГРУППИРОВАТЬ ПО
				|	ГруппыПользователейСостав.Ссылка";
	
	Запрос.УстановитьПараметр("Пользователь", ТекущийПользователь);
	
	Результат = Запрос.Выполнить();
	Если НЕ Результат.Пустой() Тогда
		
		Выборка = Результат.Выбрать();
		Пока Выборка.Следующий() Цикл
			СписокРезультат.Добавить(Выборка.Пользователь);
		КонецЦикла;
	КонецЕсли;
	
	Возврат СписокРезультат;
	
КонецФункции

&НаКлиенте
Процедура ОбновитьЗадачи()
	
	ЗаполнитьЗадачи(ТолькоМоиЗадачи);
	
КонецПроцедуры

&НаКлиенте
Процедура ОтчетПоВзаимодействиям(Команда)
	ОткрытьФорму("Отчет.ОтчетПоВзаимодействиям.Форма", Новый Структура, ЭтаФорма, ЭтаФорма);
КонецПроцедуры

&НаКлиенте
Процедура ОтчетПоИпотечнымКлиентам(Команда)
	ОткрытьФорму("Отчет.ОтчетПоИпотечнымКлиентам.Форма", Новый Структура, ЭтаФорма, ЭтаФорма);
КонецПроцедуры

&НаКлиенте
Процедура Обновить(Команда)
	ЗаполнитьЗадачи(ТолькоМоиЗадачи);
КонецПроцедуры


#КонецОбласти
