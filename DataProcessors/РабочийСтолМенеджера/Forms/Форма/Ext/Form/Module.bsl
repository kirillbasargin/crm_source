
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)	
	ОбновитьНадписиГиперСсылок(ЭтотОбъект);
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	ПодключитьОбработчикОжидания("ОбновитьКоличествоДокументовВЗаголовкахГиперСсылок", 300);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура АктуальныеВзаимодействия(Команда)
	
	//++ Юкаев Роман 20171222 ( //Задача 750934
	ТекущийПользователь = ПользователиКлиентСервер.ТекущийПользователь();
	Если ОтборПоОтветственному Тогда
		Ответственный = ТекущийПользователь;
	Иначе
		Ответственный = СписокПользователейГрупп(ТекущийПользователь);
	КонецЕсли;
	
	ПараметрыОткрываемойФормы = Новый Структура("Отбор, Ответственный", Неопределено, Ответственный);
	
	ПараметрыОткрываемойФормы.Вставить("УстанавливатьОтборАктуальныеВзаимодействия", Истина);
	ПараметрыОткрываемойФормы.Вставить("ОтборДляМенеджераФилиала", Истина);
	ПараметрыОткрываемойФормы.Вставить("Проект", ПолучитьСписокПроектов(ТекущийПользователь));
	
	ФормаСпискаПараметрическая = ПолучитьФорму("ЖурналДокументов.Взаимодействия.Форма.ФормаСпискаПараметрическая", ПараметрыОткрываемойФормы, ЭтотОбъект, ЭтаФорма.УникальныйИдентификатор);
	Если ФормаСпискаПараметрическая.Открыта() Тогда
		ФормаСпискаПараметрическая.КонтекстВыбора = ПараметрыОткрываемойФормы;
		//ФормаСпискаПараметрическая.Закрыть();
	КонецЕсли;
	
	ФормаСпискаПараметрическая.Открыть();
	//ОткрытьФорму("ЖурналДокументов.Взаимодействия.Форма.ФормаСпискаПараметрическая", ПараметрыОткрываемойФормы, ЭтотОбъект);
	//-- Юкаев Роман 20171222 )
	
КонецПроцедуры

&НаКлиенте
Процедура ЗавершенныеВзаимодействия(Команда)
	
	//++ Юкаев Роман 20171222 ( //Задача 750934
	//Если ОтборПоОтветственному Тогда
	Ответственный = ПользователиКлиентСервер.ТекущийПользователь();
	//Иначе
	//	Ответственный = СписокПользователейГрупп(ПользователиКлиентСервер.ТекущийПользователь());
	//КонецЕсли;
	
	ПараметрыОткрываемойФормы = Новый Структура("Отбор, Ответственный", Неопределено, Ответственный);
	ПараметрыОткрываемойФормы.Вставить("УстанавливатьОтборЗавершенныеВзаимодействия", Истина);
	ПараметрыОткрываемойФормы.Вставить("ОтборДляМенеджераФилиала", Истина);
	ПараметрыОткрываемойФормы.Вставить("Проект", ПолучитьСписокПроектов(Ответственный));
	
	ФормаСпискаПараметрическая = ПолучитьФорму("ЖурналДокументов.Взаимодействия.Форма.ФормаСпискаПараметрическая", ПараметрыОткрываемойФормы, ЭтотОбъект, ЭтаФорма.УникальныйИдентификатор);
	Если ФормаСпискаПараметрическая.Открыта() Тогда
		ФормаСпискаПараметрическая.КонтекстВыбора = ПараметрыОткрываемойФормы;
		//ФормаСпискаПараметрическая.Закрыть();
	КонецЕсли;
	ФормаСпискаПараметрическая.Открыть();
	
	//ОткрытьФорму("ЖурналДокументов.Взаимодействия.Форма.ФормаСпискаПараметрическая", ПараметрыОткрываемойФормы, ЭтотОбъект);
	//-- Юкаев Роман 20171222 )	
КонецПроцедуры

&НаКлиенте
Процедура ПросроченныеВзаимодействия(Команда)
	
	//++ Юкаев Роман 20171225 ( //Задача 750934
	ТекущийПользователь = ПользователиКлиентСервер.ТекущийПользователь();
	Если ОтборПоОтветственному Тогда
		Ответственный = ТекущийПользователь;
	Иначе
		Ответственный = СписокПользователейГрупп(ТекущийПользователь);
	КонецЕсли;
	
	ПараметрыОткрываемойФормы = Новый Структура;
	ПараметрыОткрываемойФормы.Вставить("Отбор", Неопределено);
	ПараметрыОткрываемойФормы.Вставить("Ответственный", Ответственный);
	ПараметрыОткрываемойФормы.Вставить("УстанавливатьОтборПросроченныеВзаимодействия", Истина);
	ПараметрыОткрываемойФормы.Вставить("ОтборДляМенеджераФилиала", Истина);
	ПараметрыОткрываемойФормы.Вставить("Проект", ПолучитьСписокПроектов(ТекущийПользователь));
	
	ФормаСпискаПараметрическая = ПолучитьФорму("ЖурналДокументов.Взаимодействия.Форма.ФормаСпискаПараметрическая", ПараметрыОткрываемойФормы, ЭтотОбъект, ЭтаФорма.УникальныйИдентификатор);
	Если ФормаСпискаПараметрическая.Открыта() Тогда
		ФормаСпискаПараметрическая.КонтекстВыбора = ПараметрыОткрываемойФормы;
		//ФормаСпискаПараметрическая.Закрыть();
	КонецЕсли;
	ФормаСпискаПараметрическая.Открыть();
	
	//ОткрытьФорму("ЖурналДокументов.Взаимодействия.Форма.ФормаСпискаПараметрическая", ПараметрыОткрываемойФормы, ЭтотОбъект);
	//-- Юкаев Роман 20171225 )
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаявкиОтГПТ(Команда)   
	
	МассивСтатусов = Новый Массив;
	МассивСтатусов.Добавить(ПредопределенноеЗначение("Перечисление.СтатусЗаявкиCallBack.НеОбработано"));
	МассивСтатусов.Добавить(ПредопределенноеЗначение("Перечисление.СтатусЗаявкиCallBack.БылиПопыткиДозвониться"));
	
	//++ Юкаев Роман 20171225 ( //Задача 750934
	ТекущийПользователь = ПользователиКлиентСервер.ТекущийПользователь();
	//-- Юкаев Роман 20171225 )
	
	ПараметрыОткрываемойФормы = Новый Структура("Отбор", Новый Структура("Ответственный,Статус,Проведен,Проект",
																		ТекущийПользователь,МассивСтатусов,Истина,ПолучитьСписокПроектов(ТекущийПользователь)));
	
	ОткрытьФорму("Документ.ЗаявкаНаЗвонок.ФормаСписка", ПараметрыОткрываемойФормы, ЭтотОбъект);

КонецПроцедуры

&НаКлиенте
Процедура ЗаявкиНаСделкуНаСогласовании(Команда)
	
	//++ Юкаев Роман 20171222 ( //Задача 750934
	СписокСтатусов = СписокСтатусов("Согласована,СогласованиеЮриста,СогласованиеИБ,СогласованиеУПН");
	
	//МассивСтатусов = Новый Массив;
	//МассивСтатусов.Добавить(ПредопределенноеЗначение("Перечисление.СтатусыСделки.СогласованиеЮриста"));
	//МассивСтатусов.Добавить(ПредопределенноеЗначение("Перечисление.СтатусыСделки.СогласованиеУПН"));	
	
	//ПараметрыОткрываемойФормы = Новый Структура("Отбор", Новый Структура("Проведен, Статус", Истина, МассивСтатусов)); 	
	
	ПараметрыОткрываемойФормы = Новый Структура(); 	
	
	ПараметрыОткрываемойФормы.Вставить("Статус", СписокСтатусов);
	ТекущийПользователь = ПользователиКлиентСервер.ТекущийПользователь();
	
	Если ОтборПоОтветственному Тогда 
		ПараметрыОткрываемойФормы.Вставить("Автор", ТекущийПользователь);
	Иначе
		ПараметрыОткрываемойФормы.Вставить("Автор", СписокПользователейГрупп(ТекущийПользователь));
	КонецЕсли;
	
	ТекущаяДата = ТекущаяДата();
	ПараметрыОткрываемойФормы.Вставить("ДатаОт", НачалоДня(ТекущаяДата));
	ПараметрыОткрываемойФормы.Вставить("ДатаДо", КонецДня(ТекущаяДата));
	
	ПараметрыОткрываемойФормы.Вставить("Проведен", Истина);
	ПараметрыОткрываемойФормы.Вставить("Проект", ПолучитьСписокПроектов(ТекущийПользователь));
	ПараметрыОткрываемойФормы.Вставить("ОтборДляМенеджераФилиала", Истина);
	
	//ПараметрыОткрываемойФормы.Вставить("УстанавливатьОтборЗаявкиНаСделкуНаСогласовании", Истина);
	
	ФормаСписка = ПолучитьФорму("Документ.ЗаявкаНаСделку.ФормаСписка", ПараметрыОткрываемойФормы, ЭтотОбъект,ЭтаФорма);
	Если ФормаСписка.Открыта() Тогда
		//ФормаСписка.Закрыть();
		ФормаСписка.КонтекстВыбора = ПараметрыОткрываемойФормы;
	КонецЕсли;
	ФормаСписка.Открыть();
	
	//ОткрытьФорму("Документ.ЗаявкаНаСделку.ФормаСписка", ПараметрыОткрываемойФормы, ЭтотОбъект, ЭтаФорма);
	//-- Юкаев Роман 20171222 )
	
КонецПроцедуры

&НаКлиенте
Процедура Шахматка(Команда)
	
	ОткрытьФорму("Отчет.Шахматка.Форма.ФормаОтчета", , ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура ОтчетПоВзаимодействиям(Команда)
	ОткрытьФорму("Отчет.ОтчетПоВзаимодействиям.Форма", , ЭтотОбъект);
КонецПроцедуры

&НаКлиенте
Процедура РабочийСтолКлиента(Команда)
	ОткрытьФорму("Обработка.РаботаСКлиентом.Форма.Форма");
КонецПроцедуры

&НаКлиенте
Процедура ОтчетМенеджера(Команда)
	
	ПараметрыОткрываемойФормы = Новый Структура("Отбор,СформироватьПриОткрытии", 
													Новый Структура("Стадия", ПредопределенноеЗначение("Перечисление.СтадииЗапроса.Переговоры")),
													Истина);
	ОткрытьФорму("Отчет.ОтчетМенеджера.ФормаОбъекта", ПараметрыОткрываемойФормы, ЭтотОбъект);

КонецПроцедуры

&НаКлиенте
Процедура ОтчетПоИсточникамРекламы(Команда)
	
	ОткрытьФорму("Отчет.ОтчетПоИсточникамРекламы.ФормаОбъекта",, ЭтотОбъект);

КонецПроцедуры

&НаКлиенте
Процедура ЭффективностьМенеджера(Команда)
	
	ПараметрыОткрываемойФормы = Новый Структура("СформироватьПриОткрытии", Истина);
	ОткрытьФорму("Отчет.ЭффективностьМенеджера.ФормаОбъекта", ПараметрыОткрываемойФормы, ЭтотОбъект);

КонецПроцедуры

&НаКлиенте
Процедура ЭффективностьМенеджера_ОПО_ЗУ(Команда)
	
	ПараметрыОткрываемойФормы = Новый Структура("СформироватьПриОткрытии", Истина);
	ОткрытьФорму("Отчет.ЭффективностьМенеджера_ОПО_ЗУ.ФормаОбъекта", ПараметрыОткрываемойФормы, ЭтотОбъект);

КонецПроцедуры

&НаКлиенте
Процедура ОтборПоОтветственномуПриИзменении(Элемент)
	
	ОбновитьКоличествоДокументовВЗаголовкахГиперСсылок();
	
КонецПроцедуры

&НаКлиенте
Процедура ОчередиБронирования(Команда)
	
	//++ Юкаев Роман 20180110 ( //750934
	ТекущийПользователь = ПользователиКлиентСервер.ТекущийПользователь();
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("ОтборДляМенеджераФилиала", Истина);
	ПараметрыФормы.Вставить("Ответственный", ТекущийПользователь);
	ПараметрыФормы.Вставить("НачалоДня", НачалоДня(ТекущаяДата()));
	ПараметрыФормы.Вставить("Проект", ПолучитьСписокПроектов(ТекущийПользователь, Истина));
	
	ФормаСписка = ПолучитьФорму("РегистрСведений.СрокиБронированияОбъектовНедвижимости.Форма.СрокиИОчередьБронированияПоОтветственному", ПараметрыФормы, ЭтотОбъект, ЭтаФорма);
	Если ФормаСписка.Открыта() Тогда
		//ФормаСписка.Закрыть();
		ФормаСписка.КонтекстВыбора = ПараметрыФормы;
	КонецЕсли;
	ФормаСписка.Открыть();
	//-- Юкаев Роман 20180110 )
КонецПроцедуры

&НаКлиенте
Процедура ОтчетПоВыданнымПодаркам(Команда)
	ОткрытьФорму("Отчет.ОтчетПоВыданнымПодаркам.Форма", , ЭтотОбъект);
КонецПроцедуры                                       

&НаКлиенте
Процедура ПодборКвартир(Команда)
	ОткрытьФорму("Отчет.Квартирограмма.Форма.ФормаПодбора", , ЭтотОбъект);
КонецПроцедуры

&НаКлиенте
Процедура ПодборЗУ(Команда)	
	ОткрытьФорму("Отчет.Квартирограмма.Форма.ФормаПодбора", Новый Структура("Отбор, КлючТекущегоВарианта", Новый Структура("ПроектВидНедвижимости", ПредопределенноеЗначение("Перечисление.ВидыОбъектовНедвижимости.ЗемельныйУчасток")), ОпределитьВариантОтчета()), ЭтотОбъект);	
КонецПроцедуры	

&НаКлиенте
Процедура ОтчетПоВзаимодействиямЗУ(Команда)
	ОткрытьФорму("Отчет.ОтчетПоВзаимодействиямЗУ.Форма.ФормаОтчета", , ЭтотОбъект);
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция ОпределитьВариантОтчета()
	
	КлючТекущегоВарианта = "ЗУ";
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ ПЕРВЫЕ 1
	|	ВариантыОтчетов.Ссылка КАК ВариантСсылка,
	|	ВариантыОтчетов.КлючВарианта КАК КлючВарианта
	|ИЗ
	|	Справочник.ВариантыОтчетов КАК ВариантыОтчетов
	|ГДЕ
	|	ВариантыОтчетов.Отчет.Имя = ""Квартирограмма""
	|	И ВариантыОтчетов.Автор = &Автор
	|	И ВариантыОтчетов.Пользовательский
	|	И ВариантыОтчетов.Наименование ПОДОБНО &КлючВарианта
	|	И НЕ ВариантыОтчетов.ПометкаУдаления";
	
	Запрос.УстановитьПараметр("КлючВарианта", КлючТекущегоВарианта + "%");
	Запрос.УстановитьПараметр("Автор", ПользователиКлиентСервер.АвторизованныйПользователь());
	
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		КлючТекущегоВарианта = Выборка.КлючВарианта;	
	КонецЕсли;
	
	Возврат КлючТекущегоВарианта;	
		
КонецФункции

&НаКлиенте
Процедура ОбновитьКоличествоДокументовВЗаголовкахГиперСсылок()

	ОбновитьНадписиГиперСсылок(ЭтотОбъект);
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьСтруктураНаСервере(Менеджер, ОтборПоОтветственному)

	Результат = Новый Структура("ЗапланированныеВзаимодействия, ЗавершенныеВзаимодействия, ПросроченныеВзаимодействия, ЗаявкиОтГПТ, ЗаявкиНаСделку, ОчередиБронирования", 0, 0, 0, 0, 0, 0);	

	//++ Юкаев Роман 20180110 ( //750934
	Запрос = Новый Запрос;
	Запрос.Текст = 
				"ВЫБРАТЬ
				|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ Взаимодействия.Ссылка) КАК КоличествоДокументов
				|ИЗ
				|	ЖурналДокументов.Взаимодействия КАК Взаимодействия
				|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ПредметыПапкиВзаимодействий КАК ПредметыПапкиВзаимодействий
				|		ПО Взаимодействия.Ссылка = ПредметыПапкиВзаимодействий.Взаимодействие
				|ГДЕ
				|	Взаимодействия.Ответственный В(&Менеджер)
				|	И ЕСТЬNULL(ПредметыПапкиВзаимодействий.РассмотретьПосле, ДАТАВРЕМЯ(1, 1, 1)) МЕЖДУ &НачалоДня И &КонецДня
				|	И ВЫБОР
				|			КОГДА ЕСТЬNULL(ПредметыПапкиВзаимодействий.Рассмотрено, ЛОЖЬ)
				|				ТОГДА ""Завершено""
				|			КОГДА Взаимодействия.Отменено
				|				ТОГДА ""Отменено""
				|			ИНАЧЕ ""Запланировано""
				|		КОНЕЦ = ""Запланировано""
				|	И ВЫБОР
				|			КОГДА ПредметыПапкиВзаимодействий.Предмет ССЫЛКА Документ.Запрос
				|				ТОГДА ПредметыПапкиВзаимодействий.Предмет.Проект В (&СписокПроектов)
				|			ИНАЧЕ ЛОЖЬ
				|		КОНЕЦ
				|;
				|
				|////////////////////////////////////////////////////////////////////////////////
				|ВЫБРАТЬ
				|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ Взаимодействия.Ссылка) КАК КоличествоДокументов
				|ИЗ
				|	ЖурналДокументов.Взаимодействия КАК Взаимодействия
				|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ПредметыПапкиВзаимодействий КАК ПредметыПапкиВзаимодействий
				|		ПО Взаимодействия.Ссылка = ПредметыПапкиВзаимодействий.Взаимодействие
				|ГДЕ
				|	Взаимодействия.Ответственный В(&Менеджер)
				|	И ЕСТЬNULL(ПредметыПапкиВзаимодействий.РассмотретьПосле, ДАТАВРЕМЯ(1, 1, 1)) МЕЖДУ &НачалоДня И &КонецДня
				|	И ВЫБОР
				|			КОГДА ЕСТЬNULL(ПредметыПапкиВзаимодействий.Рассмотрено, ЛОЖЬ)
				|				ТОГДА ""Завершено""
				|			КОГДА Взаимодействия.Отменено
				|				ТОГДА ""Отменено""
				|			ИНАЧЕ ""Запланировано""
				|		КОНЕЦ = ""Завершено""
				|	И ВЫБОР
				|			КОГДА ПредметыПапкиВзаимодействий.Предмет ССЫЛКА Документ.Запрос
				|				ТОГДА ПредметыПапкиВзаимодействий.Предмет.Проект В (&СписокПроектов)
				|			ИНАЧЕ ЛОЖЬ
				|		КОНЕЦ
				|;
				|
				|////////////////////////////////////////////////////////////////////////////////
				|ВЫБРАТЬ
				|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ Взаимодействия.Ссылка) КАК КоличествоДокументов
				|ИЗ
				|	ЖурналДокументов.Взаимодействия КАК Взаимодействия
				|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ПредметыПапкиВзаимодействий КАК ПредметыПапкиВзаимодействий
				|		ПО Взаимодействия.Ссылка = ПредметыПапкиВзаимодействий.Взаимодействие
				|ГДЕ
				|	Взаимодействия.Автор В(&Менеджер)
				|	И ЕСТЬNULL(ПредметыПапкиВзаимодействий.РассмотретьПосле, ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)) < &НачалоДня
				|	И ВЫБОР
				|			КОГДА ЕСТЬNULL(ПредметыПапкиВзаимодействий.Рассмотрено, ЛОЖЬ)
				|				ТОГДА ""Завершено""
				|			КОГДА Взаимодействия.Отменено
				|				ТОГДА ""Отменено""
				|			ИНАЧЕ ""Запланировано""
				|		КОНЕЦ = ""Запланировано""
				|	И ВЫБОР
				|			КОГДА ПредметыПапкиВзаимодействий.Предмет ССЫЛКА Документ.Запрос
				|				ТОГДА ПредметыПапкиВзаимодействий.Предмет.Проект В (&СписокПроектов)
				|			ИНАЧЕ ЛОЖЬ
				|		КОНЕЦ
				|;
				|
				|////////////////////////////////////////////////////////////////////////////////
				|ВЫБРАТЬ
				|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ЗаявкаНаЗвонок.Ссылка) КАК КоличествоДокументов
				|ИЗ
				|	Документ.ЗаявкаНаЗвонок КАК ЗаявкаНаЗвонок
				|ГДЕ
				|	ЗаявкаНаЗвонок.Проведен
				|	И ЗаявкаНаЗвонок.Ответственный В(&ТекущийПользователь)
				|	И ЗаявкаНаЗвонок.Статус В (ЗНАЧЕНИЕ(Перечисление.СтатусЗаявкиCallBack.НеОбработано), ЗНАЧЕНИЕ(Перечисление.СтатусЗаявкиCallBack.БылиПопыткиДозвониться))
				|	И ЗаявкаНаЗвонок.Проект В(&СписокПроектов)
				|;
				|
				|////////////////////////////////////////////////////////////////////////////////
				|ВЫБРАТЬ
				|	ЗаявкаНаСделку.Ссылка КАК Ссылка
				|ПОМЕСТИТЬ ВТ_СписокЗаявокНаСделкуПоМенеджеру
				|ИЗ
				|	Документ.ЗаявкаНаСделку КАК ЗаявкаНаСделку
				|ГДЕ
				|	ЗаявкаНаСделку.Проведен
				|	И ЗаявкаНаСделку.Дата МЕЖДУ &НачалоДня И &КонецДня
				|	И ЗаявкаНаСделку.Автор В(&ТекущийПользователь)
				|	И ЗаявкаНаСделку.Проект В(&СписокПроектов)
				|;
				|
				|////////////////////////////////////////////////////////////////////////////////
				|ВЫБРАТЬ
				|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ СтатусыСделкиСрезПоследних.ЗаявкаНаСделку) КАК КоличествоДокументов
				|ИЗ
				|	РегистрСведений.СтатусыСделки.СрезПоследних(
				|			,
				|			ЗаявкаНаСделку В
				|				(ВЫБРАТЬ
				|					ВТ_СписокЗаявокНаСделкуПоМенеджеру.Ссылка КАК Ссылка
				|				ИЗ
				|					ВТ_СписокЗаявокНаСделкуПоМенеджеру КАК ВТ_СписокЗаявокНаСделкуПоМенеджеру)) КАК СтатусыСделкиСрезПоследних
				|;
				|
				|////////////////////////////////////////////////////////////////////////////////
				|ВЫБРАТЬ
				|	МАКСИМУМ(ВложенныйЗапрос.ДатаКонцаСрокаБронирования) КАК ДатаКонцаСрокаБронирования,
				|	ВложенныйЗапрос.Регистратор КАК Регистратор,
				|	ВложенныйЗапрос.Период КАК Период,
				|	ВложенныйЗапрос.Ответственный КАК Ответственный,
				|	ВложенныйЗапрос.Клиент КАК Клиент,
				|	ВложенныйЗапрос.ДлительностьСрокаБронирования КАК ДлительностьСрокаБронирования,
				|	ВложенныйЗапрос.ОбъектНедвижимостиВладелец КАК ОбъектСтроительства,
				|	ВложенныйЗапрос.ОбъектНедвижимости КАК ОбъектНедвижимости
				|ПОМЕСТИТЬ ВТ_Брони
				|ИЗ
				|	(ВЫБРАТЬ
				|		СрокиБронированияОбъектовНедвижимостиСрезПоследних.ДлительностьСрокаБронирования КАК ДлительностьСрокаБронирования,
				|		СрокиБронированияОбъектовНедвижимостиСрезПоследних.ДатаКонцаСрокаБронирования КАК ДатаКонцаСрокаБронирования,
				|		СрокиБронированияОбъектовНедвижимостиСрезПоследних.Регистратор КАК Регистратор,
				|		СрокиБронированияОбъектовНедвижимостиСрезПоследних.Период КАК Период,
				|		СрокиБронированияОбъектовНедвижимостиСрезПоследних.Регистратор.Ответственный КАК Ответственный,
				|		СрокиБронированияОбъектовНедвижимостиСрезПоследних.Клиент КАК Клиент,
				|		СрокиБронированияОбъектовНедвижимостиСрезПоследних.ОбъектНедвижимости КАК ОбъектНедвижимости,
				|		СрокиБронированияОбъектовНедвижимостиСрезПоследних.ОбъектНедвижимости.Владелец КАК ОбъектНедвижимостиВладелец
				|	ИЗ
				|		РегистрСведений.СрокиБронированияОбъектовНедвижимости.СрезПоследних(
				|				,
				|				Регистратор.Ответственный В (&ТекущийПользователь)
				|					И ДатаКонцаСрокаБронирования >= &НачалоДня) КАК СрокиБронированияОбъектовНедвижимостиСрезПоследних
				|	ГДЕ
				|		СрокиБронированияОбъектовНедвижимостиСрезПоследних.ДокументЗапрос.Проект В(&СписокПроектов)
				|	
				|	ОБЪЕДИНИТЬ ВСЕ
				|	
				|	ВЫБРАТЬ
				|		ОчередьБронированияОстатки.ДокументБронирования.ДлительностьСрокаБронирования,
				|		ДАТАВРЕМЯ(1, 1, 1),
				|		ОчередьБронированияОстатки.ДокументБронирования,
				|		ОчередьБронированияОстатки.ДокументБронирования.Дата,
				|		ОчередьБронированияОстатки.ДокументБронирования.Ответственный,
				|		ОчередьБронированияОстатки.ДокументБронирования.Клиент,
				|		ОчередьБронированияОстатки.ОбъектНедвижимости,
				|		ОчередьБронированияОстатки.ОбъектНедвижимости.Владелец
				|	ИЗ
				|		РегистрНакопления.ОчередьБронирования.Остатки(, ДокументБронирования.Ответственный В (&ТекущийПользователь)) КАК ОчередьБронированияОстатки
				|	ГДЕ
				|		ОчередьБронированияОстатки.ДокументБронирования.Проект В(&СписокПроектов)) КАК ВложенныйЗапрос
				|
				|СГРУППИРОВАТЬ ПО
				|	ВложенныйЗапрос.Регистратор,
				|	ВложенныйЗапрос.Период,
				|	ВложенныйЗапрос.Ответственный,
				|	ВложенныйЗапрос.Клиент,
				|	ВложенныйЗапрос.ДлительностьСрокаБронирования,
				|	ВложенныйЗапрос.ОбъектНедвижимости,
				|	ВложенныйЗапрос.ОбъектНедвижимостиВладелец
				|;
				|
				|////////////////////////////////////////////////////////////////////////////////
				|ВЫБРАТЬ
				|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ВТ_Брони.Регистратор) КАК КоличествоДокументов
				|ИЗ
				|	ВТ_Брони КАК ВТ_Брони";
	
	//|ГДЕ
	//|	СтатусыСделкиСрезПоследних.Статус В (ЗНАЧЕНИЕ(Перечисление.СтатусыСделки.СогласованиеЮриста), ЗНАЧЕНИЕ(Перечисление.СтатусыСделки.СогласованиеУПН))";
	
	Если ОтборПоОтветственному Тогда
		Запрос.УстановитьПараметр("Менеджер",	Менеджер);
	Иначе
		Запрос.УстановитьПараметр("Менеджер",	СписокПользователейГрупп(Менеджер));
		//Запрос.Текст = СтрЗаменить(Запрос.Текст, "И ЗаявкаНаСделку.Автор В(&Менеджер)", "");
	КонецЕсли;
	
	Запрос.УстановитьПараметр("НачалоДня",	НачалоДня(ТекущаяДата()));
	Запрос.УстановитьПараметр("КонецДня",	КонецДня(ТекущаяДата()));
	Запрос.УстановитьПараметр("НачалоМесяца", НачалоМесяца(ТекущаяДата()));
	Запрос.УстановитьПараметр("КонецМесяца", КонецМесяца(ТекущаяДата()));
	
	Запрос.УстановитьПараметр("ТекущийПользователь", ПользователиКлиентСервер.ТекущийПользователь());
	Запрос.УстановитьПараметр("СписокПроектов", ПолучитьСписокПроектов(Менеджер));
	
	//-- Юкаев Роман 20180110 )
	
	РезультатПакета = Запрос.ВыполнитьПакет();
	
	//Запланированные на текущий день взаимодействия
	ДобавитьЗначениеВРезультат(РезультатПакета, 0, Результат, "ЗапланированныеВзаимодействия");
	//Завершеные на текущий день взаимодействия
	ДобавитьЗначениеВРезультат(РезультатПакета, 1, Результат, "ЗавершенныеВзаимодействия");
	//Просроченные взаимодействия
	ДобавитьЗначениеВРезультат(РезультатПакета, 2, Результат, "ПросроченныеВзаимодействия");
	//Заявки ГПТ
	ДобавитьЗначениеВРезультат(РезультатПакета, 3, Результат, "ЗаявкиОтГПТ");
	//Заявки на сделку
	ДобавитьЗначениеВРезультат(РезультатПакета, 5, Результат, "ЗаявкиНаСделку");
	//ОчередиБронирования
	ДобавитьЗначениеВРезультат(РезультатПакета, 7, Результат, "ОчередиБронирования");	
	
	Возврат Результат;	
	
КонецФункции // ПолучитьСтруктураНаСервере()()

&НаСервереБезКонтекста
Процедура ДобавитьЗначениеВРезультат(РезультатПакета, НомерПакета, Результат, ИмяПараметра)
	
	Если НЕ РезультатПакета[НомерПакета].Пустой() Тогда
		Выборка = РезультатПакета[НомерПакета].Выбрать();
		Выборка.Следующий();
		Результат[ИмяПараметра] = Выборка.КоличествоДокументов;
	КонецЕсли;	
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура ОбновитьНадписиГиперСсылок(Форма)

	СтрКоличествоДокументов = ПолучитьСтруктураНаСервере(ПользователиКлиентСервер.ТекущийПользователь(), Форма.ОтборПоОтветственному);
	
	Элементы = Форма.Элементы;
	
	Элементы.АктуальныеВзаимодействия.Заголовок 	= "Запланировано на сегодня (" + СтрКоличествоДокументов.ЗапланированныеВзаимодействия + ")";
	Элементы.ЗавершенныеВзаимодействия.Заголовок 	= "Завершено сегодня (" + СтрКоличествоДокументов.ЗавершенныеВзаимодействия + ")";
	Элементы.ПросроченныйВзаимодействия.Заголовок 	= "Просроченные взаимодействия (" + СтрКоличествоДокументов.ПросроченныеВзаимодействия + ")";	
	Элементы.ЗаявкиОтГПТ.Заголовок 					= "Заявки от ГПТ (" + СтрКоличествоДокументов.ЗаявкиОтГПТ + ")";	
	Элементы.ЗаявкиНаСделкуНаСогласовании.Заголовок	= "Заявки на сделку на согласовании (" + СтрКоличествоДокументов.ЗаявкиНаСделку + ")";
	Элементы.ОчередиБронирования.Заголовок	= "Очереди бронирования (" + СтрКоличествоДокументов.ОчередиБронирования + ")";

КонецПроцедуры // ОбновитьНадписиГиперссылок()

&НаСервереБезКонтекста
Функция ПолучитьОтборПоОтветственному(Ответственный)
	
	СписокОтбора = Новый СписокЗначений;
	СписокОтбора.Добавить(Ответственный);
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
	|	ГруппыПользователейСостав.Пользователь КАК Пользователь
	|ИЗ
	|	Справочник.ГруппыПользователей.Состав КАК ГруппыПользователейСостав
	|ГДЕ
	|	ГруппыПользователейСостав.Пользователь = &Пользователь
	|
	|СГРУППИРОВАТЬ ПО
	|	ГруппыПользователейСостав.Пользователь";
	
	Запрос.УстановитьПараметр("Пользователь", Ответственный);
	
	РезультатЗапроса = Запрос.Выполнить();	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		СписокОтбора.Добавить(ВыборкаДетальныеЗаписи.Пользователь);
	КонецЦикла;
	
	Возврат СписокОтбора;
	
КонецФункции

//++ Юкаев Роман 20171222 ( //Задача 750934
&НаКлиенте
Процедура СписокОН(Команда)
	ОткрытьФорму("Обработка.РабочийСтолМенеджера.Форма.ФормаРСКвартирограмма", Новый Структура, ЭтотОбъект);
КонецПроцедуры

&НаСервереБезКонтекста
Функция СписокСтатусов(СписокИмен)
	
	Список = Новый СписокЗначений;
	МассивИмен = СтрРазделить(СписокИмен, ",", Ложь);
	
	Для Каждого Имя Из МассивИмен Цикл
		ЗначениеПеречисления = Метаданные.Перечисления.СтатусыСделки.ЗначенияПеречисления.Найти(Имя);
		Если ЗначениеПеречисления <> Неопределено Тогда
			Список.Добавить(Перечисления.СтатусыСделки[Имя]);
		КонецЕсли;
	КонецЦикла;
	
	Возврат Список;
	
КонецФункции

&НаСервереБезКонтекста
Функция ПолучитьСписокОбъектовСтроительства(ТекущийПользователь)
	
	СписокРезультат = Новый СписокЗначений;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
				"ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
				|	ГруппыПользователейСостав.Ссылка КАК Группа
				|ПОМЕСТИТЬ ВТ_СписокГрупп
				|ИЗ
				|	Справочник.ГруппыПользователей.Состав КАК ГруппыПользователейСостав
				|ГДЕ
				|	ГруппыПользователейСостав.Пользователь = &Пользователь
				|;
				|
				|////////////////////////////////////////////////////////////////////////////////
				|ВЫБРАТЬ РАЗРЕШЕННЫЕ
				|	СоответствиеГруппПользователейОфисам.Проект КАК Проект
				|ПОМЕСТИТЬ ВТ_Проекты
				|ИЗ
				|	РегистрСведений.СоответствиеГруппПользователейОфисам КАК СоответствиеГруппПользователейОфисам
				|ГДЕ
				|	СоответствиеГруппПользователейОфисам.ГруппаПользователей В
				|			(ВЫБРАТЬ
				|				ВТ_СписокГрупп.Группа КАК Группа
				|			ИЗ
				|				ВТ_СписокГрупп КАК ВТ_СписокГрупп)
				|
				|СГРУППИРОВАТЬ ПО
				|	СоответствиеГруппПользователейОфисам.Проект
				|;
				|
				|////////////////////////////////////////////////////////////////////////////////
				|ВЫБРАТЬ
				|	ОбъектыСтроительства.Ссылка КАК Ссылка
				|ИЗ
				|	Справочник.ОбъектыСтроительства КАК ОбъектыСтроительства
				|ГДЕ
				|	ОбъектыСтроительства.Проект В
				|			(ВЫБРАТЬ
				|				ВТ_Проекты.Проект КАК Проект
				|			ИЗ
				|				ВТ_Проекты КАК ВТ_Проекты)
				|	И НЕ ОбъектыСтроительства.ЭтоГруппа";
	
	Запрос.УстановитьПараметр("Пользователь", ТекущийПользователь);
	
	Результат = Запрос.Выполнить();
	Если НЕ Результат.Пустой() Тогда
		
		Выборка = Результат.Выбрать();
		Пока Выборка.Следующий() Цикл
			СписокРезультат.Добавить(Выборка.Ссылка);
		КонецЦикла;
	КонецЕсли;
	
	ОтчетОбъект = Отчеты.КвартирограммаМенеджер.Создать();
	КомпоновщикНастроек = ОтчетОбъект.КомпоновщикНастроек;
	Настройки = КомпоновщикНастроек.ПолучитьНастройки();
	Настройки.ПараметрыДанных.УстановитьЗначениеПараметра("ОбъектСтроительства", СписокРезультат);
	КомпоновщикНастроек.ЗагрузитьНастройки(Настройки);
	
	Возврат КомпоновщикНастроек.ПользовательскиеНастройки;
	
КонецФункции

&НаСервереБезКонтекста
Функция СписокПользователейГрупп(ТекущийПользователь)

	СписокРезультат = Новый СписокЗначений;
	СписокРезультат.Добавить(ТекущийПользователь);
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
				"ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
				|	ГруппыПользователейСостав.Ссылка КАК Группа
				|ПОМЕСТИТЬ ВТ_СписокГрупп
				|ИЗ
				|	Справочник.ГруппыПользователей.Состав КАК ГруппыПользователейСостав
				|ГДЕ
				|	ГруппыПользователейСостав.Пользователь = &Пользователь
				|;
				|
				|////////////////////////////////////////////////////////////////////////////////
				|ВЫБРАТЬ
				|	ГруппыПользователейСостав.Ссылка КАК Группа
				|ИЗ
				|	Справочник.ГруппыПользователей.Состав КАК ГруппыПользователейСостав
				|ГДЕ
				|	ГруппыПользователейСостав.Ссылка В
				|			(ВЫБРАТЬ
				|				ВТ_СписокГрупп.Группа КАК Группа
				|			ИЗ
				|				ВТ_СписокГрупп КАК ВТ_СписокГрупп)
				|
				|СГРУППИРОВАТЬ ПО
				|	ГруппыПользователейСостав.Ссылка";
	
	Запрос.УстановитьПараметр("Пользователь", ТекущийПользователь);
	
	Результат = Запрос.Выполнить();
	Если Не Результат.Пустой() Тогда
		Выборка = Результат.Выбрать();
		Пока Выборка.Следующий() Цикл
			СписокРезультат.Добавить(Выборка.Группа);
		КонецЦикла;
	КонецЕсли;
	
	Возврат СписокРезультат;
	
КонецФункции

&НаСервереБезКонтекста
Функция ПолучитьСписокПроектов(Пользователь, ВМассив = Ложь)
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
	               |	ГруппыПользователейСостав.Ссылка КАК Ссылка
	               |ПОМЕСТИТЬ ВТ_Группы
	               |ИЗ
	               |	Справочник.ГруппыПользователей.Состав КАК ГруппыПользователейСостав
	               |ГДЕ
	               |	ГруппыПользователейСостав.Пользователь = &Пользователь
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ РАЗРЕШЕННЫЕ
	               |	СоответствиеГруппПользователейОфисам.Проект КАК Проект
	               |ИЗ
	               |	РегистрСведений.СоответствиеГруппПользователейОфисам КАК СоответствиеГруппПользователейОфисам
	               |ГДЕ
	               |	СоответствиеГруппПользователейОфисам.ГруппаПользователей В
	               |			(ВЫБРАТЬ
	               |				ВТ_Группы.Ссылка КАК Ссылка
	               |			ИЗ
	               |				ВТ_Группы КАК ВТ_Группы)
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	СоответствиеГруппПользователейОфисам.Проект";
	
	Запрос.УстановитьПараметр("Пользователь", Пользователь);
	
	Результат = Запрос.Выполнить();
	
	Если Результат.Пустой() Тогда
		Возврат Неопределено;
	Иначе
		Выборка = Результат.Выбрать();
		Если ВМассив Тогда
			Список = Новый Массив;
		Иначе
			Список = Новый СписокЗначений;
		КонецЕсли;
		
		Пока Выборка.Следующий() Цикл
			Список.Добавить(Выборка.Проект);
		КонецЦикла;
		
		Возврат Список;
	КонецЕсли;
	
КонецФункции
//-- Юкаев Роман 20171222 )
#КонецОбласти