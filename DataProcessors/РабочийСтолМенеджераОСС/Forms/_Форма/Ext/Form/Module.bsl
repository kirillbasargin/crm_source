
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)	
	ОбновитьНадписиГиперСсылок(ЭтотОбъект);
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	ПодключитьОбработчикОжидания("ОбновитьКоличествоДокументовВЗаголовкахГиперСсылок", 300);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура АктуальныеВзаимодействия(Команда)
	
	Если ОтборПоОтветственному Тогда
		Ответственный = ПользователиКлиентСервер.ТекущийПользователь();
	Иначе
		Ответственный = ПолучитьОтборПоОтветственному(ПользователиКлиентСервер.ТекущийПользователь());
	КонецЕсли;
	
	ПараметрыОткрываемойФормы = Новый Структура("Отбор, Ответственный", Неопределено, Ответственный);	
	ПараметрыОткрываемойФормы.Вставить("УстанавливатьОтборАктуальныеВзаимодействия", Истина); //Новый Структура("Рассмотрено", Ложь)
	
	ФормаСпискаПараметрическая = ПолучитьФорму("ЖурналДокументов.Взаимодействия.Форма.ФормаСпискаПараметрическая", ПараметрыОткрываемойФормы, ЭтотОбъект);
	Если ФормаСпискаПараметрическая.Открыта() Тогда
		ФормаСпискаПараметрическая.Закрыть();
	КонецЕсли;
	//ФормаСпискаПараметрическая.Открыть();  
	
	ОткрытьФорму("ЖурналДокументов.Взаимодействия.Форма.ФормаСпискаПараметрическая", ПараметрыОткрываемойФормы, ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура ЗавершенныеВзаимодействия(Команда)
	
	Если ОтборПоОтветственному Тогда
		Ответственный = ПользователиКлиентСервер.ТекущийПользователь();
	Иначе
		Ответственный = ПолучитьОтборПоОтветственному(ПользователиКлиентСервер.ТекущийПользователь());
	КонецЕсли;
	
	ПараметрыОткрываемойФормы = Новый Структура("Отбор, Ответственный", Неопределено, Ответственный);
	ПараметрыОткрываемойФормы.Вставить("УстанавливатьОтборЗавершенныеВзаимодействия", Истина);
	
	ФормаСпискаПараметрическая = ПолучитьФорму("ЖурналДокументов.Взаимодействия.Форма.ФормаСпискаПараметрическая", ПараметрыОткрываемойФормы, ЭтотОбъект);
	Если ФормаСпискаПараметрическая.Открыта() Тогда
		ФормаСпискаПараметрическая.Закрыть();
	КонецЕсли;
	//ФормаСпискаПараметрическая.Открыть();  
	
	ОткрытьФорму("ЖурналДокументов.Взаимодействия.Форма.ФормаСпискаПараметрическая", ПараметрыОткрываемойФормы, ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура ПросроченныеВзаимодействия(Команда)
	
	Если ОтборПоОтветственному Тогда
		Ответственный = ПользователиКлиентСервер.ТекущийПользователь();
	Иначе
		Ответственный = ПолучитьОтборПоОтветственному(ПользователиКлиентСервер.ТекущийПользователь());
	КонецЕсли;
	
	//Ответственный = ПользователиКлиентСервер.ТекущийПользователь();
	
	ПараметрыОткрываемойФормы = Новый Структура("Отбор, Ответственный", Неопределено, Ответственный);		
	ПараметрыОткрываемойФормы.Вставить("УстанавливатьОтборПросроченныеВзаимодействия", Истина);
	
	ФормаСпискаПараметрическая = ПолучитьФорму("ЖурналДокументов.Взаимодействия.Форма.ФормаСпискаПараметрическая", ПараметрыОткрываемойФормы, ЭтотОбъект);
	Если ФормаСпискаПараметрическая.Открыта() Тогда
		ФормаСпискаПараметрическая.Закрыть();
	КонецЕсли;
	//ФормаСпискаПараметрическая.Открыть();
		
	ОткрытьФорму("ЖурналДокументов.Взаимодействия.Форма.ФормаСпискаПараметрическая", ПараметрыОткрываемойФормы, ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаявкиОтГПТ(Команда)   
	
	МассивСтатусов = Новый Массив;
	МассивСтатусов.Добавить(ПредопределенноеЗначение("Перечисление.СтатусЗаявкиCallBack.НеОбработано"));
	МассивСтатусов.Добавить(ПредопределенноеЗначение("Перечисление.СтатусЗаявкиCallBack.БылиПопыткиДозвониться"));
	
	ПараметрыОткрываемойФормы = Новый Структура("Отбор", Новый Структура("Ответственный,Статус,Проведен",
																			ПользователиКлиентСервер.ТекущийПользователь(),МассивСтатусов,Истина));
	
	ОткрытьФорму("Документ.ЗаявкаНаЗвонок.ФормаСписка", ПараметрыОткрываемойФормы, ЭтотОбъект);

КонецПроцедуры

&НаКлиенте
Процедура ЗаявкиНаСделкуНаСогласовании(Команда)
	
	МассивСтатусов = Новый Массив;
	МассивСтатусов.Добавить(ПредопределенноеЗначение("Перечисление.СтатусыСделки.СогласованиеЮриста"));
	МассивСтатусов.Добавить(ПредопределенноеЗначение("Перечисление.СтатусыСделки.СогласованиеУПН"));	
	
	//ПараметрыОткрываемойФормы = Новый Структура("Отбор", Новый Структура("Проведен, Статус", Истина, МассивСтатусов)); 	
	
	ПараметрыОткрываемойФормы = Новый Структура(); 	
	
	Если ОтборПоОтветственному Тогда 
		ПараметрыОткрываемойФормы.Вставить("Автор", ПользователиКлиентСервер.ТекущийПользователь()); 
	КонецЕсли;
	
	ПараметрыОткрываемойФормы.Вставить("УстанавливатьОтборЗаявкиНаСделкуНаСогласовании", Истина);
	
	ФормаСпискаПараметрическая = ПолучитьФорму("Документ.ЗаявкаНаСделку.ФормаСписка", ПараметрыОткрываемойФормы, ЭтотОбъект);
	Если ФормаСпискаПараметрическая.Открыта() Тогда
		ФормаСпискаПараметрическая.Закрыть();
	КонецЕсли;
	
	ОткрытьФорму("Документ.ЗаявкаНаСделку.ФормаСписка", ПараметрыОткрываемойФормы, ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура Шахматка(Команда)
	
	ОткрытьФорму("Отчет.Шахматка.Форма.ФормаОтчета", , ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура РабочийСтолКлиента(Команда)
	ОткрытьФорму("Обработка.РаботаСКлиентом.Форма.Форма");
КонецПроцедуры

&НаКлиенте
Процедура ОтчетМенеджера(Команда)
	
	ПараметрыОткрываемойФормы = Новый Структура("Отбор,СформироватьПриОткрытии", 
													Новый Структура("Стадия", ПредопределенноеЗначение("Перечисление.СтадииЗапроса.Переговоры")),
													Истина);
	ОткрытьФорму("Отчет.ОтчетМенеджера.ФормаОбъекта", ПараметрыОткрываемойФормы, ЭтотОбъект);

КонецПроцедуры

&НаКлиенте
Процедура ОтборПоОтветственномуПриИзменении(Элемент)
	
	ОбновитьКоличествоДокументовВЗаголовкахГиперСсылок();
	
КонецПроцедуры

&НаКлиенте
Процедура ОтчетПоВзаимодействиям(Команда)
	ОткрытьФорму("Отчет.ОтчетПоВзаимодействиям.Форма", , ЭтотОбъект);
КонецПроцедуры

&НаКлиенте
Процедура ОтчетПоВыданнымПодаркам(Команда)
	ОткрытьФорму("Отчет.ОтчетПоВыданнымПодаркам.Форма", , ЭтотОбъект);
КонецПроцедуры                                       

&НаКлиенте
Процедура ПодборЗУ(Команда)	
	ОткрытьФорму("Отчет.Квартирограмма.Форма.ФормаПодбора", Новый Структура("Отбор, КлючТекущегоВарианта", Новый Структура("ПроектВидНедвижимости", ПредопределенноеЗначение("Перечисление.ВидыОбъектовНедвижимости.ЗемельныйУчасток")), ОпределитьВариантОтчета()), ЭтотОбъект);	
КонецПроцедуры	

&НаКлиенте
Процедура ОтчетПоВзаимодействиямЗУ(Команда)
	ОткрытьФорму("Отчет.ОтчетПоВзаимодействиямЗУ.Форма.ФормаОтчета", , ЭтотОбъект);
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция ОпределитьВариантОтчета()
	
	КлючТекущегоВарианта = "ЗУ";
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ ПЕРВЫЕ 1
	|	ВариантыОтчетов.Ссылка КАК ВариантСсылка,
	|	ВариантыОтчетов.КлючВарианта КАК КлючВарианта
	|ИЗ
	|	Справочник.ВариантыОтчетов КАК ВариантыОтчетов
	|ГДЕ
	|	ВариантыОтчетов.Отчет.Имя = ""Квартирограмма""
	|	И ВариантыОтчетов.Автор = &Автор
	|	И ВариантыОтчетов.Пользовательский
	|	И ВариантыОтчетов.Наименование ПОДОБНО &КлючВарианта
	|	И НЕ ВариантыОтчетов.ПометкаУдаления";
	
	Запрос.УстановитьПараметр("КлючВарианта", КлючТекущегоВарианта + "%");
	Запрос.УстановитьПараметр("Автор", ПользователиКлиентСервер.АвторизованныйПользователь());
	
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		КлючТекущегоВарианта = Выборка.КлючВарианта;	
	КонецЕсли;
	
	Возврат КлючТекущегоВарианта;	
		
КонецФункции

&НаКлиенте
Процедура ОбновитьКоличествоДокументовВЗаголовкахГиперСсылок()

	ОбновитьНадписиГиперСсылок(ЭтотОбъект);
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьСтруктураНаСервере(Менеджер, ОтборПоОтветственному)

	Результат = Новый Структура("ЗапланированныеВзаимодействия, ЗавершенныеВзаимодействия, ПросроченныеВзаимодействия, ЗаявкиОтГПТ, ЗаявкиНаСделку", 0, 0, 0, 0, 0);	

	Запрос = Новый Запрос;
	Запрос.Текст = 
	//Запланированные на текущий день взаимодействия
	"ВЫБРАТЬ
	|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ Взаимодействия.Ссылка) КАК КоличествоДокументов
	|ИЗ
	|	ЖурналДокументов.Взаимодействия КАК Взаимодействия
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПредметыПапкиВзаимодействий КАК ПредметыПапкиВзаимодействий
	|		ПО Взаимодействия.Ссылка = ПредметыПапкиВзаимодействий.Взаимодействие
	|ГДЕ
	|	Взаимодействия.Ответственный В(&Менеджер)
	|	И ЕСТЬNULL(ПредметыПапкиВзаимодействий.РассмотретьПосле, ДАТАВРЕМЯ(1, 1, 1)) МЕЖДУ &НачалоДня И &КонецДня
	|	И ЕСТЬNULL(ПредметыПапкиВзаимодействий.Рассмотрено, ЛОЖЬ) = ЛОЖЬ
	|	И НЕ Взаимодействия.Отменено
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ Взаимодействия.Ссылка) КАК КоличествоДокументов
	|ИЗ
	|	ЖурналДокументов.Взаимодействия КАК Взаимодействия
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПредметыПапкиВзаимодействий КАК ПредметыПапкиВзаимодействий
	|		ПО Взаимодействия.Ссылка = ПредметыПапкиВзаимодействий.Взаимодействие
	|ГДЕ
	|	Взаимодействия.Ответственный В(&Менеджер)
	|	И ЕСТЬNULL(ПредметыПапкиВзаимодействий.РассмотретьПосле, ДАТАВРЕМЯ(1, 1, 1)) МЕЖДУ &НачалоДня И &КонецДня
	|	И ЕСТЬNULL(ПредметыПапкиВзаимодействий.Рассмотрено, ЛОЖЬ) = ИСТИНА
	|	И НЕ Взаимодействия.Отменено
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ Взаимодействия.Ссылка) КАК КоличествоДокументов
	|ИЗ
	|	ЖурналДокументов.Взаимодействия КАК Взаимодействия
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПредметыПапкиВзаимодействий КАК ПредметыПапкиВзаимодействий
	|		ПО Взаимодействия.Ссылка = ПредметыПапкиВзаимодействий.Взаимодействие
	|ГДЕ
	|	Взаимодействия.Автор В(&Менеджер)
	|	И ЕСТЬNULL(ПредметыПапкиВзаимодействий.РассмотретьПосле, ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)) < &НачалоДня
	|	И ЕСТЬNULL(ПредметыПапкиВзаимодействий.Рассмотрено, ЛОЖЬ) = ЛОЖЬ
	|	И НЕ Взаимодействия.Отменено
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ЗаявкаНаЗвонок.Ссылка) КАК КоличествоДокументов
	|ИЗ
	|	Документ.ЗаявкаНаЗвонок КАК ЗаявкаНаЗвонок
	|ГДЕ
	|	ЗаявкаНаЗвонок.Проведен
	|	И ЗаявкаНаЗвонок.Ответственный В(&Менеджер)
	|	И ЗаявкаНаЗвонок.Статус В (ЗНАЧЕНИЕ(Перечисление.СтатусЗаявкиCallBack.НеОбработано), ЗНАЧЕНИЕ(Перечисление.СтатусЗаявкиCallBack.БылиПопыткиДозвониться))
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЗаявкаНаСделку.Ссылка КАК Ссылка
	|ПОМЕСТИТЬ ВТ_СписокЗаявокНаСделкуПоМенеджеру
	|ИЗ
	|	Документ.ЗаявкаНаСделку КАК ЗаявкаНаСделку
	|ГДЕ
	|	ЗаявкаНаСделку.Проведен
	|	И ЗаявкаНаСделку.Дата МЕЖДУ &НачалоДня И &КонецДня
	|	И ЗаявкаНаСделку.Автор В(&Менеджер)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ СтатусыСделкиСрезПоследних.ЗаявкаНаСделку) КАК КоличествоДокументов
	|ИЗ
	|	РегистрСведений.СтатусыСделки.СрезПоследних(
	|			,
	|			ЗаявкаНаСделку В
	|				(ВЫБРАТЬ
	|					ВТ_СписокЗаявокНаСделкуПоМенеджеру.Ссылка КАК Ссылка
	|				ИЗ
	|					ВТ_СписокЗаявокНаСделкуПоМенеджеру КАК ВТ_СписокЗаявокНаСделкуПоМенеджеру)) КАК СтатусыСделкиСрезПоследних";
	//|ГДЕ
	//|	СтатусыСделкиСрезПоследних.Статус В (ЗНАЧЕНИЕ(Перечисление.СтатусыСделки.СогласованиеЮриста), ЗНАЧЕНИЕ(Перечисление.СтатусыСделки.СогласованиеУПН))";
	
	Если ОтборПоОтветственному Тогда
		Запрос.УстановитьПараметр("Менеджер",	Менеджер);
	Иначе
		Запрос.УстановитьПараметр("Менеджер",	ПолучитьОтборПоОтветственному(Менеджер));
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "И ЗаявкаНаСделку.Автор В(&Менеджер)", "");
	КонецЕсли;
	
	Запрос.УстановитьПараметр("НачалоДня",	НачалоДня(ТекущаяДата()));
	Запрос.УстановитьПараметр("КонецДня",	КонецДня(ТекущаяДата()));
	Запрос.УстановитьПараметр("НачалоМесяца", НачалоМесяца(ТекущаяДата()));
	Запрос.УстановитьПараметр("КонецМесяца", КонецМесяца(ТекущаяДата()));	
	
	РезультатПакета = Запрос.ВыполнитьПакет();
	
	//Запланированные на текущий день взаимодействия
	ДобавитьЗначениеВРезультат(РезультатПакета, 0, Результат, "ЗапланированныеВзаимодействия");
	//Завершеные на текущий день взаимодействия
	ДобавитьЗначениеВРезультат(РезультатПакета, 1, Результат, "ЗавершенныеВзаимодействия");
	//Просроченные взаимодействия
	ДобавитьЗначениеВРезультат(РезультатПакета, 2, Результат, "ПросроченныеВзаимодействия");
	//Заявки ГПТ
	ДобавитьЗначениеВРезультат(РезультатПакета, 3, Результат, "ЗаявкиОтГПТ");
	//Заявки на сделку
	ДобавитьЗначениеВРезультат(РезультатПакета, 5, Результат, "ЗаявкиНаСделку");
	
	Возврат Результат;	
	
КонецФункции // ПолучитьСтруктураНаСервере()()

&НаСервереБезКонтекста
Процедура ДобавитьЗначениеВРезультат(РезультатПакета, НомерПакета, Результат, ИмяПараметра)
	
	Если НЕ РезультатПакета[НомерПакета].Пустой() Тогда
		Выборка = РезультатПакета[НомерПакета].Выбрать();
		Выборка.Следующий();
		Результат[ИмяПараметра] = Выборка.КоличествоДокументов;
	КонецЕсли;	
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура ОбновитьНадписиГиперСсылок(Форма)

	СтрКоличествоДокументов = ПолучитьСтруктураНаСервере(ПользователиКлиентСервер.ТекущийПользователь(), Форма.ОтборПоОтветственному);
	
	Элементы = Форма.Элементы;
	
	Элементы.АктуальныеВзаимодействия.Заголовок 	= "Запланировано на сегодня (" + СтрКоличествоДокументов.ЗапланированныеВзаимодействия + ")";
	Элементы.ЗавершенныеВзаимодействия.Заголовок 	= "Завершено сегодня (" + СтрКоличествоДокументов.ЗавершенныеВзаимодействия + ")";
	Элементы.ПросроченныйВзаимодействия.Заголовок 	= "Просроченные взаимодействия (" + СтрКоличествоДокументов.ПросроченныеВзаимодействия + ")";	
	Элементы.ЗаявкиОтГПТ.Заголовок 					= "Заявки от ГПТ (" + СтрКоличествоДокументов.ЗаявкиОтГПТ + ")";	
	Элементы.ЗаявкиНаСделкуНаСогласовании.Заголовок	= "Заявки на сделку на согласовании (" + СтрКоличествоДокументов.ЗаявкиНаСделку + ")";

КонецПроцедуры // ОбновитьНадписиГиперссылок()

&НаСервереБезКонтекста
Функция ПолучитьОтборПоОтветственному(Ответственный)
	
	СписокОтбора = Новый СписокЗначений;
	СписокОтбора.Добавить(Ответственный);
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
	|	ГруппыПользователейСостав.Ссылка КАК Группа
	|ИЗ
	|	Справочник.ГруппыПользователей.Состав КАК ГруппыПользователейСостав
	|ГДЕ
	|	ГруппыПользователейСостав.Пользователь = &Пользователь";
	
	Запрос.УстановитьПараметр("Пользователь", Ответственный);
	
	РезультатЗапроса = Запрос.Выполнить();	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		СписокОтбора.Добавить(ВыборкаДетальныеЗаписи.Группа);
	КонецЦикла;
	
	Возврат СписокОтбора;
	
КонецФункции
	
#КонецОбласти