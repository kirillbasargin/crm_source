
&НаСервереБезКонтекста
Функция ПолучитьТекстРассылки(Мероприятие)
	
	Возврат Мероприятие.ТекстРассылки;
	
КонецФункции

&НаКлиенте
Процедура МаркетинговоеМероприятиеПриИзменении(Элемент)
	
	Объект.ТекстРассылки = ПолучитьТекстРассылки(Объект.МаркетинговоеМероприятие);
	
КонецПроцедуры

&НаКлиенте
Процедура ПривязкаКЗапросуПриИзменении(Элемент)
	
	Элементы.Проект.Видимость = ПривязкаКЗапросу;
	Элементы.ПолучателиРассылкиЗапрос.Видимость = ПривязкаКЗапросу;
	
	Если Объект.ПолучателиРассылки.Количество() > 0 И ПривязкаКЗапросу Тогда
		ЗаполнитьДанныеЗапрос();			
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьДанныеЗапрос()
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		//"ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
		//|	ЗаявкаНаСделку.ДокументОснование КАК ДокументОснование
		//|ПОМЕСТИТЬ ВТ_Заявки
		//|ИЗ
		//|	Документ.ЗаявкаНаСделку.Дольщики КАК ЗаявкаНаСделкуДольщики
		//|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ЗаявкаНаСделку КАК ЗаявкаНаСделку
		//|		ПО ЗаявкаНаСделкуДольщики.Ссылка = ЗаявкаНаСделку.Ссылка
		//|ГДЕ
		//|	ЗаявкаНаСделкуДольщики.Клиент В(&Клиент)
		//|	И ЗаявкаНаСделку.Проект = &Проект
		//|;
		//|
		//|////////////////////////////////////////////////////////////////////////////////
		//|ВЫБРАТЬ
		//|	Запрос.Дата КАК Дата,
		//|	ЗапросУчастники.Ссылка КАК Запрос,
		//|	ЗапросУчастники.Клиент КАК Клиент
		//|ИЗ
		//|	Документ.Запрос.Участники КАК ЗапросУчастники
		//|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.Запрос КАК Запрос
		//|		ПО ЗапросУчастники.Ссылка = Запрос.Ссылка
		//|ГДЕ
		//|	НЕ ЗапросУчастники.Ссылка В
		//|				(ВЫБРАТЬ
		//|					ВТ_Заявки.ДокументОснование КАК ДокументОснование
		//|				ИЗ
		//|					ВТ_Заявки КАК ВТ_Заявки)
		//|	И ЗапросУчастники.Клиент В(&Клиент)
		//|	И Запрос.Проект = &Проект
		//|
		//|УПОРЯДОЧИТЬ ПО
		//|	Дата УБЫВ";
		"ВЫБРАТЬ
		|	Запрос.Дата КАК Дата,
		|	ЗапросУчастники.Ссылка КАК Запрос,
		|	ЗапросУчастники.Клиент КАК Клиент
		|ИЗ
		|	Документ.Запрос.Участники КАК ЗапросУчастники
		|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.Запрос КАК Запрос
		|		ПО ЗапросУчастники.Ссылка = Запрос.Ссылка
		|ГДЕ
		|	ЗапросУчастники.Клиент В(&Клиент)
		|	И Запрос.Проект = &Проект
		|
		|УПОРЯДОЧИТЬ ПО
		|	Дата УБЫВ";
	
	Запрос.УстановитьПараметр("Клиент", Объект.ПолучателиРассылки.Выгрузить(,"Клиент"));
	Запрос.УстановитьПараметр("Проект", Объект.Проект);
	
	Результат = Запрос.Выполнить();
	
	Если Не Результат.Пустой() Тогда
		
		Выборка = Результат.Выбрать();
		
		Пока Выборка.Следующий() Цикл
			
			СписокСтрок = Объект.ПолучателиРассылки.НайтиСтроки(Новый Структура("Клиент", Выборка.Клиент));
			
			Если СписокСтрок.Количество() > 0 Тогда
				Для Каждого СтСписка Из СписокСтрок Цикл
					СтСписка.Запрос = Выборка.Запрос;
				КонецЦикла;
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПроизвольныйЗапрос(Команда)
	
	ПараметрыФормы = Новый Структура("Объект", Объект);
	
	ОткрытьФорму("Обработка.РассылкаКлиентамСМС.Форма.Форма", ПараметрыФормы, ЭтаФорма, ЭтаФорма,,, Новый ОписаниеОповещения("ОбработкаЗапроса", ЭтотОбъект), РежимОткрытияОкнаФормы.БлокироватьОкноВладельца); 
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаЗапроса(Результат, ДопПараметры) Экспорт
	
	Если Результат <> Неопределено И Результат <> "" Тогда
		Объект.ПолучателиРассылки.Очистить();
		
		Для Каждого Ст Из Результат Цикл
			Если ЗначениеЗаполнено(Ст) Тогда
				НС = Объект.ПолучателиРассылки.Добавить();
				НС.Клиент = Ст;
			КонецЕсли;
		КонецЦикла;
		
		Если ПривязкаКЗапросу Тогда
			ЗаполнитьДанныеЗапрос();
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Элементы.Проект.Видимость = ПривязкаКЗапросу;
	Элементы.ПолучателиРассылкиЗапрос.Видимость = ПривязкаКЗапросу;
	Объект.КогдаОтправлять = ТекущаяДата();
	ДатаОкончания = КонецДня(ТекущаяДата()) - 2*60*60-59*60-59;
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучателиРассылкиПриИзмененииНаСервере(Клиент, Проект)
	
	Если ЗначениеЗаполнено(Клиент) Тогда
		Запрос = Новый Запрос;
		Запрос.Текст = 
			"ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
			|	ЗаявкаНаСделку.ДокументОснование КАК ДокументОснование
			|ПОМЕСТИТЬ ВТ_Заявки
			|ИЗ
			|	Документ.ЗаявкаНаСделку.Дольщики КАК ЗаявкаНаСделкуДольщики
			|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ЗаявкаНаСделку КАК ЗаявкаНаСделку
			|		ПО ЗаявкаНаСделкуДольщики.Ссылка = ЗаявкаНаСделку.Ссылка
			|ГДЕ
			|	ЗаявкаНаСделкуДольщики.Клиент = &Клиент
			|	И ЗаявкаНаСделку.Проект = &Проект
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	Запрос.Дата КАК Дата,
			|	ЗапросУчастники.Ссылка КАК Запрос
			|ИЗ
			|	Документ.Запрос.Участники КАК ЗапросУчастники
			|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.Запрос КАК Запрос
			|		ПО ЗапросУчастники.Ссылка = Запрос.Ссылка
			|ГДЕ
			|	НЕ ЗапросУчастники.Ссылка В
			|				(ВЫБРАТЬ
			|					ВТ_Заявки.ДокументОснование КАК ДокументОснование
			|				ИЗ
			|					ВТ_Заявки КАК ВТ_Заявки)
			|	И ЗапросУчастники.Клиент = &Клиент
			|	И Запрос.Проект = &Проект
			|
			|УПОРЯДОЧИТЬ ПО
			|	Дата УБЫВ";
		
		Запрос.УстановитьПараметр("Клиент", Клиент);
		Запрос.УстановитьПараметр("Проект", Проект);
		
		Результат = Запрос.Выполнить();
		Если Результат.Пустой() Тогда
			Возврат Документы.Запрос.ПустаяСсылка();
		Иначе
			Выборка = Результат.Выбрать();
			Выборка.Следующий();
			
			Возврат Выборка.Запрос;
		КонецЕсли;
	КонецЕсли;
	
КонецФункции

&НаКлиенте
Процедура ПолучателиРассылкиПриИзменении(Элемент)
	
	Если ПривязкаКЗапросу Тогда
		ТекущиеДанные = Элементы.ПолучателиРассылки.ТекущиеДанные;
		ТекущиеДанные.Запрос = ПолучателиРассылкиПриИзмененииНаСервере(ТекущиеДанные.Клиент, Объект.Проект);
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ВыполнитьВОбработкеНаСервере()
	
	//Для Каждого СтрокаКлиент Из Объект.ПолучателиРассылки Цикл
	//	СформироватьДокумент(ТекущаяДата, Объект.КогдаОтправлять, Объект.МаркетинговоеМероприятие, СтрокаКлиент.Клиент, СтрокаКлиент.Запрос, Объект.ТекстРассылки, ПривязкаКЗапросу);
	//КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ВыполнитьВОбработке(Команда)
	//ВыполнитьВОбработкеНаСервере();
	
	//Шаг = Цел(Объект.ПолучателиРассылки.Количество() / 20);
	Шаг = ОбъемСообщений;
	Индекс = 0;
	Порядок = 1;
	ДатаОтправки = Объект.КогдаОтправлять;
	КоличествоПолучателей = Объект.ПолучателиРассылки.Количество();
	
	МассивДанных = Новый Массив;
	
	ДатаОграничение = КонецДня(Объект.КогдаОтправлять) - 2*60*60-59*60-59;
	
	Для Каждого СтрокаТаблицы Из Объект.ПолучателиРассылки Цикл
		Сформировано = Ложь;
		
		Индекс = Индекс + 1;
		
		МассивДанных.Добавить(Новый Структура("Клиент, Запрос", СтрокаТаблицы.Клиент, СтрокаТаблицы.Запрос));
		Если Индекс >= Шаг Или Индекс >= КоличествоПолучателей Тогда
			ПараметрыЗадания = Новый Структура("Дата, Мероприятие, Клиенты, Текст, СЗапросом, ОднимДокументом", ДатаОтправки, Объект.МаркетинговоеМероприятие, МассивДанных, Объект.ТекстРассылки, ПривязкаКЗапросу, ОднимДокументом);
			
			МассивПараметров = Новый Массив;
			МассивПараметров.Добавить(ПараметрыЗадания);
			
			СформироватьФоновоеЗадание(МассивПараметров, Порядок);
			
			МассивДанных.Очистить();
			ПараметрыЗадания.Очистить();
			
			Индекс = 0;
			Порядок = Порядок + 1;
			ДатаОтправки = ДатаОтправки + Периодичность * 60;
			
			Если ДатаОтправки >= ДатаОграничение Тогда
				ДатаОтправки = КонецДня(ДатаОграничение) + 1 + 9 * 60 * 60;
				ДатаОграничение = КонецДня(ДатаОтправки) - 2*60*60-59*60-59;
			КонецЕсли;
			Сформировано = Истина;
		КонецЕсли;
	КонецЦикла;
	
	Если МассивДанных.Количество() > 0 И Не Сформировано Тогда
		ПараметрыЗадания = Новый Структура("Дата, Мероприятие, Клиенты, Текст, СЗапросом, ОднимДокументом", ДатаОтправки, Объект.МаркетинговоеМероприятие, МассивДанных, Объект.ТекстРассылки, ПривязкаКЗапросу, ОднимДокументом);
			
		МассивПараметров = Новый Массив;
		МассивПараметров.Добавить(ПараметрыЗадания);
		
		СформироватьФоновоеЗадание(МассивПараметров, Порядок);
	КонецЕсли;
	
	Сообщить("Формирование СМС запущено в фоновом задании.");
	
КонецПроцедуры

&НаСервереБезКонтекста
Процедура СформироватьФоновоеЗадание(ПараметрыЗадания, Порядок)

	ВидСообщения = НСтр("ru = 'Формирование фоновых заданий для создания документов СМС по рассылке.'", ОбщегоНазначенияКлиентСервер.КодОсновногоЯзыка());
	
	ФоновыеЗадания.Выполнить("CRMРегаментныеЗадания.СформироватьДокументыСМСВФоне", ПараметрыЗадания, "ФормированиеСМС_" + Строка(Порядок), "Формирование СМС " + Строка(Порядок));
	
	ЗаписьЖурналаРегистрации(ВидСообщения, УровеньЖурналаРегистрации.Информация,,, "Сформировано фоновае задание: ФормированиеСМС_" + Строка(Порядок));
	
КонецПроцедуры

&НаСервереБезКонтекста
Процедура СформироватьДокумент(ТекущаяДата, КогдаОтправлять, МаркетинговоеМероприятие, Клиент, Запрос, ТекстСообщения, ПривязкаКЗапросу)
	
	НовыйДокумент = Документы.СообщениеSMS.СоздатьДокумент();
	НовыйДокумент.Дата = ТекущаяДата;
	НовыйДокумент.Автор = Пользователи.ТекущийПользователь();
	НовыйДокумент.Важность = Перечисления.ВариантыВажностиВзаимодействия.Обычная;
	//НовыйДокумент.ДатаАктуальностиОтправки = НовыйДокумент.Дата;
	НовыйДокумент.ДатаКогдаОтправить = КогдаОтправлять;
	НовыйДокумент.Комментарий = "Сформирвано автоматически";
	НовыйДокумент.МаркетинговоеМероприятие = МаркетинговоеМероприятие;
	
	НовыйДокумент.Ответственный = Пользователи.ТекущийПользователь();
	НовыйДокумент.Отменено = Ложь;
	НовыйДокумент.ОтправлятьВТранслите = Ложь;
	НовыйДокумент.Состояние = Перечисления.СостоянияДокументаСообщениеSMS.Исходящее;
	НовыйДокумент.СписокУчастников = Строка(Клиент);
	НовыйДокумент.ТекстСообщения = ТекстСообщения;
	НовыйДокумент.Тема = "Рассылка по маркетинговому мероприятию """ + МаркетинговоеМероприятие + """ от " + Строка(НовыйДокумент.Дата);
	
	НоваяСтрока = НовыйДокумент.Адресаты.Добавить();
	НоваяСтрока.КакСвязаться = СокрЛП(Клиент.ОсновнойТелефон);
	НоваяСтрока.Контакт = Клиент;
	НоваяСтрока.НомерДляОтправки = НоваяСтрока.КакСвязаться;
	НоваяСтрока.ПредставлениеКонтакта = Строка(Клиент);
	НоваяСтрока.СостояниеСообщения = Перечисления.СостоянияСообщенияSMS.Исходящее;
	
	//НоваяСтрока = НовыйДокумент.НаборыЗначенийДоступа.Добавить();
	//НоваяСтрока.ЗначениеДоступа
	
	Попытка
		НовыйДокумент.Записать();
	Исключение
		Сообщить("Не удалось сформировать документ по клиенту " + Клиент + " - " + ОписаниеОшибки());
	КонецПопытки;
	
	Если ПривязкаКЗапросу Тогда
		Если ЗначениеЗаполнено(Запрос) Тогда
		
			НС = РегистрыСведений.ПредметыПапкиВзаимодействий.СоздатьНаборЗаписей();
			НС.Отбор.Взаимодействие.Установить(НовыйДокумент.Ссылка);
			
			Запись = НС.Добавить();
			Запись.Взаимодействие = НовыйДокумент.Ссылка;
			Запись.Предмет = Запрос;
			
			Попытка
				НС.Записать();
			Исключение
				Сообщить("Не удалось записать предмет к документу " + Строка(НовыйДокумент));
			КонецПопытки;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПроектПриИзменении(Элемент)
	
	ЗаполнитьДанныеЗапрос();
	
КонецПроцедуры

&НаСервере
Процедура СформироватьЗвонкиНаСервере()
	
	ТекущаяДата = ТекущаяДата();
	ТекПользователь = Пользователи.ТекущийПользователь();
	
	Для Каждого СтрКлиент Из Объект.ПолучателиРассылки Цикл
		
		НовыйДокумент = Документы.ЗаявкаНаЗвонок.СоздатьДокумент();
		НовыйДокумент.Дата = ТекущаяДата;
		НовыйДокумент.Контакт = СтрКлиент.Клиент;
		НовыйДокумент.Проект = Объект.Проект;
		НовыйДокумент.МаркетинговоеМероприятие = Объект.МаркетинговоеМероприятие;
		НовыйДокумент.Автор = Пользователи.ТекущийПользователь();
		//НовыйДокумент.Ответственный = ТекПользователь;
		НовыйДокумент.ДатаРаспределения = Объект.КогдаОтправлять;
		
		НовыйДокумент.ТипВызова = Перечисления.ТипыВызовов.УстнаяЗаявка;
		НовыйДокумент.Статус = Перечисления.СтатусЗаявкиCallBack.НеОбработано;
		НовыйДокумент.ГруппаРаспределения = Перечисления.ГруппыРаспределенияЗаявок.ГПТ;
		НовыйДокумент.ЭтапРаботы = Перечисления.ЭтапыРаботыЗавок.Начальный;
		НовыйДокумент.Приоритет = Перечисления.ПриоритетыЗаявокНаЗвонок.Приоритет4;
		
		Если ПривязкаКЗапросу Тогда
			Если ЗначениеЗаполнено(СтрКлиент.Запрос) Тогда
				НовыйДокумент.ПредметВзаимодействия = СтрКлиент.Запрос;
			КонецЕсли;
		КонецЕсли;
		
		Попытка
			НовыйДокумент.Записать();
		Исключение
			Сообщить("Не удалось сформировать документ по клиенту " + СтрКлиент.Клиент + " - " + ОписаниеОшибки());
		КонецПопытки;
		
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура СформироватьЗвонки(Команда)
	//СформироватьЗвонкиНаСервере();
	
	ТекПользователь = ПользователиКлиентСервер.ТекущийПользователь();
	
	Шаг = Цел(Объект.ПолучателиРассылки.Количество() / 20);
	Индекс = 0;
	Порядок = 1;
	
	МассивДанных = Новый Массив;
	
	Для Каждого СтрокаТаблицы Из Объект.ПолучателиРассылки Цикл
		
		Индекс = Индекс + 1;
		
		МассивДанных.Добавить(Новый Структура("Клиент, Запрос", СтрокаТаблицы.Клиент, СтрокаТаблицы.Запрос));
		Если Индекс >= Шаг Тогда
			ПараметрыЗадания = Новый Структура("Дата, Мероприятие, Клиенты, Текст, СЗапросом, Пользователь, Проект", Объект.КогдаОтправлять, Объект.МаркетинговоеМероприятие, МассивДанных, Объект.ТекстРассылки, ПривязкаКЗапросу, ТекПользователь, Объект.Проект);
			
			МассивПараметров = Новый Массив;
			МассивПараметров.Добавить(ПараметрыЗадания);
			
			СформироватьФоновоеЗаданиеНаЗвонок(МассивПараметров, Порядок);
			
			МассивДанных.Очистить();
			ПараметрыЗадания.Очистить();
			
			Индекс = 0;
			Порядок = Порядок + 1;
		КонецЕсли;
	КонецЦикла;
	
	Сообщить("Формирование документов ""Заявка на звонок"" запущено в фоновых заданиях.");
	
КонецПроцедуры

&НаСервереБезКонтекста
Процедура СформироватьФоновоеЗаданиеНаЗвонок(ПараметрыЗадания, Порядок)

	ФоновыеЗадания.Выполнить("CRMРегаментныеЗадания.СформироватьДокументыЗаявкаНаЗвонокВФоне", ПараметрыЗадания, "ФормированиеЗаявкаНаЗвонок_" + Строка(Порядок), "Формирование ЗаявкаНаЗвонок " + Строка(Порядок));
	
КонецПроцедуры

&НаКлиенте
Процедура УдалитьДублиКлиентов(Команда)
	
	СписокКлиентов = Объект.ПолучателиРассылки.Выгрузить();
	Если ПривязкаКЗапросу Тогда
		СписокКлиентов.Свернуть("Клиент, Запрос");
	Иначе
		СписокКлиентов.Свернуть("Клиент");
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ДатаОкончанияПриИзменении(Элемент)
	
	Если ЗначениеЗаполнено(ДатаОкончания) Тогда
		
		Дата1 = ?(ДатаОкончания > КонецДня(ДатаОкончания) - 2*60*60-59*60-59, КонецДня(ДатаОкончания) - 2*60*60-59*60-59, ДатаОкончания);
		Дата2 = ?(Объект.КогдаОтправлять < НачалоДня(Объект.КогдаОтправлять) + 9*60*60, НачалоДня(Объект.КогдаОтправлять) + 9*60*60, Объект.КогдаОтправлять);
		
		РазностьДат = РазностьДат(Дата1, Дата2);
		
		ОбъемСообщений = Окр(Объект.ПолучателиРассылки.Количество() * ?(РазностьДат = 0, 1, Периодичность / РазностьДат), 0);
		Объект.КогдаОтправлять = Дата2;
		ДатаОкончания = Дата1;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПериодичностьПриИзменении(Элемент)
	Если ЗначениеЗаполнено(ДатаОкончания) Тогда
		
		Дата1 = ?(ДатаОкончания > КонецДня(ДатаОкончания) - 2*60*60-59*60-59, КонецДня(ДатаОкончания) - 2*60*60-59*60-59, ДатаОкончания);
		Дата2 = ?(Объект.КогдаОтправлять < НачалоДня(Объект.КогдаОтправлять) + 9*60*60, НачалоДня(Объект.КогдаОтправлять) + 9*60*60, Объект.КогдаОтправлять);
		
		РазностьДат = РазностьДат(Дата1, Дата2);
		
		ОбъемСообщений = Окр(Объект.ПолучателиРассылки.Количество() * ?(РазностьДат = 0, 1, Периодичность / РазностьДат), 0);
		Объект.КогдаОтправлять = Дата2;
		ДатаОкончания = Дата1;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ОбъемСообщенийПриИзменении(Элемент)
	
	Если ЗначениеЗаполнено(Периодичность) Тогда
		
		ДатаОкончания = Дата(1,1,1);
		
		//ОбъемСообщений = Объект.ПолучателиРассылки.Количество() * Периодичность / РазностьДат(ДатаОкончания, Объект.КогдаОтправлять);
		//Периодичность = Окр(ОбъемСообщений * РазностьДат(ДатаОкончания, Объект.КогдаОтправлять) / Объект.ПолучателиРассылки.Количество(), 0);
		
		ДатаОграничения = КонецДня(Объект.КогдаОтправлять) - 2*60*60-59*60-59; //21:00:00 
		
		МинутНаДоставку = Периодичность * Объект.ПолучателиРассылки.Количество() / ОбъемСообщений;
		Счетчик = 0;
		КогдаОтправлять = Объект.КогдаОтправлять;
		
		Пока Счетчик <= МинутНаДоставку Цикл
			ДатаОкончания = КогдаОтправлять + Счетчик * 60;
			Если ДатаОкончания >= ДатаОграничения Тогда
				КогдаОтправлять = КонецДня(ДатаОграничения) + 1 + 9 * 60 * 60; //09:00:00 следующего дня
				ДатаОграничения = КонецДня(КогдаОтправлять) - 2*60*60-59*60-59;
				
				МинутНаДоставку = МинутНаДоставку - Счетчик;
				Счетчик = Периодичность;
			Иначе
				Счетчик = Счетчик + Периодичность;
			КонецЕсли;
		КонецЦикла;
		
		//ДатаОкончания = Объект.КогдаОтправлять + хххх
	КонецЕсли;
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция РазностьДат(ДатаНачала, ДатаОкончания)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	РАЗНОСТЬДАТ(&Дата1, &Дата2, МИНУТА) КАК Разность";
	
	Запрос.УстановитьПараметр("Дата1", ДатаОкончания);
	Запрос.УстановитьПараметр("Дата2", ДатаНачала);
	
	Результат = Запрос.Выполнить();
	Если Результат.Пустой() Тогда
		Возврат 0;
	Иначе
		Выборка = Результат.Выбрать();
		Выборка.Следующий();
		Возврат Выборка.Разность;
	КонецЕсли;
	
КонецФункции

&НаКлиенте
Процедура КогдаОтправлятьПриИзменении(Элемент)
	
	Если ЗначениеЗаполнено(ДатаОкончания) Тогда
		Дата1 = ?(ДатаОкончания > КонецДня(ДатаОкончания) - 2*60*60-59*60-59, КонецДня(ДатаОкончания) - 2*60*60-59*60-59, ДатаОкончания);
		Дата2 = ?(Объект.КогдаОтправлять < НачалоДня(Объект.КогдаОтправлять) + 9*60*60, НачалоДня(Объект.КогдаОтправлять) + 9*60*60, Объект.КогдаОтправлять);
		
		ОбъемСообщений = Окр(Объект.ПолучателиРассылки.Количество() * Периодичность / РазностьДат(Дата1, Дата2), 0);
	КонецЕсли;
	
КонецПроцедуры
