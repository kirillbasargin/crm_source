
#Область ОбработчикиСобытийФормы

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	УстановитьПараметрыЛинии(глТелефония.ПараметрыЗвонка, глТекущиеЗвонки.Количество(), "ВходящийЗвонок");	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаВыбора(ВыбранноеЗначение, ИсточникВыбора)
	
	Если ТипЗнч(ИсточникВыбора) = Тип("УправляемаяФорма") И ИсточникВыбора.ИмяФормы = "Обработка.Телефония.Форма.ВыборАдресатаПеревода" Тогда
		НабранныйНомерТел = ВыбранноеЗначение;
		Если ЗначениеЗаполнено(НабранныйНомерТел) Тогда
			Если ИсточникВыбора.УправляемаяПередача Тогда				
				УправлениеТелефониейКлиент.УправляемаяПередачаЗвонка(НабранныйНомерТел);
			Иначе
				УправлениеТелефониейКлиент.ПередатьЗвонок(НабранныйНомерТел);
			КонецЕсли;
			Если ЭтаФорма.Открыта() Тогда
				Закрыть();
			КонецЕсли;
		Иначе
			УправлениеТелефониейКлиент.ВозобновитьЗвонок(глТелефония["ПараметрыЗвонка"].CallId_Avaya);
		КонецЕсли;
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если Источник = "Телефония" Тогда
		Если ИмяСобытия = "ВходящийЗвонок" ИЛИ
			ИмяСобытия = "НачалоРазговора" ИЛИ 
			ИмяСобытия = "Разговор" ИЛИ
			ИмяСобытия = "УстановкаЗвонкаНаУдержание" ИЛИ 
			ИмяСобытия = "ВозвратЗвонкаИзУдержания" Тогда			
			УстановитьПараметрыЛинии(Параметр, глТекущиеЗвонки.Количество(), ИмяСобытия);
		Иначе
			Если ЭтаФорма.Открыта() Тогда
				Закрыть();
			КонецЕсли;      
		КонецЕсли;
	КонецЕсли;
		
КонецПроцедуры

#КонецОбласти   

#Область ОбработчикиСобытийЭлементовФормы

&НаКлиенте
Процедура СостояниеЗвонка_Линия1Нажатие(Элемент)
	Выполнить("ОткрытьЗначение(" + Элемент.Имя + ");");
КонецПроцедуры

&НаКлиенте
Процедура НомерТелефона_Линия1Нажатие(Элемент)
	
КонецПроцедуры

&НаКлиенте
Процедура Контакт_Линия1Нажатие(Элемент)	
	Выполнить("ОткрытьЗначение(" + Элемент.Имя + ");");		
КонецПроцедуры

&НаКлиенте
Процедура КартинкаКонтакт_Линия1Нажатие(Элемент)
	Выполнить("ОткрытьЗначение(" + СтрЗаменить(Элемент.Имя, "Картинка", "") + ");");
КонецПроцедуры

#КонецОбласти   

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура Ответить(Команда)
	УправлениеТелефониейКлиент.ОтветитьНаЗвонок(глТелефония["ПараметрыЗвонка"].CallId_Avaya);	
КонецПроцедуры

&НаКлиенте
Процедура ПерейтиВРабочийСтол(Команда)
	
	Закрыть();	
	ТекущиеДанные = глТелефония.ПараметрыЗвонка;                                      
	Если НЕ ТекущиеДанные = Неопределено Тогда
		КлючЗаписи = Новый Структура("ID_Звонка, ДатаНачалаЗвонка, ВызывающийНомер, ВызываемыйНомер, Контакт");
		ЗаполнитьЗначенияСвойств(КлючЗаписи, ТекущиеДанные);
		ПараметрыФормы = Новый Структура("НомерТелефона, ID_Звонка, НавСсылка, Дата", ТекущиеДанные.НомерТелефона, ТекущиеДанные.ID_Звонка, УправлениеТелефониейСервер.СоздатьСсылкуНаЗвонок(КлючЗаписи), ТекущиеДанные.ДатаНачалаЗвонка);
		
		//РаботаСКлиентом = ПолучитьФорму("ОбщаяФорма.РабочийСтолГПТ"); //ПолучитьФорму("Обработка.РаботаСКлиентом.Форма.Форма", ПараметрыФормы, ЭтаФорма);
		//Если РаботаСКлиентом.Открыта() Тогда			
		//	РаботаСКлиентом.Активизировать();
		//	//Оповестить("ПереходВРаботуСКлиентом", ПараметрыФормы, "ПанельТелефонии");
		//Иначе
		//	РаботаСКлиентом.Открыть();
		//КонецЕсли;				
		
		УправлениеТелефониейКлиентПовтИсп.АктивизироватьНачальнуюСтраницу();
		
		//<789123>, Басаргин (02.04.2018) {
		Оповестить("ПереходВРаботуСКлиентом", ПараметрыФормы, "ПанельТелефонии");		
		//<789123> }
		
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура Скрыть(Команда)
	Закрыть();
КонецПроцедуры

&НаКлиенте
Процедура Передать(Команда)
	
	УправлениеТелефониейКлиент.УдержаниеЗвонка(глТелефония["ПараметрыЗвонка"].CallId_Avaya);
	ПараметрыФормы = Новый Структура("УправляемаяПередача", Истина);   
	ОткрытьФорму("Обработка.Телефония.Форма.ВыборАдресатаПеревода", ПараметрыФормы, ЭтаФорма, КлючУникальности, ВариантОткрытияОкна.ОтдельноеОкно, , ,РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	
КонецПроцедуры

&НаКлиенте
Процедура Отклонить(Команда)

	УправлениеТелефониейКлиент.ОтклонитьЗвонок(глТелефония["ПараметрыЗвонка"].CallId_Avaya);
	Закрыть();
	
КонецПроцедуры

&НаКлиенте
Процедура Удержать(Команда)

	НомерЛинии = глТелефония["ПараметрыЗвонка"].НомерЛинии;
	Пометка = Ложь;
	ЭлементУдержаниеЗвонка = Элементы.Удержать;
	CallId_Avaya = глТелефония["ПараметрыЗвонка"].CallId_Avaya;
	ПараметрыЗвонка = УправлениеТелефониейКлиент.ПолучитьПараметрыЗвонкаПоCallId(CallId_Avaya);
	Если НЕ ПараметрыЗвонка = Неопределено Тогда
		ЭлементУдержаниеЗвонка.Пометка = (ПараметрыЗвонка.СостояниеЗвонка = ПредопределенноеЗначение("Перечисление.СостоянияТелефонныхЗвонков.НаУдержании"));
	КонецЕсли;
	Если НЕ ЭлементУдержаниеЗвонка = Неопределено Тогда			
		ЭлементУдержаниеЗвонка.Пометка = НЕ ЭлементУдержаниеЗвонка.Пометка;
		Если НЕ ЭлементУдержаниеЗвонка.Пометка Тогда
			УправлениеТелефониейКлиент.ВозобновитьЗвонок(CallId_Avaya);		
		Иначе
			УправлениеТелефониейКлиент.УдержаниеЗвонка(CallId_Avaya);
		КонецЕсли;		
	КонецЕсли;	
	
КонецПроцедуры

#КонецОбласти   

#Область СлужебныеПроцедурыИФункции

&НаСервере
Функция УстановитьПараметрыЛинии(ПараметрыЗвонка, КоличествоЗвонков, ИмяСобытия = "")
	
	НомерЛинии = 1;//ПараметрыЗвонка.НомерЛинии;
	Попытка
		Выполнить("Контакт_Линия" + НомерЛинии + " = ПараметрыЗвонка.Контакт;");
		Выполнить("НомерТелефона_Линия" + НомерЛинии + " = ПараметрыЗвонка.НомерТелефона;");
		Выполнить("СостояниеЗвонка_Линия" + НомерЛинии + " = ПараметрыЗвонка.СостояниеЗвонка;");
		Выполнить("ВидЗвонка_Линия" + НомерЛинии + " = ПараметрыЗвонка.ВидЗвонка;");
		
		Выполнить("Элементы.ГруппаКартинкаКонтакт_Линия" + НомерЛинии + ".Видимость = Истина;");
		Выполнить("Элементы.Контакт_Линия" + НомерЛинии + ".Заголовок = ?(Контакт_Линия" + НомерЛинии + " = Неопределено, ""Неопределено"", Контакт_Линия" + НомерЛинии + ");");
		Выполнить("Элементы.КартинкаКонтакт_Линия" + НомерЛинии + ".Заголовок = ?(Контакт_Линия" + НомерЛинии + " = Неопределено, ""Неопределено"", Контакт_Линия" + НомерЛинии + ");");
		Выполнить("Элементы.КартинкаКонтакт_Линия" + НомерЛинии + ".Картинка = ?(Контакт_Линия" + НомерЛинии + " = Неопределено, БиблиотекаКартинок.ПользовательБезНеобходимыхСвойств, ?(ТипЗнч(Контакт_Линия" + НомерЛинии + ") = Тип(""СправочникСсылка.Пользователи""), БиблиотекаКартинок.АктивныеПользователи, БиблиотекаКартинок.Пользователь));");		
		Выполнить("Элементы.НомерТелефона_Линия" + НомерЛинии + ".Заголовок = НомерТелефона_Линия" + НомерЛинии + ";");
		Выполнить("Элементы.СостояниеЗвонка_Линия" + НомерЛинии + ".Заголовок = """" + ВидЗвонка_Линия" + НомерЛинии + " + "" "" + НРег(СостояниеЗвонка_Линия" + НомерЛинии + ");");				
	Исключение
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ОписаниеОшибки());	
	КонецПопытки;
	
	Элементы.Передать.Видимость = НЕ КоличествоЗвонков > 1 И НЕ ИмяСобытия = "ВходящийЗвонок";
	
	Если ИмяСобытия = "ВходящийЗвонок" Тогда	
		Элементы.Ответить.Видимость = Истина;
		Элементы.Перейти.Видимость = Ложь;
		Элементы.Передать.Видимость = Ложь;
		Элементы.Отклонить.Видимость = Истина;
		Элементы.Удержать.Видимость = Ложь;
	ИначеЕсли ИмяСобытия = "НачалоРазговора" ИЛИ ИмяСобытия = "Разговор" ИЛИ ИмяСобытия = "УстановкаЗвонкаНаУдержание" ИЛИ ИмяСобытия = "ВозвратЗвонкаИзУдержания" Тогда
		Элементы.Ответить.Видимость = Ложь;
		Элементы.Перейти.Видимость = Истина;
		Элементы.Передать.Видимость = Истина;
		Элементы.Отклонить.Видимость = Истина;
		Элементы.Удержать.Видимость = Истина;
	ИначеЕсли ИмяСобытия = "" Тогда
		Элементы.Ответить.Видимость = Ложь;
		Элементы.Перейти.Видимость = Ложь;
		Элементы.Передать.Видимость = Ложь;
		Элементы.Отклонить.Видимость = Ложь;
		Элементы.Удержать.Видимость = Ложь;
	КонецЕсли;
		
	Возврат ПараметрыЗвонка.СостояниеЗвонка;
	
КонецФункции

#КонецОбласти  
