
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)	
	
	Отказ = НЕ УправлениеТелефониейСервер.ПолучитьИспользованиеТелефонии();	 
	Если НЕ Отказ Тогда
		УстановитьСостояниеЛинийПоУмолчанию();	
	КонецЕсли;
	
	ИспользоватьAvayaMediaLibrary = Константы.ИспользоватьAvayaMediaLibrary.Получить();
	Элементы.ОтветитьНаЗвонок1.Видимость = ИспользоватьAvayaMediaLibrary;
	Элементы.УдержаниеЗвонка1.Видимость = ИспользоватьAvayaMediaLibrary;
	Элементы.ОтклонитьЗвонок1.Видимость = ИспользоватьAvayaMediaLibrary;	
	Элементы.ОтветитьНаЗвонок2.Видимость = ИспользоватьAvayaMediaLibrary;
	Элементы.УдержаниеЗвонка2.Видимость = ИспользоватьAvayaMediaLibrary;
	Элементы.ОтклонитьЗвонок2.Видимость = ИспользоватьAvayaMediaLibrary;		
	Элементы.ОтветитьНаЗвонок3.Видимость = ИспользоватьAvayaMediaLibrary;
	Элементы.УдержаниеЗвонка3.Видимость = ИспользоватьAvayaMediaLibrary;
	Элементы.ОтклонитьЗвонок3.Видимость = ИспользоватьAvayaMediaLibrary;			
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	Попытка
		глТелефония["ИдентификаторФормыТелефонии"] = КлючУникальности;
		УправлениеТелефониейКлиентПовтИсп.ЗакэшироватьФормуТелефонии(ЭтаФорма);
	Исключение
		Отказ = Истина;	
	КонецПопытки;
		
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если Источник = "Телефония" Тогда
		Если ИмяСобытия = "ИсходящийЗвонок"
			Или ИмяСобытия = "ВходящийЗвонок"
			Или ИмяСобытия = "НачалоРазговора"
			Или ИмяСобытия = "ОкончаниеЗвонка" 
			Или ИмяСобытия = "УстановкаЗвонкаНаУдержание"
			Или ИмяСобытия = "ВозвратЗвонкаИзУдержания"
			Или ИмяСобытия = "ПереводЗвонка" 
			Тогда
			ОбновитьСостояниеЛиний(глТекущиеЗвонки, Параметр);
			ОбновитьОтображениеДанных(Элементы.ГруппаЛиний);
		ИначеЕсли ИмяСобытия = "ИзменениеСтатусаТелефонии" Тогда 
			ОбновитьСтатусТелефонии();
			Если НЕ глТелефония["ИдентификаторФормыТелефонии"] = КлючУникальности Тогда 
				глТелефония["ИдентификаторФормыТелефонии"] = КлючУникальности;
				УправлениеТелефониейКлиентПовтИсп.ЗакэшироватьФормуТелефонии(ЭтаФорма);
			КонецЕсли;
		ИначеЕсли ИмяСобытия = "ТелефоннаяТрубкаСнята" Тогда
			ЭтаФорма.Элементы.ГруппаЦифрКнопок.Видимость = Истина;	
		ИначеЕсли ИмяСобытия = "ТелефоннаяТрубкаОпущена" Тогда
			ЭтаФорма.Элементы.ГруппаЦифрКнопок.Видимость = Ложь;
		КонецЕсли;
		
		Если ИмяСобытия = "ИсходящийЗвонок" Тогда
			НабранныйНомерТел = Параметр.НомерТелефона; //☏ 
		КонецЕсли;	
		Если ИмяСобытия = "ОкончаниеЗвонка" Тогда
			НабранныйНомерТел = ""; //☎ 
		КонецЕсли;
		
		ОбработкаСобытийТаймера(ИмяСобытия, ?(ТипЗнч(Параметр) = Тип("Структура"), Параметр.НомерЛинии, глТелефония["НомерЛинии"]));
	КонецЕсли;
		
КонецПроцедуры                                    

&НаКлиенте
Процедура ОбработкаВыбора(ВыбранноеЗначение, ИсточникВыбора)
	
	Если ТипЗнч(ИсточникВыбора) = Тип("УправляемаяФорма") И ИсточникВыбора.ИмяФормы = "Обработка.Телефония.Форма.ВыборАдресатаПеревода" Тогда
		НабранныйНомерТел = ВыбранноеЗначение;
		Если ЗначениеЗаполнено(НабранныйНомерТел) И ВыборАдресатаПеревода Тогда
			ВыборАдресатаПеревода = Ложь;
			Если ИсточникВыбора.УправляемаяПередача Тогда				
				УправлениеТелефониейКлиент.УправляемаяПередачаЗвонка(НабранныйНомерТел);
			Иначе
				УправлениеТелефониейКлиент.ПередатьЗвонок(НабранныйНомерТел);
			КонецЕсли;
		ИначеЕсли ЗначениеЗаполнено(НабранныйНомерТел) И НЕ ВыборАдресатаПеревода Тогда
			УправлениеТелефониейКлиент.СделатьЗвонок(НабранныйНомерТел);
		Иначе
			НомерЛинии = Прав(Элементы.ГруппаЛиний.ТекущаяСтраница.Имя, 1);
			CallId_Avaya = "";
			Выполнить("CallId_Avaya = CallId_Avaya_Линия" + НомерЛинии + ";");
			Если ЗначениеЗаполнено(CallId_Avaya) Тогда
				УправлениеТелефониейКлиент.ВозобновитьЗвонок(CallId_Avaya);
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, ЗавершениеРаботы, ТекстПредупреждения, СтандартнаяОбработка)	
	Отказ = ЗавершениеРаботы = Ложь;	
КонецПроцедуры

&НаКлиенте
Процедура ПриЗакрытии(ЗавершениеРаботы)
	
	Если ЗавершениеРаботы Тогда 
		УправлениеТелефониейКлиент.ПриЗавершенииРаботыСистемы();
	КонецЕсли;	
		
КонецПроцедуры

&НаКлиенте
Процедура ВнешнееСобытие(Источник, Событие, Данные)
	
	Если Источник = "AvayaMediaComponent" Тогда 
		Если глТелефония["Активирована"] И НЕ глТелефония["ДанныеПредыдущегоСобытия"] = Данные Тогда
			Если глТелефония["ИспользоватьAvayaMediaLibrary"] Тогда
				УправлениеТелефониейОбработкаСобытий_AvayaMediaLibrary.ОбработкаСобытийТелефонии(Источник, Событие, Данные);				
			Иначе
				УправлениеТелефониейОбработкаСобытий.ОбработкаСобытийТелефонии(Источник, Событие, Данные);        
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ЗвонкиПриОбновленииСоставаПользовательскихНастроекНаСервере(СтандартнаяОбработка)
	УстановитьЗаголовкиЗакладок();
КонецПроцедуры

#КонецОбласти   

#Область ОбработчикиСобытийЭлементовФормы

&НаКлиенте
Процедура СостояниеЗвонка_Линия1Нажатие(Элемент)
	Выполнить("ОткрытьЗначение(" + Элемент.Имя + ");");
КонецПроцедуры

&НаКлиенте
Процедура НомерТелефона_Линия1Нажатие(Элемент)	
	
	ТекущиеДанные = УправлениеТелефониейКлиент.ПолучитьПараметрыЗвонка(Элемент.Заголовок);                                      
	Если НЕ ТекущиеДанные = Неопределено Тогда
		КлючЗаписи = Новый Структура("ID_Звонка, ДатаНачалаЗвонка, ВызывающийНомер, ВызываемыйНомер, Контакт");
		ЗаполнитьЗначенияСвойств(КлючЗаписи, ТекущиеДанные);
		ПараметрыФормы = Новый Структура("НомерТелефона, ID_Звонка, НавСсылка, Дата", ТекущиеДанные.НомерТелефона, ТекущиеДанные.ID_Звонка, УправлениеТелефониейСервер.СоздатьСсылкуНаЗвонок(КлючЗаписи), ТекущиеДанные.ДатаНачалаЗвонка);
		РаботаСКлиентом = ПолучитьФорму("Обработка.РаботаСКлиентом.Форма.Форма", ПараметрыФормы, ЭтаФорма);
		Если РаботаСКлиентом.Открыта() Тогда			
			РаботаСКлиентом.Активизировать();
			Оповестить("ПереходВРаботуСКлиентом", ПараметрыФормы, "ПанельТелефонии");
		Иначе
			РаботаСКлиентом.Открыть();
		КонецЕсли;			
	КонецЕсли;	
	
КонецПроцедуры

&НаКлиенте
Процедура НомерТелефона_Линия_КонтекстноеМеню_КопироватьНомер(Команда)
	
	Текст = "";
	Выполнить("Текст = " + СтрЗаменить(Команда.Имя, "_КонтекстСкопировать", "") + ";");  
	htmlfile = Новый COMОбъект("htmlfile"); 
	htmlfile.ParentWindow.ClipboardData.Setdata("Text", Текст); 
	
КонецПроцедуры

&НаКлиенте
Процедура Контакт_Линия1Нажатие(Элемент)
	
	Если Элемент.Заголовок = "Неопределено" Тогда //"Новый" 
		//ОткрытьФорму("Справочник.Клиенты.Форма.ФормаЭлемента");
	Иначе
		Выполнить("ОткрытьЗначение(" + Элемент.Имя + ");");	
	КонецЕсли;
		
КонецПроцедуры

&НаКлиенте
Процедура КартинкаКонтакт_Линия1Нажатие(Элемент)
	
	Если Элемент.Заголовок = "Неопределено" Тогда //"Новый"
		//ОткрытьФорму("Справочник.Клиенты.Форма.ФормаЭлемента");
	Иначе
		Выполнить("ОткрытьЗначение(" + СтрЗаменить(Элемент.Имя, "Картинка", "") + ");");	
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ЗвонкиПередУдалением(Элемент, Отказ)
	Отказ = Истина;
КонецПроцедуры

&НаКлиенте
Процедура ГруппаЛинийПриСменеСтраницы(Элемент, ТекущаяСтраница)
	
	НомерЛинии = Прав(Элементы.ГруппаЛиний.ТекущаяСтраница.Имя, 1);
	CallId = "";
	Выполнить("CallId = CallId_Avaya_Линия" + НомерЛинии + ";");
	глТелефония["ПараметрыЗвонка"] = УправлениеТелефониейКлиент.ПолучитьПараметрыЗвонкаПоCallId(CallId);
	
КонецПроцедуры

#КонецОбласти   

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура КомандаОПрограмме(Команда)
	ОткрытьФорму("Обработка.Телефония.Форма.ОПрограмме", , ЭтаФорма, , ВариантОткрытияОкна.ОтдельноеОкно);
КонецПроцедуры

&НаКлиенте
Процедура КомандаНастройки(Команда)
	ОткрытьФорму("Обработка.Телефония.Форма.НастройкиТелефонии", , ЭтаФорма, , ВариантОткрытияОкна.ОтдельноеОкно);
КонецПроцедуры

&НаКлиенте
Процедура КомандаОбработкаЦифровыхКнопок(Команда)
	
	СтрЦифры = Сред(Команда.Имя, Найти(Команда.Имя,"_") + 1);
	Если ПустаяСтрока(СтрЦифры) Тогда
		Возврат;
	КонецЕсли;
	НажатаяЦифра = СтрЦифры;
	Если НажатаяЦифра=Неопределено Тогда
		Возврат;
	КонецЕсли;
	Если НажатаяЦифра = "р" Тогда
		НажатаяЦифра = "#";
	ИначеЕсли НажатаяЦифра = "з" Тогда
		НажатаяЦифра = "*";
	КонецЕсли;
	ЭтаФорма.НабранныйНомерТел = ЭтаФорма.НабранныйНомерТел + НажатаяЦифра;
	
КонецПроцедуры

&НаКлиенте
Процедура КомандаСтереть(Команда)
	ЭтаФорма.НабранныйНомерТел = Лев(ЭтаФорма.НабранныйНомерТел, СтрДлина(ЭтаФорма.НабранныйНомерТел) - 1);
КонецПроцедуры

&НаКлиенте
Процедура КомандаОтобразитьКнопки(Команда)
	ЭтаФорма.Элементы.ГруппаЦифрКнопок.Видимость = Не ЭтаФорма.Элементы.ГруппаЦифрКнопок.Видимость;
КонецПроцедуры

&НаКлиенте
Процедура КомандаПодключить(Команда)
	
	Если глТелефония["Зарегистрирована"] Тогда
		УправлениеТелефониейКлиент.ВключитьТелефонию();
	Иначе
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю("AvayaMediaComponent.dll не зарегистрирован в системе.");
	КонецЕсли;	
	
КонецПроцедуры

&НаКлиенте
Процедура КомандаОтключить(Команда)	
	УправлениеТелефониейКлиент.ВыключитьТелефонию();	
КонецПроцедуры

&НаКлиенте
Процедура КомандаВыполнитьПередатьЗвонок(Команда)
	
	ВыборАдресатаПеревода = Истина;
	ОткрытьФорму("Обработка.Телефония.Форма.ВыборАдресатаПеревода",, ЭтаФорма, КлючУникальности, ВариантОткрытияОкна.ОтдельноеОкно,,,РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	
КонецПроцедуры

&НаКлиенте
Процедура КомандаУправляемаяПередачаЗвонка(Команда)
	
	ВыборАдресатаПеревода = Истина;
	ОткрытьФорму("Обработка.Телефония.Форма.ВыборАдресатаПеревода", Новый Структура("УправляемаяПередача", Истина), ЭтаФорма, КлючУникальности, ВариантОткрытияОкна.ОтдельноеОкно,,,РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);

КонецПроцедуры

&НаКлиенте
Процедура КомандаУправляемуюПередачуВыполнить(Команда)	
	УправлениеТелефониейКлиент.УправляемуюПередачуВыполнить();
КонецПроцедуры

&НаКлиенте
Процедура КомандаУправляемуюПередачуПрервать(Команда)
	УправлениеТелефониейКлиент.УправляемуюПередачуПрервать();
КонецПроцедуры

&НаКлиенте
Процедура ПолеВводаНомераНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	ВыборАдресатаПеревода = Ложь;
	ОткрытьФорму("Обработка.Телефония.Форма.ВыборАдресатаПеревода", , ЭтаФорма, КлючУникальности, ВариантОткрытияОкна.ОтдельноеОкно, , ,РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	
КонецПроцедуры

&НаКлиенте
Процедура ПеревестиЗвонокСОжиданием(Команда)
		
	НомерЛинии = Прав(Элементы.ГруппаЛиний.ТекущаяСтраница.Имя, 1);
	CallId_Avaya = "";
	Выполнить("CallId_Avaya = CallId_Avaya_Линия" + НомерЛинии + ";");
	УправлениеТелефониейКлиент.УдержаниеЗвонка(CallId_Avaya);
	
	ВыборАдресатаПеревода = Истина;
	ОткрытьФорму("Обработка.Телефония.Форма.ВыборАдресатаПеревода", Новый Структура("УправляемаяПередача", Истина), ЭтаФорма, КлючУникальности, ВариантОткрытияОкна.ОтдельноеОкно, , ,РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);	

КонецПроцедуры

&НаКлиенте
Процедура ПеревестиЗвонокБезОжидания(Команда)
	
	ВыборАдресатаПеревода = Истина;
	ОткрытьФорму("Обработка.Телефония.Форма.ВыборАдресатаПеревода", , ЭтаФорма, КлючУникальности, ВариантОткрытияОкна.ОтдельноеОкно, , ,РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	
КонецПроцедуры

&НаКлиенте
Процедура ОтклонитьЗвонок(Команда)
	
	НомерЛинии = Прав(Элементы.ГруппаЛиний.ТекущаяСтраница.Имя, 1);	
	Выполнить("УправлениеТелефониейКлиент.ОтклонитьЗвонок(CallId_Avaya_Линия" + НомерЛинии + ");");
	
КонецПроцедуры

&НаКлиенте
Процедура ОтветитьНаЗвонок(Команда)	
	
	НомерЛинии = Прав(Элементы.ГруппаЛиний.ТекущаяСтраница.Имя, 1);
	Выполнить("УправлениеТелефониейКлиент.ОтветитьНаЗвонок(CallId_Avaya_Линия" + НомерЛинии + ");");
	
КонецПроцедуры

&НаКлиенте
Процедура УдержаниеЗвонка(Команда)
	
	НомерЛинии = Прав(Элементы.ГруппаЛиний.ТекущаяСтраница.Имя, 1);
	Пометка = Ложь;
	ЭлементУдержаниеЗвонка = Неопределено;
	Выполнить("ЭлементУдержаниеЗвонка = Элементы.УдержаниеЗвонка" + НомерЛинии + ";");
	CallId_Avaya = "";
	Выполнить("CallId_Avaya = CallId_Avaya_Линия" + НомерЛинии + ";");
	ПараметрыЗвонка = УправлениеТелефониейКлиент.ПолучитьПараметрыЗвонкаПоCallId(CallId_Avaya);
	Если НЕ ПараметрыЗвонка = Неопределено Тогда
		ЭлементУдержаниеЗвонка.Пометка = (ПараметрыЗвонка.СостояниеЗвонка = ПредопределенноеЗначение("Перечисление.СостоянияТелефонныхЗвонков.НаУдержании"));
		//глТелефония["ПараметрыЗвонка"] = ПараметрыЗвонка; 
	КонецЕсли;
	Если НЕ ЭлементУдержаниеЗвонка = Неопределено Тогда			
		ЭлементУдержаниеЗвонка.Пометка = НЕ ЭлементУдержаниеЗвонка.Пометка;
		Если НЕ ЭлементУдержаниеЗвонка.Пометка Тогда
			УправлениеТелефониейКлиент.ВозобновитьЗвонок(CallId_Avaya);
		Иначе
			УправлениеТелефониейКлиент.УдержаниеЗвонка(CallId_Avaya);
		КонецЕсли;		
	КонецЕсли;	
		
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьСосоянияЛиний(Команда)
	
	ДлительностьРазговора_Линия1 = 0;
	ДлительностьРазговораСтрока_Линия1 = "";
	УправлениеТелефониейКлиент.ЗавершитьТекущиеЗвонки();
	УстановитьСостояниеЛинийПоУмолчанию();
	
КонецПроцедуры

&НаКлиенте
Процедура КомандаДозвон(Команда)
	УправлениеТелефониейКлиент.СделатьЗвонок(НабранныйНомерТел);
КонецПроцедуры

&НаКлиенте
Процедура ЗвонкиВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	// Вставить содержимое обработчика.
КонецПроцедуры

&НаКлиенте
Процедура КомандаПерейтиВРаботаСКлиентом(Команда)

	ТекущиеДанные = Элементы.Звонки.ТекущиеДанные;                                      
	Если НЕ ТекущиеДанные = Неопределено Тогда
		КлючЗаписи = Новый Структура("ID_Звонка, ДатаНачалаЗвонка, ВызывающийНомер, ВызываемыйНомер, Контакт");
		ЗаполнитьЗначенияСвойств(КлючЗаписи, ТекущиеДанные);
		ПараметрыФормы = Новый Структура("НомерТелефона, ID_Звонка, НавСсылка, Дата", ТекущиеДанные.НомерТелефона, ТекущиеДанные.ID_Звонка, УправлениеТелефониейСервер.СоздатьСсылкуНаЗвонок(КлючЗаписи), ТекущиеДанные.ДатаНачалаЗвонка);
		РаботаСКлиентом = ПолучитьФорму("Обработка.РаботаСКлиентом.Форма.Форма", ПараметрыФормы, ЭтаФорма);
		Если РаботаСКлиентом.Открыта() Тогда			
			РаботаСКлиентом.Активизировать();
			Оповестить("ПереходВРаботуСКлиентом", ПараметрыФормы, "ПанельТелефонии");
		Иначе
			РаботаСКлиентом.Открыть();
		КонецЕсли;			
	КонецЕсли;
		
КонецПроцедуры

&НаКлиенте
Процедура СоздатьЗаявкуНаЗвонок(Команда)
	
	ТекущиеДанные = Элементы.Звонки.ТекущиеДанные;                                      
	Если НЕ ТекущиеДанные = Неопределено Тогда		
		ПараметрыФормы = Новый Структура("ЗначенияЗаполнения", УправлениеЗаявкамиНаЗвонок.СоздатьЗначенияЗаполнения());		
		Если ТипЗнч(ТекущиеДанные.Контакт) = Тип("СправочникСсылка.Клиенты") Тогда
			ПараметрыФормы.ЗначенияЗаполнения.Вставить("Контакт", ТекущиеДанные.Контакт);
			ПараметрыФормы.ЗначенияЗаполнения.Вставить("reqContact", ТекущиеДанные.НомерТелефона);
		Иначе
			ПараметрыФормы.ЗначенияЗаполнения.Вставить("reqContact", ТекущиеДанные.НомерТелефона);
		КонецЕсли;			
		ОткрытьФорму("Документ.ЗаявкаНаЗвонок.Форма.ФормаДокумента", ПараметрыФормы, ЭтаФорма, ЭтаФорма.УникальныйИдентификатор, , ЭтаФорма.НавигационнаяСсылка);		
	КонецЕсли;	

КонецПроцедуры

&НаКлиенте
Процедура ОтправитьSMS(Команда)
	
	ТекущиеДанные = Элементы.Звонки.ТекущиеДанные;                                      
	Если НЕ ТекущиеДанные = Неопределено Тогда
		
		ПараметрыФормы 					= Новый Структура("ВидСообщения,ПредметСтрокой");
		ПараметрыФормы.ВидСообщения 	= "СообщениеSMS";
		Если ТипЗнч(ТекущиеДанные.Контакт) = Тип("СправочникСсылка.Клиенты") Тогда
			ПараметрыФормы.Вставить("Предмет",ТекущиеДанные.Контакт);
		Иначе
			ПараметрыФормы.ПредметСтрокой 	= ТекущиеДанные.НомерТелефона;
		КонецЕсли;
			
		ОткрытьФорму("Справочник.ШаблоныСообщений.Форма.СформироватьСообщение", ПараметрыФормы, ЭтаФорма, ЭтаФорма.УникальныйИдентификатор, , ЭтаФорма.НавигационнаяСсылка);
		
	КонецЕсли;	
	
КонецПроцедуры

&НаКлиенте
Процедура СкопироватьНомер(Команда)
	
	ТекущиеДанные = Элементы.Звонки.ТекущиеДанные;                                      
	Если НЕ ТекущиеДанные = Неопределено Тогда		
		htmlfile = Новый COMОбъект("htmlfile"); 
		htmlfile.ParentWindow.ClipboardData.Setdata("Text", ТекущиеДанные.НомерТелефона); 
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти 

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура ОбновитьСтатусТелефонии()
	
	ТекущийНомерТелефона = ?(ЗначениеЗаполнено(глТелефония["deviceID"]), глТелефония["deviceID"], "<не указан>");
	ЭтаФорма.Элементы.ГруппаРегистрация.Заголовок = ТекущийНомерТелефона;
	Если ТекущийНомерТелефона = "<не указан>" Тогда
		ЭтаФорма.Элементы.ГруппаРегистрация.Картинка = БиблиотекаКартинок.Телефония_НеЗарегистрирована;
		ЭтаФорма.Элементы.КнопкаОтключить.Доступность = Ложь;
		ЭтаФорма.Элементы.КнопкаПодключить.Доступность = Ложь;				
	ИначеЕсли УправлениеТелефониейКлиент.ПолучитьСтатусТелефонии() = "Есть подключение" Тогда
		ЭтаФорма.Элементы.ГруппаРегистрация.Картинка = БиблиотекаКартинок.Телефония_Подключена;
		ЭтаФорма.Элементы.КнопкаОтключить.Доступность = Истина;
		ЭтаФорма.Элементы.КнопкаПодключить.Доступность = Ложь;	
	Иначе
		ЭтаФорма.Элементы.ГруппаРегистрация.Картинка = БиблиотекаКартинок.Телефония_Отключена;
		ЭтаФорма.Элементы.КнопкаОтключить.Доступность = Ложь;
		ЭтаФорма.Элементы.КнопкаПодключить.Доступность = Истина;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ОбновитьСостояниеЛиний(глТекущиеЗвонки, ПараметрыТекущегоЗвонка) 
	
	Элементы.Звонки.Обновить();
	Элементы.Звонки.ТекущаяСтрока = 0;
	Элементы.ГруппаЦифрКнопок.Видимость = Ложь;
	
 	УстановитьСостояниеЛинийПоУмолчанию();
	
	//ПараметрыТекущегоЗвонка = глТелефония["ПараметрыЗвонка"];
	НомерТелефона = ПараметрыТекущегоЗвонка.НомерТелефона;
	ТекущаяСтраница = Неопределено;
	Для каждого ПараметрыЗвонка Из глТекущиеЗвонки Цикл		
		Страница_Линия = Элементы.Найти("Группа_Линия" + ПараметрыЗвонка.НомерЛинии);
		ТекущаяСтраница = Страница_Линия;
		Страница_Линия.Заголовок = ПараметрыЗвонка.ПредставлениеНомераТелефона;
		Если НЕ Страница_Линия = Неопределено ИЛИ ПараметрыЗвонка.НомерЛинии = 1 Тогда
			Страница_Линия.Видимость = Истина;
		Иначе
			Страница_Линия.Видимость = Ложь;
		КонецЕсли;				
		СостояниеЗвонка = УстановитьПараметрыЛинии(ПараметрыЗвонка);
		Если СостояниеЗвонка = ПредопределенноеЗначение("Перечисление.СостоянияТелефонныхЗвонков.Вызов") ИЛИ СостояниеЗвонка = ПредопределенноеЗначение("Перечисление.СостоянияТелефонныхЗвонков.Разговор") Тогда
			ТекущаяСтраница = Страница_Линия;
			Если СостояниеЗвонка = ПредопределенноеЗначение("Перечисление.СостоянияТелефонныхЗвонков.Вызов") Тогда
				Страница_Линия.Картинка = БиблиотекаКартинок.Телефония_Ожидание;
			Иначе
				Страница_Линия.Картинка = БиблиотекаКартинок.Телефония_АктивнаяЛиния;
			КонецЕсли;
		ИначеЕсли СостояниеЗвонка = ПредопределенноеЗначение("Перечисление.СостоянияТелефонныхЗвонков.НаУдержании") Тогда
			Страница_Линия.Картинка = БиблиотекаКартинок.Телефония_Ожидание;
		Иначе
			Страница_Линия.Картинка = БиблиотекаКартинок.Телефония_СвободнаяЛиния;
		КонецЕсли;
	КонецЦикла;
	
	Если глТекущиеЗвонки.Количество() Тогда
		Если ТекущаяСтраница = Неопределено Тогда
			Элементы.ГруппаЛиний.ТекущаяСтраница = Страница_Линия; 
		Иначе
			Элементы.ГруппаЛиний.ТекущаяСтраница = ТекущаяСтраница;
		КонецЕсли;
	КонецЕсли;
		
КонецПроцедуры

&НаСервере
Функция УстановитьПараметрыЛинии(ПараметрыЗвонка)       
	                                                          
	НомерЛинии = ПараметрыЗвонка.НомерЛинии;
	Попытка
		Выполнить("CallId_Avaya_Линия" + НомерЛинии + " = ПараметрыЗвонка.CallId_Avaya;");
		Выполнить("Контакт_Линия" + НомерЛинии + " = ПараметрыЗвонка.Контакт;");
		Выполнить("НомерТелефона_Линия" + НомерЛинии + " = ПараметрыЗвонка.НомерТелефона;");
		Выполнить("СостояниеЗвонка_Линия" + НомерЛинии + " = ПараметрыЗвонка.СостояниеЗвонка;");
		Выполнить("ВидЗвонка_Линия" + НомерЛинии + " = ПараметрыЗвонка.ВидЗвонка;");
		Выполнить("Элементы.ГруппаКартинкаКонтакт_Линия" + НомерЛинии + ".Видимость = Истина;");
		Выполнить("Элементы.Контакт_Линия" + НомерЛинии + ".Заголовок = ?(Контакт_Линия" + НомерЛинии + " = Неопределено, ""Неопределено"", Контакт_Линия" + НомерЛинии + ");");
		Выполнить("Элементы.КартинкаКонтакт_Линия" + НомерЛинии + ".Заголовок = ?(Контакт_Линия" + НомерЛинии + " = Неопределено, ""Неопределено"", Контакт_Линия" + НомерЛинии + ");");
		Выполнить("Элементы.КартинкаКонтакт_Линия" + НомерЛинии + ".Картинка = ?(Контакт_Линия" + НомерЛинии + " = Неопределено, БиблиотекаКартинок.ПользовательБезНеобходимыхСвойств, ?(ТипЗнч(Контакт_Линия" + НомерЛинии + ") = Тип(""СправочникСсылка.Пользователи""), БиблиотекаКартинок.АктивныеПользователи, БиблиотекаКартинок.Пользователь));");		
		Выполнить("Элементы.НомерТелефона_Линия" + НомерЛинии + ".Заголовок = НомерТелефона_Линия" + НомерЛинии + ";");
		Выполнить("Элементы.СостояниеЗвонка_Линия" + НомерЛинии + ".Заголовок = """" + ВидЗвонка_Линия" + НомерЛинии + " + "" "" + НРег(СостояниеЗвонка_Линия" + НомерЛинии + ");");		
	Исключение
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ОписаниеОшибки());	
	КонецПопытки;
	
	Возврат ПараметрыЗвонка.СостояниеЗвонка;
	
КонецФункции

&НаСервере
Процедура УстановитьСостояниеЛинийПоУмолчанию()
		
	Звонки.Параметры.УстановитьЗначениеПараметра("Ответственный", ПользователиКлиентСервер.АвторизованныйПользователь());
	Звонки.Параметры.УстановитьЗначениеПараметра("НеВыводитьВнутренниеЗвонки", УправлениеТелефониейСервер.ПолучитьНастройкуТелефонииПользователя("НеВыводитьВнутренниеЗвонки", ПользователиКлиентСервер.АвторизованныйПользователь()));
	
	Элементы.Звонки.Обновить();
	Элементы.Звонки.ТекущаяСтрока = 0;
	УстановитьЗаголовкиЗакладок();
	
	Элементы.ГруппаЦифрКнопок.Видимость = Ложь;	
	Элементы.ГруппаЛиний.ТекущаяСтраница = Элементы.Группа_Линия1; 
	
	CallId_Avaya_Линия1 = "";
	ВидЗвонка_Линия1 = 0;
	Контакт_Линия1 = Неопределено;
	НомерТелефона_Линия1 = "";
	СостояниеЗвонка_Линия1 = "";
	Элементы.Группа_Линия1.Видимость = Истина;
	Элементы.СостояниеЗвонка_Линия1.Заголовок = "Свободная линия";
	Элементы.НомерТелефона_Линия1.Заголовок = НомерТелефона_Линия1;
	Элементы.Контакт_Линия1.Заголовок = Контакт_Линия1;
	Элементы.ГруппаКартинкаКонтакт_Линия1.Видимость = Ложь;
	Элементы.Группа_Линия1.Картинка = БиблиотекаКартинок.Телефония_СвободнаяЛиния;
	Элементы.Группа_Линия1.Заголовок = "";
	Элементы.УдержаниеЗвонка1.Пометка = Ложь;
	
	CallId_Avaya_Линия2 = "";
	ВидЗвонка_Линия2 = 0;
	Контакт_Линия2 = Неопределено;
	НомерТелефона_Линия2 = "";
	СостояниеЗвонка_Линия2 = "";
	Элементы.Группа_Линия2.Видимость = Ложь;
	Элементы.СостояниеЗвонка_Линия2.Заголовок = "Свободная линия";
	Элементы.НомерТелефона_Линия2.Заголовок = НомерТелефона_Линия2;
	Элементы.Контакт_Линия2.Заголовок = Контакт_Линия2;
	Элементы.ГруппаКартинкаКонтакт_Линия2.Видимость = Ложь;
	Элементы.Группа_Линия2.Картинка = БиблиотекаКартинок.Телефония_СвободнаяЛиния;
	Элементы.Группа_Линия2.Заголовок = "";
	Элементы.УдержаниеЗвонка2.Пометка = Ложь;
	
	CallId_Avaya_Линия3 = "";
	ВидЗвонка_Линия3 = 0;
	Контакт_Линия3 = Неопределено;
	НомерТелефона_Линия3 = "";
	СостояниеЗвонка_Линия3 = "";
	Элементы.Группа_Линия3.Видимость = Ложь;
	Элементы.СостояниеЗвонка_Линия3.Заголовок = "Свободная линия";
	Элементы.НомерТелефона_Линия3.Заголовок = НомерТелефона_Линия3;
	Элементы.Контакт_Линия3.Заголовок = Контакт_Линия3;
	Элементы.ГруппаКартинкаКонтакт_Линия2.Видимость = Ложь;
	Элементы.Группа_Линия3.Картинка = БиблиотекаКартинок.Телефония_СвободнаяЛиния;
	Элементы.Группа_Линия3.Заголовок = "";
	Элементы.УдержаниеЗвонка3.Пометка = Ложь;
	
	МаксимумЛиний = 3;
	
КонецПроцедуры

&НаСервере
Функция ПолучитьКоличествоСтрокСписка(ИмяСписка = "Звонки")

    Схема = Элементы[ИмяСписка].ПолучитьИсполняемуюСхемуКомпоновкиДанных();
    Настройки = Элементы[ИмяСписка].ПолучитьИсполняемыеНастройкиКомпоновкиДанных();
    КомпоновщикМакета = Новый КомпоновщикМакетаКомпоновкиДанных();
    МакетКомпоновки = КомпоновщикМакета.Выполнить(Схема, Настройки, , , Тип("ГенераторМакетаКомпоновкиДанныхДляКоллекцииЗначений"));
    
    ПроцессорКомпоновки = Новый ПроцессорКомпоновкиДанных;
    ПроцессорКомпоновки.Инициализировать(МакетКомпоновки);
    
    ПроцессорВывода = Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВКоллекциюЗначений;
    ТаблицаРезультат = ПроцессорВывода.Вывести(ПроцессорКомпоновки);
	
	Возврат ТаблицаРезультат.Количество();
	
КонецФункции

&НаСервере
Процедура УстановитьЗаголовкиЗакладок()
	
	КоличествоЗвонков = ПолучитьКоличествоСтрокСписка("Звонки");
	Элементы.СтраницаМоиЗвонки.Заголовок = "Звонки" + ?(КоличествоЗвонков = 0, "", " (" + КоличествоЗвонков + ")");
	
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьТаймер_Линия1()
	
	ДлительностьРазговора_Линия1 = ДлительностьРазговора_Линия1 + 1;
	ДлительностьРазговораСтрока_Линия1 = ФорматироватьВремя(ДлительностьРазговора_Линия1);
	
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьТаймер_Линия2()
	
	ДлительностьРазговора_Линия2 = ДлительностьРазговора_Линия2 + 1;
	ДлительностьРазговораСтрока_Линия2 = ФорматироватьВремя(ДлительностьРазговора_Линия2);
	
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьТаймер_Линия3()
	
	ДлительностьРазговора_Линия3 = ДлительностьРазговора_Линия3 + 1;
	ДлительностьРазговораСтрока_Линия3 = ФорматироватьВремя(ДлительностьРазговора_Линия3);
	
КонецПроцедуры

&НаКлиенте
Процедура ОчиститьСостояниеТаймера()
	
	Для НомерЛинии = 1 По МаксимумЛиний Цикл
		Попытка
			ЭтаФорма.ОтключитьОбработчикОжидания("ОбновитьТаймер_Линия" + НомерЛинии);
			Выполнить("ДлительностьРазговора_Линия" + НомерЛинии + " = 0;");
			Выполнить("ДлительностьРазговораСтрока_Линия" + НомерЛинии + " = """";");
			ГруппаДлительностьРазговора_Линия_Х = Элементы.Найти("ГруппаДлительностьРазговора_Линия" + НомерЛинии);	
			Если НЕ ГруппаДлительностьРазговора_Линия_Х = Неопределено Тогда
				ГруппаДлительностьРазговора_Линия_Х.Видимость = Ложь;
			КонецЕсли;
		Исключение
			Продолжить;
		КонецПопытки;
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаСобытийТаймера(ИмяСобытия, НомерЛинии)
	
	Если НЕ ЗначениеЗаполнено(НомерЛинии) ИЛИ НомерЛинии > МаксимумЛиний ИЛИ НЕ глТекущиеЗвонки.Количество() Тогда
		ОчиститьСостояниеТаймера();			
		Возврат;
	КонецЕсли;
	
	Процедура_Обработчик = "ОбновитьТаймер_Линия" + НомерЛинии;	
	ГруппаДлительностьРазговора_Линия_Х = Элементы.Найти("ГруппаДлительностьРазговора_Линия" + НомерЛинии);	
	Если ГруппаДлительностьРазговора_Линия_Х = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ДлительностьРазговора_Линия_Х = 0;
	ДлительностьРазговораСтрока_Линия_Х = "";
	
	Выполнить("ДлительностьРазговора_Линия_Х = ДлительностьРазговора_Линия" + НомерЛинии + ";");
	Выполнить("ДлительностьРазговораСтрока_Линия_Х = ДлительностьРазговораСтрока_Линия" + НомерЛинии + ";");
	
	Если ИмяСобытия = "НачалоРазговора" Тогда
		ГруппаДлительностьРазговора_Линия_Х.Видимость = Истина;
		ДлительностьРазговора_Линия_Х = 1;
		ДлительностьРазговораСтрока_Линия_Х = ФорматироватьВремя(ДлительностьРазговора_Линия_Х);
		ЭтаФорма.ПодключитьОбработчикОжидания(Процедура_Обработчик, 1);
	ИначеЕсли ИмяСобытия = "УстановкаЗвонкаНаУдержание" Тогда
		ЭтаФорма.ОтключитьОбработчикОжидания(Процедура_Обработчик);
	ИначеЕсли ИмяСобытия = "ВозвратЗвонкаИзУдержания" Тогда
		ЭтаФорма.ПодключитьОбработчикОжидания(Процедура_Обработчик, 1);
	ИначеЕсли ИмяСобытия = "ОкончаниеЗвонка" Тогда
		ГруппаДлительностьРазговора_Линия_Х.Видимость = Ложь;
		ДлительностьРазговора_Линия_Х = 0;
		ДлительностьРазговораСтрока_Линия_Х = "";
		ЭтаФорма.ОтключитьОбработчикОжидания(Процедура_Обработчик);
	КонецЕсли;
	
	Выполнить("ДлительностьРазговора_Линия" + НомерЛинии + " = ДлительностьРазговора_Линия_Х;");
	Выполнить("ДлительностьРазговораСтрока_Линия" + НомерЛинии + " = ДлительностьРазговораСтрока_Линия_Х;");
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Функция ФорматироватьВремя(Значение)
	
	Если Значение < 60 Тогда
		Возврат "00:" + Формат(Значение, "ЧЦ=2; ЧН=00; ЧВН=");
	ИначеЕсли Значение >= 60 и Значение < 60*60 Тогда
		Возврат Формат(Цел(Значение/60), "ЧЦ=2; ЧН=00; ЧВН=") + ":" + Формат(Значение-Цел(Значение/60)*60, "ЧЦ=2; ЧН=00; ЧВН=");
	ИначеЕсли Значение >= 60*60 и Значение < 60*60*24 Тогда 
		Возврат Формат(Цел(Значение/(60*60)), "ЧЦ=2; ЧН=00; ЧВН=") + ":" 
				+ Формат(Цел((Значение - (Цел(Значение/(60*60))*60*60))/60), "ЧЦ=2; ЧН=00; ЧВН=") + ":" 
				+ Формат(Значение-Цел(Значение/60)*60, "ЧЦ=2; ЧН=00; ЧВН=");
	КонецЕсли;
			
КонецФункции

&НаСервере
Функция Получить_ID_ЗвонкаНаСервере(КлючЗаписи)	
	Возврат КлючЗаписи.ID_Звонка;	
КонецФункции

#КонецОбласти
