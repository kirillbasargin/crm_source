#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("АвтоТест") Тогда // Возврат при получении формы для анализа.
		Возврат;
	КонецЕсли;
	
	Если Пользователи.РолиДоступны("РедактированиеСрокаБронирования") Тогда
		Элементы.ДлительностьСрокаБронирования.ТолькоПросмотр = Ложь;		
	КонецЕсли;
	
	Если Объект.Ссылка.Пустая() Тогда
		Отказ = ПроверитьВозможностьСозданияДокумента();
		Если Отказ Тогда
			Сообщение 		= Новый СообщениеПользователю;
			Сообщение.Текст = "По объекту недвижимости: """ + Объект.ОбъектНедвижимости + """ нельзя завести документ бронирования, по причине отсутствия допустимого статуса!";
			Сообщение.Сообщить();
		КонецЕсли;
		Если ЗначениеЗаполнено(Объект.Проект) Тогда
			Объект.ДлительностьСрокаБронирования = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Объект.Проект, "ДлительностьБронирования");
		КонецЕсли;
		//Если ЗначениеЗаполнено(Объект.Проект) 
		//		И НЕ CRMУправлениеОбъектамиНедвижимостиСервер.ОбъектНедвижимостиЗабронирован(Объект.ОбъектНедвижимости) Тогда
			//Объект.ДатаНачалаСрокаБронирования 	= ТекущаяДата();
			//Объект.ДатаКонцаСрокаБронирования 	= ТекущаяДата() + 86400 * Объект.ДлительностьСрокаБронирования;
		//КонецЕсли;
		Элементы.ФормаВвестиДокументСнятияСБронирования.Видимость = Ложь;
		
		//<852115>, Басаргин (08.08.2018) {
		Объект.ДомКлик = УправлениеДоступом.ЕстьРоль("БронированиеДомКлик", , ПользователиКлиентСервер.АвторизованныйПользователь()) И Не Пользователи.ЭтоПолноправныйПользователь();
		//<852115> }
	Иначе		
		ДействующаяБронь = ПолучитьПризнакДействующейБрони(Объект.Ссылка);
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	Если НЕ Объект.Автор = Пользователи.АвторизованныйПользователь()
			//EXTCODE Шумилин Сергей 25.10.2017 {{ --->Временно
			И НЕ Пользователи.РолиДоступны("СозданиеСнятияСБронирования")
			И НЕ Пользователи.РолиДоступны("ПолныеПрава") Тогда
			//EXTCODE Шумилин Сергей 25.10.2017 <--- }} 
		КоманднаяПанель.ПодчиненныеЭлементы.ФормаВвестиДокументСнятияСБронирования.Доступность = Ложь;
	Иначе
		КоманднаяПанель.ПодчиненныеЭлементы.ФормаВвестиДокументСнятияСБронирования.Доступность = НЕ ВведёнДокументСнятияСБронирования();
	КонецЕсли;
	
	
	//ЭлементУО 			= УсловноеОформление.Элементы.Добавить();
	//ПолеЭлемента		= ЭлементУО.Поля.Элементы.Добавить();
	//ПолеЭлемента.Поле	= Новый ПолеКомпоновкиДанных("ФормаСкажиПривет");		
	//ОбщегоНазначенияКлиентСервер.ДобавитьЭлементКомпоновки(ЭлементУО.Отбор,
	//														"Автор", ВидСравненияКомпоновкиДанных.НеРавно, Пользователи.АвторизованныйПользователь());	
	//ЭлементУО.Оформление.УстановитьЗначениеПараметра("Доступность", Ложь);	
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)
	
	//<852115>, Басаргин (08.08.2018) {
	Если Объект.ДомКлик 
		И Объект.ВидОперации = ПредопределенноеЗначение("Перечисление.ВидыОперацииБронирования.Бронирование") 
		И НЕ ПараметрыЗаписи.Свойство("ОтправлятьSMS_ДомКлик") Тогда
		Отказ = Истина;
		Оповещение = Новый ОписаниеОповещения("ПослеЗакрытияВопросаМенеджеру", ЭтаФорма);
		ПоказатьВопрос(Оповещение, "Создать SMS по бронированию ДомКлик?", РежимДиалогаВопрос.ДаНет, 0); 
	КонецЕсли;	
	//<852115> }
		
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)

	//<852115>, Басаргин (08.08.2018) {
	Если Объект.ДомКлик 
		И Объект.ВидОперации = ПредопределенноеЗначение("Перечисление.ВидыОперацииБронирования.Бронирование") 
		И ПараметрыЗаписи.Свойство("ОтправлятьSMS_ДомКлик") Тогда
		ТекущийОбъект.ДополнительныеСвойства.Вставить("ОтправлятьSMS_ДомКлик", ПараметрыЗаписи.ОтправлятьSMS_ДомКлик);
		Если ПараметрыЗаписи.Свойство("ОтправлятьSMS_ДомКлик") Тогда
			ПараметрыЗаписи.Удалить("ОтправлятьSMS_ДомКлик");
		КонецЕсли;
	КонецЕсли;
	//<852115> }
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	Оповестить("СобытиеБронирования");
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормы

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ВвестиДокументСнятияСБронирования(Команда)

	Если НЕ ЗначениеЗаполнено(Объект.Ссылка) Тогда
	
		ОписаниеОповещения = Новый ОписаниеОповещения("ВвестиДокументСнятияСБронированияЗавершение", ЭтотОбъект);
		ПоказатьВопрос(ОписаниеОповещения, 
						"Перед вводом документа с видом операции ""Снятие с бронирования"" необходимо сначала записать текущий документ. Продолжить?",
						РежимДиалогаВопрос.ДаНет, 
						60);	
						
	Иначе
						
		СоздатьДокументБронирования();
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура ПослеЗакрытияВопросаМенеджеру(Результат, ДополнительныеПараметры) Экспорт
	
	Записать(Новый Структура("РежимЗаписи, ОтправлятьSMS_ДомКлик", РежимЗаписиДокумента.Проведение, Результат = КодВозвратаДиалога.Да));
	Закрыть();
	
КонецПроцедуры

&НаКлиенте
Процедура ВвестиДокументСнятияСБронированияЗавершение(РезультатВопроса, ДополнительныеПараметры) Экспорт
	
	Если РезультатВопроса = КодВозвратаДиалога.Да Тогда
		
		Если Не Записать() Тогда
			Возврат;		
		КонецЕсли;
		
		СоздатьДокументБронирования();
		
	КонецЕсли; 
	
КонецПроцедуры

&НаКлиенте
Процедура СоздатьДокументБронирования()
	
	ЗначенияЗаполнения = Новый Структура;
	ЗначенияЗаполнения.Вставить("ВидОперации", 						ПредопределенноеЗначение("Перечисление.ВидыОперацииБронирования.СнятиеБронирования"));
	ЗначенияЗаполнения.Вставить("ОснованиеДляСнятияБронирования", 	Объект.Ссылка);
		
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("ЗначенияЗаполнения", ЗначенияЗаполнения);
	
	ПараметрыФормы.Вставить("ЗначениеКопирования", Объект.Ссылка);
	
	ОткрытьФорму("Документ.Бронирование.ФормаОбъекта", ПараметрыФормы, ЭтаФорма,,,,,РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);

КонецПроцедуры // СоздатьДокументБронирования()

&НаСервере
Функция ВведёнДокументСнятияСБронирования()

	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	Бронирование.Ссылка КАК Ссылка
	|ИЗ
	|	Документ.Бронирование КАК Бронирование
	|ГДЕ
	|	Бронирование.Проведен
	|	И Бронирование.ОснованиеДляСнятияБронирования = &ОснованиеДляСнятияБронирования";
	
	Запрос.УстановитьПараметр("ОснованиеДляСнятияБронирования", Объект.Ссылка);
	РезультатЗапроса = Запрос.Выполнить();
	
	Возврат НЕ РезультатЗапроса.Пустой();
	
КонецФункции

&НаСервере
Функция ПроверитьВозможностьСозданияДокумента()

	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	СтатусыОбъектовНедвижимостиСрезПоследних.Статус КАК Статус
	|ИЗ
	|	РегистрСведений.СтатусыОбъектовНедвижимости.СрезПоследних(, ОбъектНедвижимости = &ОбъектНедвижимости) КАК СтатусыОбъектовНедвижимостиСрезПоследних
	|ГДЕ
	|	СтатусыОбъектовНедвижимостиСрезПоследних.Статус В (ЗНАЧЕНИЕ(Перечисление.СтатусыОбъектовНедвижимости.Свободен), ЗНАЧЕНИЕ(Перечисление.СтатусыОбъектовНедвижимости.Забронирован))";
	Запрос.УстановитьПараметр("ОбъектНедвижимости", Объект.ОбъектНедвижимости);
	РезультатЗапроса = Запрос.Выполнить();

	Возврат РезультатЗапроса.Пустой();
	
КонецФункции

&НаСерверебезКонтекста
Функция ПолучитьПризнакДействующейБрони(Ссылка)
		
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	СтатусыОбъектовНедвижимостиСрезПоследних.Регистратор КАК Регистратор
	|ИЗ
	|	РегистрСведений.СтатусыОбъектовНедвижимости.СрезПоследних КАК СтатусыОбъектовНедвижимостиСрезПоследних
	|ГДЕ
	|	СтатусыОбъектовНедвижимостиСрезПоследних.Регистратор = &Ссылка
	|	И СтатусыОбъектовНедвижимостиСрезПоследних.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыОбъектовНедвижимости.Забронирован)";
	
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Возврат НЕ РезультатЗапроса.Пустой();
	
КонецФункции

#КонецОбласти
