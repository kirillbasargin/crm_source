
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ЗаполнитьЗначенияСвойств(ЭтотОбъект, Параметры, "ЗапланированнаяВстреча,ЗапланированныйЗвонок,Основание,ТекущееСобытие,СтатусЗапроса,ТекущаяВстреча,ТекущийЗвонок, РасшифровкаСтатуса");
	
	Если Параметры.ТекущееСобытие Тогда
	
		Элементы.Тема.Видимость				= Ложь;
		Элементы.ПланируемаяДата.Видимость	= Ложь;
		Заголовок = "Результат переговоров";
		
		//Если НЕ ТипВзаимодействия Тогда
		//	Если ЗначениеЗаполнено(ЗапланированнаяВстреча) Тогда
		//		Место = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ЗапланированнаяВстреча, "МестоПроведенияВстречи");
		//		МестоПроведенияВстречи = ?(ЗначениеЗаполнено(ЗапланированнаяВстреча), ?(ЗначениеЗаполнено(Место), Место, ""), "");
		//	КонецЕсли;
		//	Если ЗначениеЗаполнено(ТекущаяВстреча) Тогда
		//		Место = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ТекущаяВстреча, "МестоПроведенияВстречи");
		//		МестоПроведенияВстречи = ?(ЗначениеЗаполнено(ТекущаяВстреча), ?(ЗначениеЗаполнено(Место), Место, ""), "");
		//	КонецЕсли;			
		//КонецЕсли;
	Иначе
		//Элементы.Комментарий.Видимость = Ложь;
		Тема 			= ?(ЗначениеЗаполнено(ЗапланированнаяВстреча), ЗапланированнаяВстреча.Тема, ЗапланированныйЗвонок.Тема);
		ПланируемаяДата = ?(ЗначениеЗаполнено(ЗапланированнаяВстреча), ЗапланированнаяВстреча.Дата, ЗапланированныйЗвонок.Дата);
		Заголовок 		= "Результат переговоров";
		
		ПланируемаяДата = ?(НЕ ЗначениеЗаполнено(ПланируемаяДата), ТекущаяДата(), ПланируемаяДата);
		
		Элементы.ПланируемаяДата.Видимость	= Ложь;
		
		//<810997>, Басаргин (11.05.2018) {
		Если ТипВзаимодействия = "" Тогда
			ТипВзаимодействия = ?(ЗначениеЗаполнено(ЗапланированнаяВстреча), "Встреча", ?(ЗначениеЗаполнено(ЗапланированныйЗвонок), "ТелефонныйЗвонок", ""));
		КонецЕсли;		
		//<810997> }
	КонецЕсли;
		
	Для каждого ЭлементСпискаЗначений Из Параметры.МассивКлиентов Цикл		
		Если Клиенты.НайтиСтроки(Новый Структура("Клиент", ЭлементСпискаЗначений.Значение)).Количество() Тогда
			Продолжить;
		КонецЕсли;		
		НоваяСтрока 		= Клиенты.Добавить();
		НоваяСтрока.Клиент 	= ЭлементСпискаЗначений.Значение;
		НоваяСтрока.Отметка = Истина;
	КонецЦикла;
	
	//++ Юкаев Роман 20180316 (//
	Если Пользователи.РолиДоступны("МенеджерИпотечный") Тогда
		Элементы.ТипВзаимодействия.СписокВыбора.Добавить("Письмо", "Письмо");
	КонецЕсли;
	
	Если ТипВзаимодействия = "" Тогда
		ТипВзаимодействия = "Встреча";
	КонецЕсли;
	//-- Юкаев Роман 20180316 )
	Элементы.МестоПроведенияВстречи.Видимость = ТипВзаимодействия = "Встреча" И НЕ ЗначениеЗаполнено(ЗапланированнаяВстреча) И НЕ ЗначениеЗаполнено(ТекущаяВстреча);
	
	//<810997>, Басаргин (03.05.2018) {
	ЭтоМенеджерГПТ = УправлениеДоступом.ЕстьРоль("МенеджерГПТ", , ПользователиКлиентСервер.АвторизованныйПользователь()) И НЕ УправлениеДоступом.ЕстьРоль("ПолныеПрава", , ПользователиКлиентСервер.АвторизованныйПользователь());	
	//<810997> }
	
	Ответственный = Пользователи.АвторизованныйПользователь();
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
		
	Если ТипВзаимодействия = "Встреча" И НЕ ЗначениеЗаполнено(ЗапланированнаяВстреча) И НЕ ЗначениеЗаполнено(ТекущаяВстреча) Тогда  
		
		//Элементы.МестоПроведенияВстречи.СписокВыбора.Очистить();				
		
		СписокВыбора = Новый СписокЗначений;
		СписокВыбораГруппы = Новый СписокЗначений;
		
		ОтветственныйПриИзмененииНаСервере(СписокВыбора, СписокВыбораГруппы);
		
		Если СписокВыбораГруппы.Количество() Тогда
			ОбработчикОповещенияОЗакрытии = Новый ОписаниеОповещения("ВыборОдногоЭлементаИзСписка", ЭтотОбъект, Новый Структура("ТипВыбора", "ГруппаОтветственного"));
			СписокВыбораГруппы.ПоказатьВыборЭлемента(ОбработчикОповещенияОЗакрытии, НСтр("ru = 'Выберите группу пользователя.'"), СписокВыбораГруппы[0]);
		КонецЕсли;	
			
		Если СписокВыбора.Количество() Тогда
			
			//Для каждого Элемент Из СписокВыбора Цикл
			//	Элементы.МестоПроведенияВстречи.СписокВыбора.Добавить(Элемент.Значение);	
			//КонецЦикла;	
			
			ОбработчикОповещенияОЗакрытии = Новый ОписаниеОповещения("ВыборОдногоЭлементаИзСписка", ЭтотОбъект, Новый Структура("ТипВыбора", "МестоПроведенияВстречи"));
			СписокВыбора.ПоказатьВыборЭлемента(ОбработчикОповещенияОЗакрытии, НСтр("ru = 'Выберите место встречи.'"), СписокВыбора[0]);		
		ИначеЕсли ЗначениеЗаполнено(МестоПроведенияВстречи) Тогда
			Элементы.МестоПроведенияВстречи.СписокВыбора.Добавить(МестоПроведенияВстречи);			
		КонецЕсли;
		
		//СписокВыбора = Новый СписокЗначений;
		//ОтветственныйПриИзмененииНаСервере(СписокВыбора);
		//Если СписокВыбора.Количество() Тогда
		//	ОбработчикОповещенияОЗакрытии = Новый ОписаниеОповещения("ВыборОдногоЭлементаИзСписка", ЭтотОбъект, Новый Структура("ТипВыбора", "Ответственный"));
		//	СписокВыбора.ПоказатьВыборЭлемента(ОбработчикОповещенияОЗакрытии, НСтр("ru = 'Выберите место встречи.'"), СписокВыбора[0]);
		//	Для каждого Элемент Из СписокВыбора Цикл
		//		Элементы.МестоПроведенияВстречи.СписокВыбора.Добавить(Элемент.Значение);	
		//	КонецЦикла;
		//ИначеЕсли ЗначениеЗаполнено(МестоПроведенияВстречи) Тогда
		//	//Если НЕ Элементы.МестоПроведенияВстречи.СписокВыбора.НайтиПоЗначению(МестоПроведенияВстречи) = Неопределено Тогда
		//		//Элементы.МестоПроведенияВстречи.СписокВыбора.Очистить();
		//		Элементы.МестоПроведенияВстречи.СписокВыбора.Добавить(МестоПроведенияВстречи);
		//	//КонецЕсли;
		//КонецЕсли;
		
	ИначеЕсли ТипВзаимодействия = "Встреча" И ЗначениеЗаполнено(ТекущаяВстреча) Тогда	
		
		МестоПроведенияВстречи_ТекущаяВстреча = ЗначениеРеквизитаОбъекта(ТекущаяВстреча, "МестоПроведенияВстречи");
		ГруппаОтветственного_ТекущаяВстреча = ЗначениеРеквизитаОбъекта(ТекущаяВстреча, "ГруппаОтветственного");

		Если НЕ ЗначениеЗаполнено(МестоПроведенияВстречи_ТекущаяВстреча) Тогда
			
			//Элементы.МестоПроведенияВстречи.СписокВыбора.Очистить();				
			
			СписокВыбора = Новый СписокЗначений;
			
			ОтветственныйПриИзмененииНаСервере(СписокВыбора);
						
			Если СписокВыбора.Количество() Тогда
				
				//Для каждого Элемент Из СписокВыбора Цикл
				//	Элементы.МестоПроведенияВстречи.СписокВыбора.Добавить(Элемент.Значение);	
				//КонецЦикла;		
				
				ОбработчикОповещенияОЗакрытии = Новый ОписаниеОповещения("ВыборОдногоЭлементаИзСписка", ЭтотОбъект, Новый Структура("ТипВыбора", "МестоПроведенияВстречи"));
				СписокВыбора.ПоказатьВыборЭлемента(ОбработчикОповещенияОЗакрытии, НСтр("ru = 'Выберите место встречи.'"), СписокВыбора[0]);		
			ИначеЕсли ЗначениеЗаполнено(МестоПроведенияВстречи) Тогда
				Элементы.МестоПроведенияВстречи.СписокВыбора.Добавить(МестоПроведенияВстречи);			
			КонецЕсли;
		КонецЕсли;
		
		Если НЕ ЗначениеЗаполнено(ГруппаОтветственного_ТекущаяВстреча) Тогда			
			
			СписокВыбораГруппы = Новый СписокЗначений;
			
			ОтветственныйПриИзмененииНаСервере(, СписокВыбораГруппы);
			
			Если СписокВыбораГруппы.Количество() Тогда
				ОбработчикОповещенияОЗакрытии = Новый ОписаниеОповещения("ВыборОдногоЭлементаИзСписка", ЭтотОбъект, Новый Структура("ТипВыбора", "ГруппаОтветственного"));
				СписокВыбораГруппы.ПоказатьВыборЭлемента(ОбработчикОповещенияОЗакрытии, НСтр("ru = 'Выберите группу пользователя.'"), СписокВыбораГруппы[0]);
			КонецЕсли;	
		КонецЕсли;
		
	ИначеЕсли ТипВзаимодействия = "Встреча" И ЗначениеЗаполнено(ЗапланированнаяВстреча) Тогда	
		
		МестоПроведенияВстречи_ЗапланированнаяВстреча = ЗначениеРеквизитаОбъекта(ЗапланированнаяВстреча, "МестоПроведенияВстречи");
		ГруппаОтветственного_ЗапланированнаяВстреча = ЗначениеРеквизитаОбъекта(ЗапланированнаяВстреча, "ГруппаОтветственного");

		Если НЕ ЗначениеЗаполнено(МестоПроведенияВстречи_ЗапланированнаяВстреча) Тогда
			
			Элементы.МестоПроведенияВстречи.СписокВыбора.Очистить();				
			
			СписокВыбора = Новый СписокЗначений;
			
			ОтветственныйПриИзмененииНаСервере(СписокВыбора);
						
			Если СписокВыбора.Количество() Тогда
				Для каждого Элемент Из СписокВыбора Цикл
					Элементы.МестоПроведенияВстречи.СписокВыбора.Добавить(Элемент.Значение);	
				КонецЦикла;				
				ОбработчикОповещенияОЗакрытии = Новый ОписаниеОповещения("ВыборОдногоЭлементаИзСписка", ЭтотОбъект, Новый Структура("ТипВыбора", "МестоПроведенияВстречи"));
				СписокВыбора.ПоказатьВыборЭлемента(ОбработчикОповещенияОЗакрытии, НСтр("ru = 'Выберите место встречи.'"), СписокВыбора[0]);		
			ИначеЕсли ЗначениеЗаполнено(МестоПроведенияВстречи) Тогда
				Элементы.МестоПроведенияВстречи.СписокВыбора.Добавить(МестоПроведенияВстречи);			
			КонецЕсли;
		КонецЕсли;
		
		Если НЕ ЗначениеЗаполнено(ГруппаОтветственного_ЗапланированнаяВстреча) Тогда			
			
			СписокВыбораГруппы = Новый СписокЗначений;
			
			ОтветственныйПриИзмененииНаСервере(, СписокВыбораГруппы);
			
			Если СписокВыбораГруппы.Количество() Тогда
				ОбработчикОповещенияОЗакрытии = Новый ОписаниеОповещения("ВыборОдногоЭлементаИзСписка", ЭтотОбъект, Новый Структура("ТипВыбора", "ГруппаОтветственного"));
				СписокВыбораГруппы.ПоказатьВыборЭлемента(ОбработчикОповещенияОЗакрытии, НСтр("ru = 'Выберите группу пользователя.'"), СписокВыбораГруппы[0]);
			КонецЕсли;	
		КонецЕсли;
				
	КонецЕсли;	
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура КлиентыОтметкаПриИзменении(Элемент)
	
	Если ТипВзаимодействия = "ТелефонныйЗвонок" Тогда
		
		ТекущиеДанные = Элементы.Клиенты.ТекущиеДанные;
		Для каждого ЭлементКоллекции Из Клиенты Цикл	
			Если НЕ ТекущиеДанные = ЭлементКоллекции Тогда
				ЭлементКоллекции.Отметка = Ложь;			
			КонецЕсли;		
		КонецЦикла;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ТипВзаимодействияПриИзменении(Элемент)
	
	//Для каждого ЭлементКоллекции Из Клиенты Цикл	
	//	ЭлементКоллекции.Отметка = Ложь;				
	//КонецЦикла;
	
	Элементы.МестоПроведенияВстречи.Видимость = ТипВзаимодействия = "Встреча";
	Если ТипВзаимодействия = "Встреча" Тогда
		
		Элементы.МестоПроведенияВстречи.СписокВыбора.Очистить();				
		
		СписокВыбора = Новый СписокЗначений;
		СписокВыбораГруппы = Новый СписокЗначений;
		
		ОтветственныйПриИзмененииНаСервере(СписокВыбора, СписокВыбораГруппы);
		
		Если СписокВыбораГруппы.Количество() Тогда
			ОбработчикОповещенияОЗакрытии = Новый ОписаниеОповещения("ВыборОдногоЭлементаИзСписка", ЭтотОбъект, Новый Структура("ТипВыбора", "ГруппаОтветственного"));
			СписокВыбораГруппы.ПоказатьВыборЭлемента(ОбработчикОповещенияОЗакрытии, НСтр("ru = 'Выберите группу пользователя.'"), СписокВыбораГруппы[0]);
		КонецЕсли;	
			
		Если СписокВыбора.Количество() Тогда
			Для каждого Элемент Из СписокВыбора Цикл
				Элементы.МестоПроведенияВстречи.СписокВыбора.Добавить(Элемент.Значение);	
			КонецЦикла;					
			ОбработчикОповещенияОЗакрытии = Новый ОписаниеОповещения("ВыборОдногоЭлементаИзСписка", ЭтотОбъект, Новый Структура("ТипВыбора", "МестоПроведенияВстречи"));
			СписокВыбора.ПоказатьВыборЭлемента(ОбработчикОповещенияОЗакрытии, НСтр("ru = 'Выберите место встречи.'"), СписокВыбора[0]);	
		ИначеЕсли ЗначениеЗаполнено(МестоПроведенияВстречи) Тогда
			Элементы.МестоПроведенияВстречи.СписокВыбора.Добавить(МестоПроведенияВстречи);			
		КонецЕсли;
		
		//СписокВыбора = Новый СписокЗначений;
		//ОтветственныйПриИзмененииНаСервере(СписокВыбора);
		//Если СписокВыбора.Количество() Тогда
		//	ОбработчикОповещенияОЗакрытии = Новый ОписаниеОповещения("ВыборОдногоЭлементаИзСписка", ЭтотОбъект, Новый Структура("ТипВыбора", "Ответственный"));
		//	СписокВыбора.ПоказатьВыборЭлемента(ОбработчикОповещенияОЗакрытии, НСтр("ru = 'Выберите ответственного.'"), СписокВыбора[0]);
		//КонецЕсли;		
	Иначе
		МестоПроведенияВстречи = "";
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура МестоПроведенияВстречиПриИзменении(Элемент)
	
	Если ЗначениеЗаполнено(МестоПроведенияВстречи) Тогда
		СписокВыбора = Новый СписокЗначений;
		МестоПроведенияВстречиПриИзмененииНаСервере(СписокВыбора);
		Если СписокВыбора.Количество() Тогда
			ОбработчикОповещенияОЗакрытии = Новый ОписаниеОповещения("ВыборОдногоЭлементаИзСписка", ЭтотОбъект, Новый Структура("ТипВыбора", "Ответственный"));  
			СписокВыбора.ПоказатьВыборЭлемента(ОбработчикОповещенияОЗакрытии, НСтр("ru = 'Выберите ответственного.'"), СписокВыбора[0]);
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура СоздатьВзаимодействие(Команда)
	
	МассивКлиентов = Новый Массив;
	Для каждого ЭлементКоллекции Из Клиенты Цикл
		Если ЭлементКоллекции.Отметка Тогда
			МассивКлиентов.Добавить(ЭлементКоллекции.Клиент);
		КонецЕсли;				
	КонецЦикла;
	
	Отказ = ВыполнитьПроверки(МассивКлиентов);
	
	Если Отказ Тогда	
		Возврат;		
	КонецЕсли;
		
	СтрПараметры = Новый Структура("Основание,ЗапланированноеВзаимодействие,ТекущееВзаимодействие,Тема,Комментарий,ТипДокумента,ПланируемаяДата,ТекущееСобытие,Клиенты, СтатусЗапроса, ЭтоМенеджерГПТ, Ответственный, РасшифровкаСтатуса", 
									Основание, 
									?(ТипВзаимодействия = "ТелефонныйЗвонок", ЗапланированныйЗвонок, ЗапланированнаяВстреча),
									?(ТипВзаимодействия = "ТелефонныйЗвонок", ТекущийЗвонок, 		ТекущаяВстреча),
									Тема, Комментарий, 
									?(ТипВзаимодействия = "ТелефонныйЗвонок", "ТелефонныйЗвонок", 	"Встреча"), 
									ПланируемаяДата, ТекущееСобытие, МассивКлиентов, СтатусЗапроса, ЭтоМенеджерГПТ, Ответственный, РасшифровкаСтатуса);
									
	Если ТипВзаимодействия = "Встреча" Тогда
		СтрПараметры.Вставить("МестоПроведенияВстречи", МестоПроведенияВстречи);
		СтрПараметры.Вставить("ГруппаОтветственного", ГруппаОтветственного);
	КонецЕсли;									
	
	Если ТипВзаимодействия <> "Письмо" Тогда
		
		СоздатьВзаимодействиеНаСервере(СтрПараметры);
		Закрыть();
				
		//<810997>, Басаргин (03.05.2018) {
		Если НЕ СтрПараметры.ЭтоМенеджерГПТ И СтрПараметры.СтатусЗапроса = ПредопределенноеЗначение("Перечисление.СтатусыЗапроса.ВРаботе") Тогда
			Возврат;	
		КонецЕсли;	
		//<810997> }
		
		СоздатьЗапланированноеВзаимодействие();
	Иначе
		Закрыть();
		СоздатьПисьмо(МассивКлиентов, Комментарий, Основание);
	КонецЕсли;
	Оповестить("ОбновитьРабочийСтолКлиента");
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура МестоПроведенияВстречиПриИзмененииНаСервере(СписокВыбора = Неопределено)
	
	Если ЗначениеЗаполнено(МестоПроведенияВстречи) Тогда	
		Проект = ?(ТипЗнч(Основание) = Тип("ДокументСсылка.Запрос"), ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Основание, "Проект"), Неопределено);
		Ответственный = РегистрыСведений.Взаимодействия.ПолучитьГруппуОфисаПоПроекту(МестоПроведенияВстречи, Проект, СписокВыбора);
	КонецЕсли;	
		
КонецПроцедуры

&НаСервереБезКонтекста
Процедура СоздатьВзаимодействиеНаСервере(СтрПараметры)
	
	Если СтрПараметры.ТекущееСобытие Тогда
		
		//Если есть текущее взаимодейтсвие, меняем его
		Если ЗначениеЗаполнено(СтрПараметры.ТекущееВзаимодействие) Тогда
			
			ДокументОбъект = СтрПараметры.ТекущееВзаимодействие.ПолучитьОбъект();
			
		//Или, может быть, есть запланированное, тогда меняем его
		ИначеЕсли ЗначениеЗаполнено(СтрПараметры.ЗапланированноеВзаимодействие) Тогда
			ДокументОбъект = СтрПараметры.ЗапланированноеВзаимодействие.ПолучитьОбъект();
		//В противном случае, создаём новый 
		Иначе
						
			//<810997>, Басаргин (07.05.2018) {
			Если НЕ СтрПараметры.ЭтоМенеджерГПТ И СтрПараметры.СтатусЗапроса = ПредопределенноеЗначение("Перечисление.СтатусыЗапроса.ВРаботе") Тогда
				Возврат;			
			КонецЕсли;
			//<810997> }
			
			ДокументОбъект = Документы[СтрПараметры.ТипДокумента].СоздатьДокумент();
			//++ Юкаев Роман 20180822 (//AN-38
			Если ЗначениеЗаполнено(СтрПараметры.СтатусЗапроса) Тогда
				ДокументОбъект.СтатусЗапроса = СтрПараметры.СтатусЗапроса;
			КонецЕсли;
			
			Если ЗначениеЗаполнено(СтрПараметры.РасшифровкаСтатуса) Тогда
				ДокументОбъект.РасшифровкаСтатуса = СтрПараметры.РасшифровкаСтатуса;
			КонецЕсли;
			
			ДокументОбъект.Заполнить(СтрПараметры.Основание);
			ДокументОбъект.Дата 	= ТекущаяДата();
			ДокументОбъект.Тема 	= ?(СтрПараметры.ТипДокумента = "ТелефонныйЗвонок", "Телефонный звонок", "Встреча");
		КонецЕсли;
		
		Если ПустаяСтрока(ДокументОбъект.Описание) Тогда
			ДокументОбъект.Описание = СтрПараметры.Комментарий
		Иначе
			ДокументОбъект.Описание = СтрПараметры.Комментарий + Символы.ПС + "------------" + Символы.ПС + ДокументОбъект.Описание;
		КонецЕсли;
		
		УстановитьКлиентов(СтрПараметры.ТипДокумента, СтрПараметры.Клиенты, ДокументОбъект);
		
		ДокументОбъект.Ответственный = ?(ЗначениеЗаполнено(СтрПараметры.Ответственный) И СтрПараметры.ТипДокумента = "Встреча", СтрПараметры.Ответственный, ПользователиКлиентСервер.ТекущийПользователь());
		ДокументОбъект.ДатаОкончания = ТекущаяДата();
		
		Если СтрПараметры.ТипДокумента = "Встреча" Тогда 
			Если СтрПараметры.Свойство("МестоПроведенияВстречи") И ЗначениеЗаполнено(СтрПараметры.МестоПроведенияВстречи) Тогда
				ДокументОбъект.МестоПроведенияВстречи = СтрПараметры.МестоПроведенияВстречи;
			КонецЕсли;
			Если СтрПараметры.Свойство("ГруппаОтветственного") И ЗначениеЗаполнено(СтрПараметры.ГруппаОтветственного) Тогда
				ДокументОбъект.ГруппаОтветственного = СтрПараметры.ГруппаОтветственного;
			КонецЕсли;			
		КонецЕсли;
		
		ДокументОбъект.Записать();			
		ПроставитьПризнакРассмотреноДляВзаимодействия(ДокументОбъект.Ссылка, СтрПараметры.Основание);
		
	//Запланированное взаимодействие
	Иначе
				
		Рассмотрено = Истина;
		
		//Уже есть запланированное, тогда меняем его
		Если ЗначениеЗаполнено(СтрПараметры.ЗапланированноеВзаимодействие) Тогда
			ДокументОбъект = СтрПараметры.ЗапланированноеВзаимодействие.ПолучитьОбъект();
			Если СтрПараметры.ТипДокумента = "Встреча" Тогда
				ДокументОбъект.Дата = ?(ЗначениеЗаполнено(СтрПараметры.ПланируемаяДата), СтрПараметры.ПланируемаяДата, ТекущаяДата());
			КонецЕсли;
			
			//Рассмотрено = Истина;
			
		//В противном случае, создаём новый 
		Иначе						
			ДокументОбъект 			= Документы[СтрПараметры.ТипДокумента].СоздатьДокумент();
			ДокументОбъект.Заполнить(СтрПараметры.Основание);
			ДокументОбъект.Дата 	= ТекущаяДата();
		КонецЕсли;
		
		Если ПустаяСтрока(ДокументОбъект.Описание) Тогда
			ДокументОбъект.Описание = СтрПараметры.Комментарий
		Иначе
			ДокументОбъект.Описание = СтрПараметры.Комментарий + Символы.ПС + "------------" + Символы.ПС + ДокументОбъект.Описание;
		КонецЕсли;
		
		УстановитьКлиентов(СтрПараметры.ТипДокумента, СтрПараметры.Клиенты, ДокументОбъект);
		
		ДокументОбъект.Ответственный 	= ?(ЗначениеЗаполнено(СтрПараметры.Ответственный) И СтрПараметры.ТипДокумента = "Встреча", СтрПараметры.Ответственный, ПользователиКлиентСервер.ТекущийПользователь());
		ДокументОбъект.Тема 			= СтрПараметры.Тема;
		
		ДокументОбъект.ДатаОкончания = ТекущаяДата();
		
		Если СтрПараметры.ТипДокумента = "Встреча" Тогда 
			Если СтрПараметры.Свойство("МестоПроведенияВстречи") И ЗначениеЗаполнено(СтрПараметры.МестоПроведенияВстречи) Тогда
				ДокументОбъект.МестоПроведенияВстречи = СтрПараметры.МестоПроведенияВстречи;
			КонецЕсли;
			Если СтрПараметры.Свойство("ГруппаОтветственного") И ЗначениеЗаполнено(СтрПараметры.ГруппаОтветственного) Тогда
				ДокументОбъект.ГруппаОтветственного = СтрПараметры.ГруппаОтветственного;
			КонецЕсли;			
		КонецЕсли;
		
		ДокументОбъект.Записать();
				
		//ПроставитьРассмотретьПослеДляВзаимодействия(ДокументОбъект.Ссылка, СтрПараметры.Основание, СтрПараметры.ПланируемаяДата);
	
		//<810997>, Басаргин (08.05.2018) {
		Если Рассмотрено Тогда
			ПроставитьПризнакРассмотреноДляВзаимодействия(ДокументОбъект.Ссылка, СтрПараметры.Основание);	
		Иначе
			ПроставитьРассмотретьПослеДляВзаимодействия(ДокументОбъект.Ссылка, СтрПараметры.Основание, СтрПараметры.ПланируемаяДата);	
		КонецЕсли;
		//<810997> }
			
	КонецЕсли;
	
	//<Взаимодействия>, Басаргин (03.11.2017) {
	РегистрыСведений.Взаимодействия.ЗаписатьВзаимодействие(ДокументОбъект); //?(СтрПараметры.ТипДокумента = "Встреча", ДокументОбъект.ГруппаОтветственного, Неопределено)	
	//<Взаимодействия> }
		
КонецПроцедуры  

&НаСервереБезКонтекста
Процедура ПроставитьПризнакРассмотреноДляВзаимодействия(ДокВзаимодействие, ДокЗапрос)
	
	//Предмет взаимодействия
	Запись 					= РегистрыСведений.ПредметыПапкиВзаимодействий.СоздатьМенеджерЗаписи();
	Запись.Взаимодействие 	= ДокВзаимодействие;
	Запись.Предмет 			= ДокЗапрос;
	Запись.Рассмотрено      = Истина;
	Запись.Записать();		

КонецПроцедуры

&НаСервереБезКонтекста
Процедура ПроставитьРассмотретьПослеДляВзаимодействия(ДокВзаимодействие, ДокЗапрос, РассмотретьПосле)
	
	//РассмотретьПосле
	Запись 					= РегистрыСведений.ПредметыПапкиВзаимодействий.СоздатьМенеджерЗаписи();
	Запись.Взаимодействие 	= ДокВзаимодействие.Ссылка;
	Запись.Предмет 			= ДокЗапрос;
	Запись.РассмотретьПосле = РассмотретьПосле;
	Запись.Записать();		

КонецПроцедуры

&НаКлиенте
Процедура СоздатьЗапланированноеВзаимодействие()

	//Если была обработка текущего взаимодействия, мененджеру надо также необходимо создать запланированное взаимодействие
	Если ТекущееСобытие И СтатусЗапроса = ПредопределенноеЗначение("Перечисление.СтатусыЗапроса.ВРаботе") Тогда
		
		ПараметрыОткрываемойФормы = Новый Структура("Основание", Основание);
		
		//Если текущее событие звонок и не было звонка за сегодняшний день, НО был запланирован звонок, значит, он был скорректирован
		Если ТипВзаимодействия = "ТелефонныйЗвонок" 
			И НЕ ЗначениеЗаполнено(ТекущийЗвонок) 
			И ЗначениеЗаполнено(ЗапланированныйЗвонок) Тогда
			ПараметрыОткрываемойФормы.Вставить("ЗапланированныйЗвонок",	ПредопределенноеЗначение("Документ.ТелефонныйЗвонок.ПустаяСсылка"));	
		Иначе
			ПараметрыОткрываемойФормы.Вставить("ЗапланированныйЗвонок",	ЗапланированныйЗвонок);
		КонецЕсли;
		
		//Если текущее событие встреча и была запланирована ранее встеча, значит, она был скорректирована
		Если ТипВзаимодействия = "Встреча" 
			И НЕ ЗначениеЗаполнено(ТекущаяВстреча)
			И ЗначениеЗаполнено(ЗапланированнаяВстреча) Тогда
			ПараметрыОткрываемойФормы.Вставить("ЗапланированнаяВстреча", ПредопределенноеЗначение("Документ.Встреча.ПустаяСсылка"));	
		Иначе
			ПараметрыОткрываемойФормы.Вставить("ЗапланированнаяВстреча", ЗапланированнаяВстреча);
		КонецЕсли;
		
		ПараметрыОткрываемойФормы.Вставить("ТекущееСобытие", Ложь);
		
		МассивКлиентов = Новый СписокЗначений;
		Для каждого ЭлементКоллекции Из Клиенты Цикл
			МассивКлиентов.Добавить(ЭлементКоллекции.Клиент);		
		КонецЦикла;
		ПараметрыОткрываемойФормы.Вставить("МассивКлиентов", МассивКлиентов);
		
		ОткрытьФорму("Документ.Запрос.Форма.ФормаСозданияВзаимодействия", ПараметрыОткрываемойФормы,,Новый УникальныйИдентификатор,,,,РежимОткрытияОкнаФормы.БлокироватьВесьИнтерфейс);
	КонецЕсли;	

КонецПроцедуры

&НаСервереБезКонтекста
Функция ДокументВзаимодействияТелефонныйЗвонок(Клиенты, Основание)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	ПредметыПапкиВзаимодействий.Взаимодействие КАК Взаимодействие
	|ИЗ
	|	РегистрСведений.ПредметыПапкиВзаимодействий КАК ПредметыПапкиВзаимодействий
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ТелефонныйЗвонок КАК ТелефонныйЗвонок
	|		ПО ПредметыПапкиВзаимодействий.Взаимодействие = ТелефонныйЗвонок.Ссылка
	|ГДЕ
	|	ПредметыПапкиВзаимодействий.Рассмотрено
	|	И ТелефонныйЗвонок.Дата МЕЖДУ &НачалоПериода И &КонецПериода
	|	И ПредметыПапкиВзаимодействий.Предмет = &Предмет
	|	И ТелефонныйЗвонок.АбонентКонтакт В (&АбонентКонтакт)";
	
	Запрос.УстановитьПараметр("НачалоПериода", 	НачалоДня(ТекущаяДата()));
	Запрос.УстановитьПараметр("КонецПериода", 	КонецДня(ТекущаяДата()));
	Запрос.УстановитьПараметр("Предмет", 		Основание);
	Запрос.УстановитьПараметр("АбонентКонтакт", Клиенты);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Если РезультатЗапроса.Пустой() Тогда
	
		Возврат Документы.ТелефонныйЗвонок.ПустаяСсылка();		
	
	Иначе
		
		Выборка = РезультатЗапроса.Выбрать();
		Выборка.Следующий();
		Возврат Выборка.Взаимодействие; 
	
	КонецЕсли;	

КонецФункции

&НаСервереБезКонтекста
Функция ДокументВзаимодействияВстреча(Клиенты, Основание)

	Запрос = Новый Запрос;
    Запрос.Текст =
    "ВЫБРАТЬ ПЕРВЫЕ 1
    |	ПредметыПапкиВзаимодействий.Взаимодействие КАК Взаимодействие
    |ИЗ
    |	РегистрСведений.ПредметыПапкиВзаимодействий КАК ПредметыПапкиВзаимодействий
    |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.Встреча.Участники КАК ВстречаУчастники
    |		ПО ПредметыПапкиВзаимодействий.Взаимодействие = ВстречаУчастники.Ссылка
    |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.Встреча КАК Встреча
    |		ПО (ВстречаУчастники.Ссылка = Встреча.Ссылка)
    |ГДЕ
    |	ПредметыПапкиВзаимодействий.Рассмотрено
    |	И Встреча.Дата МЕЖДУ &НачалоПериода И &КонецПериода
    |	И ПредметыПапкиВзаимодействий.Предмет = &Предмет
    |	И ВстречаУчастники.Контакт В (&АбонентКонтакт)";
	
	Запрос.УстановитьПараметр("НачалоПериода", 	НачалоДня(ТекущаяДата()));
	Запрос.УстановитьПараметр("КонецПериода", 	КонецДня(ТекущаяДата()));
	Запрос.УстановитьПараметр("Предмет", 		Основание);
	Запрос.УстановитьПараметр("АбонентКонтакт", Клиенты);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Если РезультатЗапроса.Пустой() Тогда
	
		Возврат Документы.Встреча.ПустаяСсылка();		
	
	Иначе
		
		Выборка = РезультатЗапроса.Выбрать();
		Выборка.Следующий();
		Возврат Выборка.Взаимодействие; 
	
	КонецЕсли;	

КонецФункции

&НаКлиенте
Функция ВыполнитьПроверки(МассивКлиентов)
	
	Если МассивКлиентов.Количество() = 0 Тогда	
		ПоказатьПредупреждение(,"Выберите хотя бы одного клиента!", 60, "Ошибка проверки заполнения");
		Возврат Истина;
	КонецЕсли;
	
	Если ТекущееСобытие Тогда
		
		Если ПустаяСтрока(Комментарий) Тогда	
			ПоказатьПредупреждение(,"Необходимо указать комментарий!", 60, "Ошибка проверки заполнения");
			Возврат Истина;
		КонецЕсли;
		
	Иначе
		
		Если ПустаяСтрока(Тема) Тогда	
			ПоказатьПредупреждение(,"Необходимо указать тему!", 60, "Ошибка проверки заполнения");
			Возврат Истина;
		КонецЕсли;
			
		Если ПланируемаяДата = '00010101' Тогда	
			ПоказатьПредупреждение(,"Необходимо указать дату запланированного взаимодейтсвия!", 60, "Ошибка проверки заполнения");
			Возврат Истина;
		КонецЕсли;
		
	КонецЕсли;
	
	Если ТипВзаимодействия = "Встреча" И НЕ ЗначениеЗаполнено(МестоПроведенияВстречи) И НЕ ЗначениеЗаполнено(ЗапланированнаяВстреча) И НЕ ЗначениеЗаполнено(ТекущаяВстреча) Тогда
		ПоказатьПредупреждение( , "Необходимо указать офис для встречи!", 60, "Ошибка проверки заполнения");
		Возврат Истина;		
	КонецЕсли;
	
	//++ Юкаев Роман 20180822 (//AN-38
	//Если Не ЗначениеЗаполнено(СтатусЗапроса) Тогда
	//	ПоказатьПредупреждение( , "Необходимо указать статус запроса", 60, "Ошибка проверки заполнения");
	//	Возврат Истина;
	//КонецЕсли;
	//
	//Если Не ЗначениеЗаполнено(СтатусЗапроса) Тогда
	//	ПоказатьПредупреждение( , "Необходимо указать расшифровку статуса", 60, "Ошибка проверки заполнения");
	//	Возврат Истина;
	//КонецЕсли;
	//-- Юкаев Роман 20180822 )
	
	Возврат Ложь;
	
КонецФункции

&НаСервереБезКонтекста
Процедура УстановитьКлиентов(ТипДокумента, МассивКлиентов, ДокументВзаимодействия)

	Если ТипДокумента = "ТелефонныйЗвонок" Тогда
	
		Если МассивКлиентов.Количество() > 0 Тогда
		
			ДокументВзаимодействия.АбонентКонтакт = МассивКлиентов[0];	
			
			ВзаимодействияВызовСервера.ПредставлениеИВсяКонтактнаяИнформациюКонтакта(ДокументВзаимодействия.АбонентКонтакт,
	                                                                        		 ДокументВзаимодействия.АбонентПредставление,
	                                                                        		 ДокументВзаимодействия.АбонентКакСвязаться);
			
			
		КонецЕсли;	
	
	Иначе
		
		Если МассивКлиентов.Количество() = 0 Тогда
			Возврат;
		КонецЕсли;
		
		ДокументВзаимодействия.Участники.Очистить();
		
		Для каждого ЭлементМассива Из МассивКлиентов Цикл
			
			НоваяСтрока 		= ДокументВзаимодействия.Участники.Добавить();
			НоваяСтрока.Контакт = ЭлементМассива; 
			ВзаимодействияВызовСервера.ПредставлениеИВсяКонтактнаяИнформациюКонтакта(НоваяСтрока.Контакт,
		                                                                       			НоваяСтрока.ПредставлениеКонтакта,
		                                                                       			НоваяСтрока.КакСвязаться);
	
		КонецЦикла;
		
	КонецЕсли;		

КонецПроцедуры

&НаСервере
Процедура ОтветственныйПриИзмененииНаСервере(СписокВыбора = Неопределено, ГруппыПользователя = Неопределено)
	
	Если ЗначениеЗаполнено(Основание) Тогда
		Проект = ?(ТипЗнч(Основание) = Тип("ДокументСсылка.Запрос"), ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Основание, "Проект"), Неопределено);
		МестоПроведенияВстречи = РегистрыСведений.Взаимодействия.ПолучитьОфисГруппыПоПроекту(ПользователиКлиентСервер.АвторизованныйПользователь(), Проект, СписокВыбора, ГруппыПользователя);		
	КонецЕсли;
		
КонецПроцедуры

&НаКлиенте
Процедура ВыборОдногоЭлементаИзСписка(ВыбранныйЭлемент, ДополнительныеПараметры) Экспорт
	
	Если НЕ ВыбранныйЭлемент = Неопределено И ДополнительныеПараметры.Свойство("ТипВыбора") Тогда
		ЭтотОбъект[ДополнительныеПараметры.ТипВыбора] = ВыбранныйЭлемент.Значение;
		//Если ДополнительныеПараметры.ТипВыбора = "МестоПроведенияВстречи" Тогда
		//	МестоПроведенияВстречи = ВыбранныйЭлемент.Значение;
		//	//Объект.Ответственный = ВыбранныйЭлемент.Значение;
		//ИначеЕсли ДополнительныеПараметры.ТипВыбора = "Ответственный" Тогда
		//	
		//ИначеЕсли ДополнительныеПараметры.ТипВыбора = "ГруппаОтветственного" Тогда
		//	ГруппаОтветственного = ВыбранныйЭлемент.Значение;				
		//КонецЕсли;
	КонецЕсли;

КонецПроцедуры

&НаСервереБезКонтекста 
Функция ЗначениеРеквизитаОбъекта(Ссылка, ИмяРеквизита)
	Возврат ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Ссылка, ИмяРеквизита);
КонецФункции

//++ Юкаев Роман 20180313 ( //
&НаКлиенте
Процедура СоздатьПисьмо(МассивКлиентов, Комментарий, Основание)
	
	Ключ = СоздатьПисьмоНаСервере(МассивКлиентов, Комментарий, Основание);
	//ОткрытьФорму("Документ.ЭлектронноеПисьмоВходящее.ФормаОбъекта", Новый Структура("Ключ", Ключ),,Новый УникальныйИдентификатор,,,,РежимОткрытияОкнаФормы.БлокироватьВесьИнтерфейс);
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция СоздатьПисьмоНаСервере(МассивКлиентов, Комментарий, Основание)
	
	НовыйДокумент = Документы.ЭлектронноеПисьмоВходящее.СоздатьДокумент();
	
	НовыйДокумент.Автор = Пользователи.ТекущийПользователь();
	НовыйДокумент.Важность = Перечисления.ВариантыВажностиВзаимодействия.Обычная;
	НовыйДокумент.Дата = ТекущаяДата();
	НовыйДокумент.Ответственный = Пользователи.ТекущийПользователь();
	НовыйДокумент.Текст = Комментарий;
	НовыйДокумент.Тема = "Письмо";
	НовыйДокумент.ТипТекста = Перечисления.ТипыТекстовЭлектронныхПисем.ПростойТекст;
	НовыйДокумент.ОтправительКонтакт = МассивКлиентов[0];
	НовыйДокумент.ОтправительПредставление = Строка(МассивКлиентов[0]);
	НовыйДокумент.Комментарий = "Создан из документа " + Строка(Основание);
	
	Попытка
		НовыйДокумент.Записать();
	Исключение
		
		ВызватьИсключение;
	КонецПопытки;
	
	ПроставитьРассмотретьПослеДляПисьма(НовыйДокумент, Основание, Дата(1,1,1));
	
	Возврат НовыйДокумент.Ссылка;
	
КонецФункции

&НаСервереБезКонтекста
Процедура ПроставитьРассмотретьПослеДляПисьма(ДокВзаимодействие, ДокЗапрос, РассмотретьПосле)
	
	//РассмотретьПосле
	Запись 					= РегистрыСведений.ПредметыПапкиВзаимодействий.СоздатьМенеджерЗаписи();
	Запись.Взаимодействие 	= ДокВзаимодействие.Ссылка;
	Запись.Предмет 			= ДокЗапрос;
	Запись.Рассмотрено		= Истина;
	Запись.РассмотретьПосле = РассмотретьПосле;
	Запись.Записать();		

КонецПроцедуры
//-- Юкаев Роман 20180313 )
#КонецОбласти