
#Область ДляВызоваИзДругихПодсистем

// СтандартныеПодсистемы.УправлениеДоступом

// См. УправлениеДоступом.ЗаполнитьНаборыЗначенийДоступа.
Процедура ЗаполнитьНаборыЗначенийДоступа(Таблица) Экспорт
	
	ВзаимодействияПереопределяемый.ПриЗаполненииНаборовЗначенийДоступа(ЭтотОбъект, Таблица);
	
КонецПроцедуры

// Конец СтандартныеПодсистемы.УправлениеДоступом

#КонецОбласти

#Область ОбработчикиСобытий

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка)
	
	Если ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.ИпотечнаяЗаявка") Тогда
		Основание = ДанныеЗаполнения;
		ТестоваяЗаявка = ДанныеЗаполнения.ТестоваяЗаявка;
		Если ДанныеЗаполнения.СтатусЗаявки = Справочники.СтатусыИпотечныхЗаявок.КредитОдобрен Тогда			
			ID_ЗаявкиНаКредит = ДанныеЗаполнения.ID_Заявки;			
		КонецЕсли;
		КонтактноеЛицо = ДанныеЗаполнения.КонтактноеЛицо;
		РекомендуемыйБанк = ДанныеЗаполнения.РекомендуемыйБанк;
		ПараметрыПодключения = ДанныеЗаполнения.РекомендуемыйБанк.ПараметрыПодключения;
		Ответственный = ПараметрыСеанса.ТекущийПользователь;
		//СтатусЗаявки = Справочники.СтатусыЗаявокНаОдобрениеОбъекта.Новая;
		Черновик = Истина;
		Если ЗначениеЗаполнено(ДанныеЗаполнения.transactID) Тогда
			transactID = ДанныеЗаполнения.transactID;			
			ФИОКлиента = ДанныеЗаполнения.ФИОКлиента;
			СерияНомерПаспорта = ДанныеЗаполнения.СерияНомерПаспорта;			
			НомерТелефонаКлиента = ДанныеЗаполнения.НомерТелефонаКлиента;
			ДатаРожденияКлиента = ДанныеЗаполнения.ДатаРожденияКлиента;
			EmailКлиента = ДанныеЗаполнения.EmailКлиента;
			ОтделениеБанка = ДанныеЗаполнения.ОтделениеБанка;
		КонецЕсли;	
		РасчетИпотеки = ДанныеЗаполнения.РасчетИпотеки;
	КонецЕсли;	
	
КонецПроцедуры

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	
	Если Не ЗначениеЗаполнено(Дата) Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Не указана Дата", ЭтотОбъект.Ссылка, "Дата", "", Отказ);
	КонецЕсли;		
	
	Если Не ЗначениеЗаполнено(Ответственный) Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Не указан Ответственный", ЭтотОбъект.Ссылка, "Ответственный", "", Отказ);
	КонецЕсли;		
				
	Если Не ЗначениеЗаполнено(transactID) Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Не указан Номер тразакта", ЭтотОбъект.Ссылка, "transactID", "", Отказ);
	КонецЕсли;		
	
	Если Не ЗначениеЗаполнено(ФИОКлиента) Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Не указано ФИО", ЭтотОбъект.Ссылка, "ФИОКлиента", "", Отказ);
	КонецЕсли;		
	
КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;

	Если НЕ ЗначениеЗаполнено(Ссылка) И НЕ ЗначениеЗаполнено(Автор) Тогда
		Автор = Пользователи.АвторизованныйПользователь();
	КонецЕсли;	
	
КонецПроцедуры

Процедура ОбработкаПроведения(Отказ, Режим)
		
КонецПроцедуры

Процедура ПриКопировании(ОбъектКопирования)
	
	ПрикрепленныеФайлы.Очистить();
	КомментарииЗаявки.Очистить();
	СтатусЗаявки = 0;
	УспешнаяОтправка = Ложь;
	Черновик = Истина;
	СостояниеЗаявки = 0;
	ДатаПодачиЗаявки = 0;
	ID_Заявки = 0;
	ДатаУстановкиСтатуса = 0;
	КомментарийСтатуса = "";
	transactID = "";
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции


#КонецОбласти

