Функция ВернутьСписокДокументов() Экспорт
	
	Список = НОвый Массив;
	Список.Добавить("Паспорт");
	Список.Добавить("Второй документ: Свидетельство гос-го пенсионного страхования (СНИЛС)");
	Список.Добавить("Копия трудовой книжки, заверенная на работе");
	Список.Добавить("Анкета на ипотечный кредит");
	Список.Добавить("Справка 2ндфл (за прошлый и текущий год)");
	Список.Добавить("Справка о доходах по форме банка");

	Список.Добавить("Свидетельство о браке");
	Список.Добавить("Свидетельство о разводе");
	Список.Добавить("Свидетельство о смерти");
	Список.Добавить("Брачный договор");
	Список.Добавить("Свидетельство о рождении");
	Список.Добавить("Временная регистрация");
	Список.Добавить("Второй документ: загран паспорт");
	Список.Добавить("Второй документ: ИНН");
	Список.Добавить("Документы об отношении к воинской службе (для мужчин до 27 лет)");
	Список.Добавить("Документы на активы (недвижимость, авто, ценные бумаги…)");
	Список.Добавить("Документы об образовании");
	Список.Добавить("Документы о действующих кредитных обязательствах");
	Список.Добавить("Пенсионное удостоверение");
	
	Список.Добавить("Копия трудового договора, заверенная на работе");
	
	//++ Юкаев Роман 20180201 ( //
	Список.Добавить("Сертификат на материнский капитал");
	Список.Добавить("Справка из ПФ РФ об остатке материнского капитала на счету клиента");
	Список.Добавить("Справка по форме гос.учереждения");
	Список.Добавить("Контракт о прохождении воинской службы");
	//-- Юкаев Роман 20180201 )
	
	Возврат Список;	
КонецФункции

Функция СформироватьПФ(Объект) Экспорт
	
	Перем КонтактнаяИнформация;
	
	МассивОбластейДляПроверки = Новый Массив;
	ТД = Новый ТабличныйДокумент;

	ТД.ОриентацияСтраницы=ОриентацияСтраницы.Ландшафт;
	ТД.АвтоМасштаб = Истина;
	ТД.ПолеСлева =0;
	ТД.ПолеСправа =0;
	ТД.ПолеСверху = 0;
	ТД.ПолеСнизу =0;

	
	Макет = Документы.РасчетИпотеки.ПолучитьМакет("Печать");
	
	ОбластьЛого = Макет.ПолучитьОбласть("ОбластьЛого");
	
	
	Область1 = Макет.ПолучитьОбласть("Область1");
	Область1.Параметры.Номер = Объект.Номер;
	Область1.Параметры.Дата = Формат(Объект.Дата,"ДФ=dd.MM.yyyy");
	Область1.Параметры.Стоимость = Объект.СтоимостьКвартирыРуб;
	Область1.Параметры.ПВ = Формат(Объект.ПервоначальныйВзносПроцент, "ЧЦ=4; ЧДЦ=2; ЧРД=,; ЧН=0");
	Область1.Параметры.Кредит = Формат(Объект.СуммаКредитаРуб, "ЧЦ=15; ЧДЦ=2; ЧРД=,; ЧН=0");
	Область1.Параметры.ЖК = Объект.Корпус.Наименование;
	Область1.Параметры.Менеджер = Объект.Ответственный.Наименование;
	
	Картинка = Область1.Области.ЛОГОТИП.Картинка;
	Если Не ЗначениеЗаполнено(Объект.Корпус)Тогда //.ПринадлежитЭлементу(Справочники.ОбъектыСтроительства.ПолучитьСсылку(Новый УникальныйИдентификатор("e8886afe-b56e-11e3-9404-9c8e99fc8634"))) Тогда //Поселки
		Если Объект.ЖК = Справочники.ГруппыПроектов.ПолучитьСсылку(Новый УникальныйИдентификатор("89c90530-6b9d-11e7-abb0-78e3b506986f"))  
				Или Объект.ЖК = Справочники.Проекты.ПолучитьСсылку(Новый УникальныйИдентификатор("b14ac420-7418-11e1-b584-0012798f03ac"))Тогда
			//ИЛИ Объект.ЖК = Справочники.ОбъектыСтроительства.ПолучитьСсылку(Новый УникальныйИдентификатор("20b78859-412a-11e3-9403-9c8e99fc8634")) Тогда //АП
				Картинка = ОбластьЛого.Области.АП.Картинка;   
		ИначеЕсли Объект.ЖК = Справочники.ГруппыПроектов.ПолучитьСсылку(Новый УникальныйИдентификатор("72d163fe-6b9d-11e7-abb0-78e3b506986f")) 
				Или Объект.ЖК = Справочники.Проекты.ПолучитьСсылку(Новый УникальныйИдентификатор("b14ac41c-7418-11e1-b584-0012798f03ac"))Тогда //Цветочный
			Картинка = ОбластьЛого.Области.Цветочный.Картинка;   
		ИначеЕсли Объект.ЖК = Справочники.ГруппыПроектов.ПолучитьСсылку(Новый УникальныйИдентификатор("d2ad2507-9c71-11e7-940d-9c8e99fc8634")) 
				Или Объект.ЖК = Справочники.Проекты.ПолучитьСсылку(Новый УникальныйИдентификатор("2f545f84-5b2c-11e7-80e5-d89d67250760"))Тогда //Цветочный2
			Картинка = ОбластьЛого.Области.Цветочный2.Картинка;   
		ИначеЕсли Объект.ЖК = Справочники.ГруппыПроектов.ПолучитьСсылку(Новый УникальныйИдентификатор("7a5001b1-6b9d-11e7-abb0-78e3b506986f"))  
				Или Объект.ЖК = Справочники.Проекты.ПолучитьСсылку(Новый УникальныйИдентификатор("b14ac414-7418-11e1-b584-0012798f03ac"))Тогда //ЛисичкинЛес
			Картинка = ОбластьЛого.Области.ЛисичкинЛес.Картинка;   
		ИначеЕсли Объект.ЖК = Справочники.ГруппыПроектов.ПолучитьСсылку(Новый УникальныйИдентификатор("83a12f2e-6b9d-11e7-abb0-78e3b506986f"))  
				Или Объект.ЖК = Справочники.Проекты.ПолучитьСсылку(Новый УникальныйИдентификатор("bf3da85e-4d8d-11e2-a10b-0012798f03ac"))Тогда //Певчее
			Картинка = ОбластьЛого.Области.Певчее.Картинка;
		КонецЕсли;
	Иначе			
		Если Объект.Корпус.ПринадлежитЭлементу(Справочники.ОбъектыСтроительства.ПолучитьСсылку(Новый УникальныйИдентификатор("2c2d69f9-33ab-11e6-940b-9c8e99fc8634"))) Тогда //Люберцы 2015
			Картинка = ОбластьЛого.Области.Люберцы2015.Картинка;
		ИначеЕсли Объект.Корпус.ПринадлежитЭлементу(Справочники.ОбъектыСтроительства.ПолучитьСсылку(Новый УникальныйИдентификатор("3a44ddf8-33ab-11e6-940b-9c8e99fc8634"))) Тогда //Люберцы 2016
			Картинка = ОбластьЛого.Области.Люберцы2016.Картинка;
		ИначеЕсли Объект.Корпус.ПринадлежитЭлементу(Справочники.ОбъектыСтроительства.ПолучитьСсылку(Новый УникальныйИдентификатор("49118701-33ab-11e6-940b-9c8e99fc8634"))) Тогда //Люберцы 2017
			Картинка = ОбластьЛого.Области.Люберцы2017.Картинка;
		ИначеЕсли Объект.Корпус.ПринадлежитЭлементу(Справочники.ОбъектыСтроительства.ПолучитьСсылку(Новый УникальныйИдентификатор("cd3df7e0-d3ab-11e5-9409-9c8e99fc8634"))) Тогда //ПаркингЖК -Домостроитель
			Картинка = ОбластьЛого.Области.ПаркингЖК.Картинка;
		ИначеЕсли Объект.Корпус.ПринадлежитЭлементу(Справочники.ОбъектыСтроительства.ПолучитьСсылку(Новый УникальныйИдентификатор("47c61d69-1bcd-11e5-9407-9c8e99fc8634"))) Тогда //Павлино
			Картинка = ОбластьЛого.Области.Павлино.Картинка;
		ИначеЕсли Объект.Корпус.ПринадлежитЭлементу(Справочники.ОбъектыСтроительства.ПолучитьСсылку(Новый УникальныйИдентификатор("4da89464-248d-11e1-b584-0012798f03ac"))) Тогда //ПМ
			Картинка = ОбластьЛого.Области.ПМ.Картинка;
		ИначеЕсли Объект.Корпус.ПринадлежитЭлементу(Справочники.ОбъектыСтроительства.ПолучитьСсылку(Новый УникальныйИдентификатор("6409fd2f-450e-11e6-940b-9c8e99fc8634"))) Тогда //Поварово
			Картинка = ОбластьЛого.Области.Поварово.Картинка;
		ИначеЕсли Объект.Корпус.ПринадлежитЭлементу(Справочники.ОбъектыСтроительства.ПолучитьСсылку(Новый УникальныйИдентификатор("67c21cc6-8d8d-11df-aef5-0012798f03ac"))) Тогда //РС
			Картинка = ОбластьЛого.Области.РС.Картинка;
		ИначеЕсли Объект.Корпус.ПринадлежитЭлементу(Справочники.ОбъектыСтроительства.ПолучитьСсылку(Новый УникальныйИдентификатор("63e8a1b1-1a47-11e5-9407-9c8e99fc8634"))) Тогда //Внуково2016
			Картинка = ОбластьЛого.Области.Внуково2016.Картинка;
		ИначеЕсли Объект.Корпус.ПринадлежитЭлементу(Справочники.ОбъектыСтроительства.ПолучитьСсылку(Новый УникальныйИдентификатор("1989c2b6-48d6-11e6-940b-9c8e99fc8634"))) Тогда //Внуково2017
			Картинка = ОбластьЛого.Области.Внуково2017.Картинка;
		ИначеЕсли Объект.Корпус.ПринадлежитЭлементу(Справочники.ОбъектыСтроительства.ПолучитьСсылку(Новый УникальныйИдентификатор("000f5f34-24b9-11e1-b584-0012798f03ac"))) Тогда //ПБ
			Картинка = ОбластьЛого.Области.ПБ.Картинка;
		ИначеЕсли Объект.Корпус.ПринадлежитЭлементу(Справочники.ОбъектыСтроительства.ПолучитьСсылку(Новый УникальныйИдентификатор("35b9de82-639e-11e2-b69d-18a90550aa54"))) Тогда //ЗК
			Картинка = ОбластьЛого.Области.ЗападноеКунцево.Картинка;
		КонецЕсли
	КонецЕсли;	
	Область1.Области.ЛОГОТИП.Картинка = Картинка;
	
	НастройкиМенеджера = ПолучитьНастройкиПользователя(Объект.Ответственный);
	Область1.Параметры.МенеджерПочта = НастройкиМенеджера.Почта;
	Область1.Параметры.МенеджерТелефон = НастройкиМенеджера.Телефон;
	
	ДанныеОЗаемщике = Объект.ДанныеОЗаемщиках[0];
	ЗаполнитьЗначенияСвойств(Область1.Параметры, ДанныеОЗаемщике);
	ТД.Вывести(Область1);
	ОбластьШапка = Макет.ПолучитьОбласть("ШапкаТаблицы");
	ТД.Вывести(ОбластьШапка);
	МинСтавка = Неопределено;
	МинПлатеж = Неопределено;
	Для Каждого Стр Из Объект.Расчеты Цикл
		Если НЕ Стр.Выбор Тогда
			Продолжить;
		КонецЕсли;
		Если МинСтавка = Неопределено Тогда
			МинСтавка = Стр.ПроцентнаяСтавка;
		КонецЕсли;
		
		Если МинПлатеж = Неопределено Тогда
			МинПлатеж = Стр.СуммаПлатежа;
		КонецЕсли;
		
		Если МинСтавка > Стр.ПроцентнаяСтавка Тогда
			МинСтавка = Стр.ПроцентнаяСтавка;
		КонецЕсли;
		
		Если МинПлатеж > Стр.СуммаПлатежа Тогда
			МинПлатеж = Стр.СуммаПлатежа;
		КонецЕсли;


	КонецЦикла;
	
	
	i=1;
	//++ Юкаев Роман 20180201 (
	ТЗРасчеты = Объект.Расчеты.Выгрузить();
	ТЗРасчеты.Сортировать("Банк, СрокКредита");
	
	//Для Каждого Стр Из Объект.Расчеты Цикл
	Для Каждого Стр Из ТЗРасчеты Цикл
	//-- Юкаев Роман 20180201 )
		Если НЕ Стр.Выбор Тогда
			Продолжить;
		КонецЕсли;
		Область = Макет.ПолучитьОбласть("СтрокаТаблицы");
		
		ОбластьПС = Область.Область("R1C13:R1C15");
		ОбластьМинПлатеж = Область.Область("R1C21:R1C22");
		ЗаполнитьЗначенияСвойств(Область.Параметры, Стр);
		Если Стр.ПроцентнаяСтавка = МинСтавка Тогда
			ОбластьПС.ЦветФона = Новый Цвет(0,255,0);
		КонецЕсли;
		
		Если Стр.СуммаПлатежа = МинПлатеж Тогда
			ОбластьМинПлатеж.ЦветФона = Новый Цвет(0,255,0);
		КонецЕсли;
		Область.Параметры.НомерСтроки = i;
		Область.Параметры.СрокКредита = "" + Стр.СрокКредита + " (" + ВернутьЦелое(Стр.СрокКредита/12) + ")";
		МассивОбластейДляПроверки.Очистить();
		МассивОбластейДляПроверки.Добавить(Область);
		Если НЕ ТД.ПроверитьВывод(МассивОбластейДляПроверки) Тогда
			ТД.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		ТД.Вывести(Область);              
		i=i+1;
	КонецЦикла;
	

	Область = ВернутьОбластьПодвал(Макет, Объект, НастройкиМенеджера);
	МассивОбластейДляПроверки.Очистить();
	МассивОбластейДляПроверки.Добавить(Область);
	Колонтитул = Макет.ПолучитьОбласть("Колонтитул");
	МассивОбластейДляПроверки.Добавить(Колонтитул);

	Если НЕ ТД.ПроверитьВывод(МассивОбластейДляПроверки) Тогда
		ТД.ВывестиГоризонтальныйРазделительСтраниц();
	КонецЕсли;

	ТД.Вывести(Область);
	
	ОбластьПустойСтроки =  Макет.ПолучитьОбласть("ПустаяСтрока");
	МассивОбластейДляПроверки.Очистить();
	МассивОбластейДляПроверки.Добавить(Колонтитул);
	МассивОбластейДляПроверки.Добавить(ОбластьПустойСтроки);
	
	Пока ТД.ПроверитьВывод(МассивОбластейДляПроверки) Цикл
		ТД.Вывести(ОбластьПустойСтроки);
	КонецЦикла;
	
	ТД.Вывести(Колонтитул);
	
	Возврат ТД;

	
КонецФункции
	
Функция ВернутьОбластьПодвал(Макет, Объект, НастройкиМенеджера)
	
		Область = Макет.ПолучитьОбласть("Подвал");
		Область.Параметры.МенеджерПочта = НастройкиМенеджера.Почта;
		Отбор = Новый Структура("Выбор", Истина);
		ДокументыНаПечать = Объект.ПереченьДокументов.НайтиСтроки(Отбор);
		ВсегоДокументовНаПечать = ДокументыНаПечать.Количество();
		ДокументовВгруппе = ВернутьЦелое(ВсегоДокументовНаПечать/2);
		Группа1="";
		Группа2="";
		i=1;
		Для Каждого Стр Из ДокументыНаПечать Цикл
			Если i<= ДокументовВгруппе+1 Тогда
				Группа1 = Группа1+ ?(Группа1="", "", Символы.ПС) + i + ". " + Стр.Документ;
			Иначе
				Группа2 = Группа2+ ?(Группа2="", "", Символы.ПС) + i + ". " + Стр.Документ;
			КонецЕсли;
		i=i+1;			
		КонецЦикла;	
	    Область.Параметры.ГруппаДокументов1 = Группа1;
		Область.Параметры.ГруппаДокументов2 = Группа2;
		
		Возврат Область;
		
КонецФункции
	
Функция ВернутьЦелое(знач Число)
	
	ЧислоЦел = Цел(Число);
	Число = ?(ЧислоЦел>Число, ЧислоЦел-1, ЧислоЦел);
	
	Возврат Число;

КонецФункции

Функция ПолучитьНастройкиПользователя(Пользователь)
	
	Телефон = ПланыВидовХарактеристик.ДополнительныеРеквизитыИСведения.НайтиПоРеквизиту("Имя", "МультикалькуляторТелефон");
	Почта = ПланыВидовХарактеристик.ДополнительныеРеквизитыИСведения.НайтиПоРеквизиту("Имя", "МультикалькуляторПочта");
	
	ЗЗапрос = Новый Запрос;
	ЗЗапрос.Текст = 
		"ВЫБРАТЬ
		|	ПользователиДополнительныеРеквизиты.Значение КАК Значение,
		|	ПользователиДополнительныеРеквизиты.Свойство КАК Свойство
		|ИЗ
		|	Справочник.Пользователи.ДополнительныеРеквизиты КАК ПользователиДополнительныеРеквизиты
		|ГДЕ
		|	ПользователиДополнительныеРеквизиты.Ссылка = &Пользователь
		|	И ПользователиДополнительныеРеквизиты.Свойство В(&Свойства)";
	
	//Запрос.УстановитьПараметр("Телефон", Телефон);
	//Запрос.УстановитьПараметр("Почта", Почта);
	МассивСвойств = Новый Массив;
	МассивСвойств.Добавить(Телефон);
	МассивСвойств.Добавить(Почта);
	ЗЗапрос.УстановитьПараметр("Свойства", МассивСвойств);	
	ЗЗапрос.УстановитьПараметр("Пользователь", Пользователь);
	
	РезультатЗапроса = ЗЗапрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	СтруктураВозврата = Новый Структура("Почта, Телефон");
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		Если ВыборкаДетальныеЗаписи.Свойство = Телефон Тогда
			СтруктураВозврата.Телефон = ВыборкаДетальныеЗаписи.Значение;
		ИначеЕсли ВыборкаДетальныеЗаписи.Свойство = Почта Тогда
			СтруктураВозврата.Почта = ВыборкаДетальныеЗаписи.Значение;
		КонецЕсли;
	КонецЦикла;
	
	Возврат СтруктураВозврата;
	
КонецФункции

Процедура ОчиститьНомерКорпуса(НомерКорпуса)
	
	ЦифровойРяд = "1234567890";
	
	Если НЕ ЗначениеЗаполнено(НомерКорпуса) Тогда
		Возврат;
	КонецЕсли;
	ТолькоЦифры = Истина;
	Для i=1 По СтрДлина(НомерКорпуса) Цикл
		Если Найти(ЦифровойРяд, Сред(НомерКорпуса,i,1))= 0 Тогда
			ТолькоЦифры=Ложь;
			Прервать;
		КонецЕсли;
	КонецЦикла;
	НомерКорпуса = ?(ТолькоЦифры,Число(НомерКорпуса), НомерКорпуса);
		            
КонецПроцедуры