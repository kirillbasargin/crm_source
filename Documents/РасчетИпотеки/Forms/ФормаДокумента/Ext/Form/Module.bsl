
&НаКлиенте
Перем ЧислоСозаемщиков,КомандыСтруктура, КомандыСтруктураБазовые, КомандаЖКМакс, КомандаФазаМакс
,   КомандаКорпусМакс, КомандаПлощадьМакс, КомандаТипОбъектаМакс, КомандаПолМакс, КомандаГражданствоРФМакс, КомандаРегистрацияРФМакс
,	КомандаСемейноеПоложениеМакс, КомандаНаличиеИждивенцевМакс,  КомандаКатегорияЗанятостиМакс
,  КомандаСтажТекущийМакс, КомандаСтажОбщийМакс, КомандаФормаПодтвержденияДоходовМакс
,  КомандаНаличиеЗПКартыБанкаМакс, КомандаФинансовыеОбязательстваМакс,КнопкаДаФинансовыеОбязательства, КнопкаДаЗарплатныйКлиент
,	КомандаМатеринскийКапиталВПВМакс;


&НаКлиенте
Процедура УстановитьСрокКредита(Номер, Лет)
	
	Объект["СрокКредита"+Номер] = Лет* 12;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработатьВыбор(Команда, пОбъект, Команды)
	
	
	НомерСозаемщика = ОпределитьНомерСозаемщика(Команда);
	НомерСозаемщикаСтр = ?(НомерСозаемщика=0, "", XMLСтрока(НомерСозаемщика));
	Созаемщик = ?(НомерСозаемщика=0,"", "Созаемщик"+НомерСозаемщикаСтр);
	
	ИмяКоманды = ПреобразоватьИмя(Команда);
	ВыбранноеЗначение = Команды[Команда];
	
	Если ИмяКоманды.ИмяРеквизитаЧистоеБезНомера = "КомандаЖК" Тогда
		МассивКоманд = Новый Массив;
		СформироватьКнопкиФаза(КомандыСтруктура.КомандаФаза, МассивКоманд, ВыбранноеЗначение);
		СформироватьКнопкиКорпус(КомандыСтруктура.КомандаКорпус, МассивКоманд, Неопределено);
		КомандаФаза = КомандыСтруктура.КомандаФаза;		

		Для Каждого Стр Из МассивКоманд Цикл
			ИмяРеквизита = ПреобразоватьИмя(Стр);
			ДобавитьКнопкиСтрелки(ИмяРеквизита.ИмяРеквизитаЧистоеБезНомера, КомандыСтруктура[ИмяРеквизита.ИмяРеквизитаЧистоеБезНомера], ?(НомерСозаемщика=0,"",НомерСозаемщика));	         
			УстановитьВидимостьКнопок(,,ИмяРеквизита.ИмяРеквизитаЧистоеБезНомера, КомандыСтруктура[ИмяРеквизита.ИмяРеквизитаЧистоеБезНомера]);     	
			ОстатокСтраниц(ИмяРеквизита.ИмяРеквизитаЧистоеБезНомера, КомандыСтруктура[ИмяРеквизита.ИмяРеквизитаЧистоеБезНомера], НомерСозаемщика);
		КонецЦикла;
		
	КонецЕсли;
	
	Если ИмяКоманды.ИмяРеквизитаЧистоеБезНомера = "КомандаФаза"  Тогда
		МассивКоманд = Новый Массив;
		СформироватьКнопкиКорпус(КомандыСтруктура.КомандаКорпус, МассивКоманд, ВыбранноеЗначение);
		КомандаКорпус = КомандыСтруктура.КомандаКорпус;		

		Для Каждого Стр Из МассивКоманд Цикл
			ИмяРеквизита = ПреобразоватьИмя(Стр);
			ДобавитьКнопкиСтрелки(ИмяРеквизита.ИмяРеквизитаЧистоеБезНомера, КомандыСтруктура[ИмяРеквизита.ИмяРеквизитаЧистоеБезНомера], ?(НомерСозаемщика=0,"",НомерСозаемщика));	         
			УстановитьВидимостьКнопок(,,ИмяРеквизита.ИмяРеквизитаЧистоеБезНомера, КомандыСтруктура[ИмяРеквизита.ИмяРеквизитаЧистоеБезНомера]);     	
			ОстатокСтраниц(ИмяРеквизита.ИмяРеквизитаЧистоеБезНомера, КомандыСтруктура[ИмяРеквизита.ИмяРеквизитаЧистоеБезНомера], НомерСозаемщика);
		КонецЦикла;
		
	КонецЕсли;

	
	Если ИмяКоманды.ИмяРеквизитаЧистоеБезНомера = "КомандаФинансовыеОбязательства" Тогда
		ЕстьФинОбязательства = ВыбранноеЗначение = КнопкаДаФинансовыеОбязательства;
		Элементы["ФинансовыеОбязательстваСумма"+Созаемщик].Видимость = ЕстьФинОбязательства;
		Если НЕ ЕстьФинОбязательства Тогда
			Объект.ДанныеОЗаемщиках[НомерСозаемщика]["ФинансовыеОбязательстваСумма"] = 0;
			ЭтаФорма["ФинансовыеОбязательстваСумма"+Созаемщик] =0;
		КонецЕсли;
	КонецЕсли;
	
	Если ИмяКоманды.ИмяРеквизитаЧистоеБезНомера = "КомандаНаличиеЗПКартыБанка" Тогда
		ЕстьБанкЭмитент = ВыбранноеЗначение = КнопкаДаЗарплатныйКлиент;
		Элементы["БанкЭмитент"+Созаемщик].Видимость = ЕстьБанкЭмитент;
		Если НЕ ЕстьБанкЭмитент Тогда
			Объект.ДанныеОЗаемщиках[НомерСозаемщика]["БанкЭмитент"] = Неопределено;
			ЭтаФорма["БанкЭмитент"+Созаемщик] = Неопределено;
		КонецЕсли;
	КонецЕсли;


	ТекущаяКоманда = ОпределитьКоманду(пОбъект, Команды, НомерСозаемщика);
	
	Если ТекущаяКоманда<> Неопределено Тогда
		СнятьОтметкуСКоманды(ТекущаяКоманда);
	КонецЕсли;
		УстановитьОтметкуНаКоманду(Команда);
		
	       	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	Перем МассивКоманд;
	
	ЭтоНовый = Объект.Ссылка.Пустая();
	
	Если ЭтоНовый И Объект.ДанныеОЗаемщиках.Количество() = 0 Тогда //++ Юкаев Роман 20180122 () // при создании на основании может быть заполнена табличная часть
		ЧислоСозаемщиков=0;
	Иначе
		ЧислоСозаемщиков=Объект.ДанныеОЗаемщиках.Количество()-1;
	КонецЕсли;
	
	КомандыСтруктура = Новый Структура("КомандаЖКНачальная,КомандаПлощадьНачальная, КомандаТипОбъектаНачальная,КомандаФазаНачальная,КомандаКорпусНачальная,КомандаПолНачальная, КомандаГражданствоРФНачальная,
	|КомандаРегистрацияРФНачальная,КомандаСемейноеПоложениеНачальная,КомандаНаличиеИждивенцевНачальная,КомандаКатегорияЗанятостиНачальная,КомандаСтажТекущийНачальная,
	|КомандаСтажОбщийНачальная,КомандаФормаПодтвержденияДоходовНачальная,КомандаНаличиеЗПКартыБанкаНачальная,КомандаФинансовыеОбязательстваНачальная, КомандаМатеринскийКапиталВПВНачальная,
	
	|КомандаЖК,КомандаФаза,КомандаКорпус,КомандаПлощадь, КомандаТипОбъекта, КомандаПол,КомандаГражданствоРФ,КомандаРегистрацияРФ,КомандаСемейноеПоложение,
	|КомандаНаличиеИждивенцев,КомандаКатегорияЗанятости,КомандаСтажТекущий,КомандаСтажОбщий,КомандаФормаПодтвержденияДоходов,КомандаНаличиеЗПКартыБанка,
	|КомандаФинансовыеОбязательства, КомандаМатеринскийКапиталВПВ",1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1);
	
	КомандыСтруктураБазовые = Новый Структура("КомандаЖК,КомандаПлощадь,КомандаТипОбъекта,КомандаФаза,КомандаКорпус,КомандаПол,КомандаГражданствоРФ,КомандаРегистрацияРФ,
	|КомандаНаличиеИждивенцев,КомандаКатегорияЗанятости,КомандаСтажТекущий,КомандаСтажОбщий,КомандаФормаПодтвержденияДоходов,КомандаНаличиеЗПКартыБанка,
	|КомандаФинансовыеОбязательства, КомандаСемейноеПоложение,	КомандаМатеринскийКапиталВПВ");

		
	КомандаЖКМакс = 18;
	КомандаПлощадьМакс = 10;
	КомандаТипОбъектаМакс = 7;
	КомандаФазаМакс = 10;
	КомандаКорпусМакс = 15;
	КомандаПолМакс = 3;
	КомандаГражданствоРФМакс = 7;
	
	КомандаМатеринскийКапиталВПВМакс = 7;
	//КомандаСтрахованиеЖизниМакс = 7;
	
	КомандаРегистрацияРФМакс = 7;
	КомандаСемейноеПоложениеМакс = 7;
	КомандаНаличиеИждивенцевМакс = 7;
	КомандаКатегорияЗанятостиМакс = 7;
	КомандаСтажТекущийМакс = 10;
	КомандаСтажОбщийМакс = 7;
	КомандаФормаПодтвержденияДоходовМакс = 7;
	КомандаНаличиеЗПКартыБанкаМакс = 7;
	КомандаФинансовыеОбязательстваМакс = 7;
	КнопкаДаФинансовыеОбязательства = ВернутьКнопкуДаФинансовыеОбязательства();
	КнопкаДаЗарплатныйКлиент = ВернутьКнопкуДаЗарплатныйКлиент();
	КлючевыеКнопки = Новый Структура("КнопкаДаФинансовыеОбязательства, КнопкаДаЗарплатныйКлиент", КнопкаДаФинансовыеОбязательства, КнопкаДаЗарплатныйКлиент);
	
	

	Если Объект.Ссылка.Пустая() И Объект.ДанныеОЗаемщиках.Количество()=0 Тогда
		СтрокаДанных = Объект.ДанныеОЗаемщиках.Добавить();
	КонецЕсли;
		
	Для Каждого Эл Из КомандыСтруктура Цикл
		Для i = 1 По ЧислоСозаемщиков Цикл
			КомандыСтруктура.Вставить(Эл.Ключ+ i,1);
		КонецЦикла;
		Выполнить(Эл.Ключ + "Начальная = 1");
	КонецЦикла;
	
	ЗаполнитьФормуНаСервере(ЧислоСозаемщиков,КомандыСтруктура, КомандыСтруктураБазовые, МассивКоманд, КлючевыеКнопки);
	ЗаполнитьФормуНаКлиенте(ЧислоСозаемщиков, КомандыСтруктура, МассивКоманд);
	
	КомандыШапки = Новый Массив;
	КомандыШапки.Добавить("КомандаЖК");
	КомандыШапки.Добавить("КомандаПлощадь");
	КомандыШапки.Добавить("КомандаТипОбъекта");

	ЗаполнитьФормуНаКлиенте(0, КомандыСтруктура, КомандыШапки);
	
	ВизуализироватьДанные();
	ОпределитьДоступностьЭлементовБезРасчета();
	
	СнятьОтметкуСКоманды(?(НЕ Объект.УчитыватьДанныеСозаемщиков, "УчитыватьДанныеОЗаемщикахДа", "УчитыватьДанныеОЗаемщикахНет"));
	УстановитьОтметкуНаКоманду(?(Объект.УчитыватьДанныеСозаемщиков, "УчитыватьДанныеОЗаемщикахДа", "УчитыватьДанныеОЗаемщикахНет"));

	//++ Юкаев Роман 20180125 (
	Если ЗначениеЗаполнено(ФИО) Тогда
		Элементы.РодительКомандаДатаРождения.ТолькоПросмотр = Истина;
	Иначе
		Элементы.РодительКомандаДатаРождения.ТолькоПросмотр = Ложь;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Объект.Запрос) Тогда
		Если ЗначениеЗаполнено(Объект.ЖК) Тогда
			Элементы.РодительКомандаЖК.ТолькоПросмотр = Истина;
		КонецЕсли;
	КонецЕсли;
	//-- Юкаев Роман 20180125 )
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьФормуНаКлиенте(ЧислоСозаемщиков, КомандыСтруктура, МассивКоманд)
	
	Для i=0 По ЧислоСозаемщиков Цикл
		Созаемщик = ?(i=0, "", "Созаемщик"+ XMLСтрока(i));	
		ПорядковыйНомер = СтрЗаменить(Созаемщик, "Созаемщик","");
		Для Каждого Стр Из МассивКоманд Цикл
			ИмяРеквизита = ПреобразоватьИмя(Стр);
			УстановитьВидимостьКнопок(,,ИмяРеквизита.ИмяРеквизитаЧистоеБезНомера, КомандыСтруктура[ИмяРеквизита.ИмяРеквизитаЧистоеБезНомера]);     	
			ОстатокСтраниц(ИмяРеквизита.ИмяРеквизитаЧистоеБезНомера, КомандыСтруктура[ИмяРеквизита.ИмяРеквизитаЧистоеБезНомера], ПорядковыйНомер);	                 
		КонецЦикла;
		Элементы["ГруппаСозаемщик"+i].Видимость = Истина;    		
	КонецЦикла;   
	
КонецПроцедуры


&НаСервере
Процедура ЗаполнитьФормуНаСервере(ЧислоСозаемщиков, КомандыСтруктура,КомандыСтруктураБазовые, МассивКоманд,КлючевыеКнопки)
	
	Для i=0 По ЧислоСозаемщиков Цикл
		Созаемщик = ?(i=0, "", "Созаемщик"+ XMLСтрока(i));	
		ПорядковыйНомер = СтрЗаменить(Созаемщик, "Созаемщик","");
		Если i>0 Тогда
			ДобавитьСозаемщикаНаСервере(i,КомандыСтруктураБазовые,КлючевыеКнопки);
		КонецЕсли;
		СформироватьКнопкиНаСервере(КомандыСтруктура, МассивКоманд,Созаемщик);
		Для Каждого Эл Из КомандыСтруктура Цикл
			Выполнить(Эл.Ключ + " = Эл.Значение");	
		КонецЦикла;
	КонецЦикла;
			
КонецПроцедуры


&НаСервереБезКонтекста
Функция ВернутьКнопкуДаФинансовыеОбязательства()
	Возврат ПланыВидовХарактеристик.ПараметрыПримененияСтавок.ФинансовыеОбязательства.ЗначениеДа;
КонецФункции

&НаСервереБезКонтекста
Функция ВернутьКнопкуДаЗарплатныйКлиент()
	Возврат ПланыВидовХарактеристик.ПараметрыПримененияСтавок.ЗарплатныйКлиент.ЗначениеДа;
КонецФункции


&НаСервере
Процедура СформироватьКнопкиНаСервере(КомандыСтруктура, МассивКоманд, Созаемщик)
	МассивКоманд = Новый Массив;
	НомерСозаемщика = СтрЗаменить(Созаемщик, "Созаемщик","");
	
	Если Созаемщик = "" Тогда
	СформироватьКнопкиЖК(КомандыСтруктура.КомандаЖК, МассивКоманд);
	СформироватьКнопкиПлощадь(КомандыСтруктура.КомандаПлощадь, МассивКоманд);
	СформироватьКнопкиТипОбъекта(КомандыСтруктура.КомандаТипОбъекта, МассивКоманд);
	КонецЕсли;
	
	СформироватьКнопкиПол(КомандыСтруктура["КомандаПол"+НомерСозаемщика], МассивКоманд,Созаемщик);
	СформироватьКнопкиГражданствоРФ(КомандыСтруктура["КомандаГражданствоРФ"+НомерСозаемщика], МассивКоманд,Созаемщик);
	
	СформироватьКнопкиМатеринскийКапиталВПВ(КомандыСтруктура["КомандаМатеринскийКапиталВПВ"+НомерСозаемщика], МассивКоманд,Созаемщик);
	//СформироватьКнопкиСтрахованиеЖизни(КомандыСтруктура["КомандаСтрахованиеЖизни"+НомерСозаемщика], МассивКоманд,Созаемщик);

	СформироватьКнопкиРегистрацияРФ(КомандыСтруктура["КомандаРегистрацияРФ"+НомерСозаемщика], МассивКоманд,Созаемщик);
	СформироватьКнопкиСемейноеПоложение(КомандыСтруктура["КомандаСемейноеПоложение"+НомерСозаемщика], МассивКоманд,Созаемщик);
	СформироватьКнопкиНаличиеИждивенцев(КомандыСтруктура["КомандаНаличиеИждивенцев"+НомерСозаемщика], МассивКоманд,Созаемщик);
	СформироватьКнопкиКатегорияЗанятости(КомандыСтруктура["КомандаКатегорияЗанятости"+НомерСозаемщика], МассивКоманд,Созаемщик);
	СформироватьКнопкиСтажТекущий(КомандыСтруктура["КомандаСтажТекущий"+НомерСозаемщика], МассивКоманд,Созаемщик);
	СформироватьКнопкиСтажОбщий(КомандыСтруктура["КомандаСтажОбщий"+НомерСозаемщика], МассивКоманд,Созаемщик);
	СформироватьКнопкиФормаПодтвержденияДоходов(КомандыСтруктура["КомандаФормаПодтвержденияДоходов"+НомерСозаемщика], МассивКоманд,Созаемщик);
	СформироватьКнопкиНаличиеЗПКартыБанка(КомандыСтруктура["КомандаНаличиеЗПКартыБанка"+НомерСозаемщика], МассивКоманд,Созаемщик);
	СформироватьКнопкиФинансовыеОбязательства(КомандыСтруктура["КомандаФинансовыеОбязательства"+НомерСозаемщика], МассивКоманд,Созаемщик);

	                      
	Для Каждого Стр Из МассивКоманд Цикл
	ИмяРевизита = ПреобразоватьИмя(Стр);
	ДобавитьКнопкиСтрелки(ИмяРевизита.ИмяРеквизитаЧистоеБезНомера, КомандыСтруктура[ИмяРевизита.ИмяРеквизитаЧистоеБезНомера], Созаемщик);	         
	КонецЦикла;


КонецПроцедуры

&НаСервереБезКонтекста
Функция ПреобразоватьИмя(знач ИмяРеквизита, Префикс=Истина)
	
	СтруктураВозврата = Новый Структура("ИмяРеквизита, ИмяРеквизитаЧистое,ИмяРеквизитаЧистоеБезНомера");
	
	Если НЕ Префикс Тогда
	ИмяРеквизита = СтрЗаменить(УдалитьПорядковыйНомер(ИмяРеквизита),"Команда","");	
	КонецЕсли;
	ИмяРеквизитаЧистое = СтрЗаменить(ИмяРеквизита,"Созаемщик","");
	ИмяРеквизитаЧистоеБезНомера = УдалитьПорядковыйНомер(ИмяРеквизитаЧистое);

	
	СтруктураВозврата.ИмяРеквизита = ИмяРеквизита;
	СтруктураВозврата.ИмяРеквизитаЧистое = СтрЗаменить(ИмяРеквизита,"Созаемщик","");
	СтруктураВозврата.ИмяРеквизитаЧистоеБезНомера = УдалитьПорядковыйНомер(ИмяРеквизитаЧистое);

	Возврат СтруктураВозврата;
	
КонецФункции

&НаСервере
Процедура СформироватьКнопкиЖК(Кнопки, МассивКоманд)
	ПрефиксКоманды = "КомандаЖК";
	
	МассивКоманд.Добавить(ПрефиксКоманды);
	Кнопки = Новый Соответствие;

	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	Квартирограмма.ОбъектСтроительства.Проект КАК Ссылка
		|ПОМЕСТИТЬ п1
		|ИЗ
		|	РегистрСведений.Квартирограмма КАК Квартирограмма
		|ГДЕ
		|	Квартирограмма.СтатусПула = ЗНАЧЕНИЕ(Перечисление.СтатусыПулов.Открытие)
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	&Проект
		|ИЗ
		|	РегистрСведений.МультикалькуляторГруппыПроектов КАК МультикалькуляторГруппыПроектов
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ЕСТЬNULL(МультикалькуляторГруппыПроектов.ГруппаПроектов.Ссылка, п1.Ссылка) КАК Ссылка,
		|	ЕСТЬNULL(МультикалькуляторГруппыПроектов.ГруппаПроектов.Наименование, п1.Ссылка.Наименование) КАК Наименование,
		|	ЕСТЬNULL(МультикалькуляторГруппыПроектов.Активен, ИСТИНА) КАК Активен
		|ПОМЕСТИТЬ ВТ_Итог
		|ИЗ
		|	п1 КАК п1
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.МультикалькуляторГруппыПроектов КАК МультикалькуляторГруппыПроектов
		|		ПО п1.Ссылка = МультикалькуляторГруппыПроектов.Проект
		|ГДЕ
		|	п1.Ссылка <> ЗНАЧЕНИЕ(Справочник.Проекты.ПустаяСсылка)
		|	И п1.Ссылка <> ЗНАЧЕНИЕ(Справочник.ГруппыПроектов.ПустаяСсылка)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_Итог.Ссылка КАК Ссылка,
		|	ВТ_Итог.Наименование КАК Наименование,
		|	ВТ_Итог.Активен КАК Активен
		|ИЗ
		|	ВТ_Итог КАК ВТ_Итог
		|ГДЕ
		|	ВТ_Итог.Активен";
	
	Запрос.УстановитьПараметр("Статус", Перечисления.СтатусыПулов.Открытие);
	Запрос.УстановитьПараметр("Проект", ?(Объект.ЖК=Неопределено, Справочники.ГруппыПроектов.ПустаяСсылка(), Объект.ЖК));
	МассивТипов = Новый Массив;
	МассивТипов.Добавить(Перечисления.НазначениеОбъектовСтроительства.ЖилаяНедвижимость);
	МассивТипов.Добавить(Перечисления.НазначениеОбъектовСтроительства.ЗемельныйУчасток);
	Запрос.УстановитьПараметр("Тип", МассивТипов);

	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Ряд = 1;
	i = 1;
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		Ряд = ?(Ряд>5,1,Ряд);
		Наименование =  ВыборкаДетальныеЗаписи.Наименование;
		ДобавитьКнопку(ВыборкаДетальныеЗаписи.Ссылка,Наименование, ВыборкаДетальныеЗаписи.Наименование, i, Кнопки, ПрефиксКоманды, ,Ряд,5, Истина);
		Ряд=Ряд+1;
		i= i+1;
	КонецЦикла;
	
	
КонецПроцедуры

&НаСервере
Процедура УдалитьЭлемент(Имя, ЭтоКоманда = Ложь)
	
	Элемент = Элементы.Найти(Имя);
	Команда = Команды.Найти(Имя);
	Если Элемент <> Неопределено Тогда	
		Элементы.Удалить(Элемент);
		Если ЭтоКоманда  И Команда <> Неопределено Тогда
		Команды.Удалить(Команда);
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура СформироватьКнопкиФаза(Кнопки, МассивКоманд, Проект)
	
	Если Кнопки =  Неопределено Тогда
		Кнопки = Новый Соответствие;
	Иначе
		МассивУдаленных = Новый Массив;
		Для Каждого Стр Из Кнопки Цикл
			УдалитьЭлемент(Стр.Ключ, Истина);
			МассивУдаленных.Добавить(Стр.Ключ);
		КонецЦикла;
		Для Каждого Стр Из МассивУдаленных Цикл
			Кнопки.Удалить(Стр);
		КонецЦикла;
	КонецЕсли;
	
	
	МассивКоманд.Добавить("КомандаФаза");	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	Квартирограмма.Корпус.Наименование КАК НомерКорпуса,
		|	Квартирограмма.ОбъектСтроительства.Фаза КАК Фаза,
		|	Квартирограмма.ОбъектСтроительства.Фаза.Представление КАК Представление,
		|	Квартирограмма.ОбъектСтроительства КАК ОбъектСтроительства,
		|	Квартирограмма.ОбъектСтроительства.Проект КАК ОбъектСтроительстваПроект
		|ПОМЕСТИТЬ ВТ_ОС
		|ИЗ
		|	РегистрСведений.Квартирограмма КАК Квартирограмма
		|ГДЕ
		|	Квартирограмма.СтатусПула = ЗНАЧЕНИЕ(Перечисление.СтатусыПулов.Открытие)
		|	И Квартирограмма.ОбъектСтроительства.Фаза ССЫЛКА Справочник.Фазы
		|	И Квартирограмма.ОбъектСтроительства.НазначениеОбъектаСтроительства В(&Назначение)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_ОС.НомерКорпуса КАК НомерКорпуса,
		|	ВТ_ОС.Фаза КАК Фаза,
		|	ВТ_ОС.Представление КАК Представление,
		|	ВТ_ОС.ОбъектСтроительства КАК ОбъектСтроительства
		|ИЗ
		|	ВТ_ОС КАК ВТ_ОС
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.МультикалькуляторГруппыПроектов КАК МультикалькуляторГруппыПроектов
		|		ПО ВТ_ОС.ОбъектСтроительстваПроект = МультикалькуляторГруппыПроектов.Проект
		|ГДЕ
		|	(ВТ_ОС.ОбъектСтроительстваПроект = &Проект
		|			ИЛИ МультикалькуляторГруппыПроектов.ГруппаПроектов = &Проект)";	
	Запрос.УстановитьПараметр("Дата", ТекущаяДата());
	Запрос.УстановитьПараметр("Проект", Проект);
	//Запрос.УстановитьПараметр("Статус", Перечисления.СтатусыПулов.Открытие);
	Назначение = Новый Массив;
	Назначение.Добавить(Перечисления.НазначениеОбъектовСтроительства.ЖилаяНедвижимость);
	Назначение.Добавить(Перечисления.НазначениеОбъектовСтроительства.ЗемельныйУчасток);
	Запрос.УстановитьПараметр("Назначение", Назначение);

	
	РезультатЗапроса = Запрос.Выполнить();
	КорпусаИФазы.Загрузить(РезультатЗапроса.Выгрузить());
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	МассивДобавленных = Новый Массив;
	
	i=1;
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		Если МассивДобавленных.Найти(ВыборкаДетальныеЗаписи.Фаза) <> Неопределено Тогда
			Продолжить;
		КонецЕсли;
		Ряд = Цел((i-1)/2)+1;
		ДобавитьКнопку(ВыборкаДетальныеЗаписи.Фаза, ВыборкаДетальныеЗаписи.Представление,ВыборкаДетальныеЗаписи.Представление , i, Кнопки, "КомандаФаза",,Ряд);
		i=i+1;
		МассивДобавленных.Добавить(ВыборкаДетальныеЗаписи.Фаза);
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура СформироватьКнопкиКорпус(Кнопки, МассивКоманд, Фаза)
	
	Если Кнопки =  Неопределено Тогда
		Кнопки = Новый Соответствие;
	Иначе
		МассивУдаленных = Новый Массив;
		Для Каждого Стр Из Кнопки Цикл
			УдалитьЭлемент(Стр.Ключ, Истина);
			МассивУдаленных.Добавить(Стр.Ключ);
		КонецЦикла;
		Для Каждого Стр Из МассивУдаленных Цикл
			Кнопки.Удалить(Стр);
		КонецЦикла;
	КонецЕсли;

	МассивКоманд.Добавить("КомандаКорпус");
	
	Отбор = Новый Структура("Фаза", Фаза);
	Корпуса = КорпусаИФазы.НайтиСтроки(Отбор);
	
	ТЧКорпусов = Новый ТаблицаЗначений;
	ТЧКорпусов.Колонки.Добавить("Корпус");
	ТЧКорпусов.Колонки.Добавить("ОбъектСтроительства");
	
	ЦифровойРяд = "1234567890";
	Для Каждого Корпус Из Корпуса Цикл
		НомерКорпуса = Корпус.НомерКорпуса;
		ОбъектСтроительства = Корпус.ОбъектСтроительства;
		Если НЕ ЗначениеЗаполнено(НомерКорпуса) Тогда
			Продолжить;
		КонецЕсли;
		ТолькоЦифры = Истина;
		Для i=1 По СтрДлина(НомерКорпуса) Цикл
			Если Найти(ЦифровойРяд, Сред(НомерКорпуса,i,1))= 0 Тогда
				ТолькоЦифры=Ложь;
				Прервать;
			КонецЕсли;
		КонецЦикла;
		КорпусЗначение = ?(ТолькоЦифры,Число(НомерКорпуса), НомерКорпуса);
		НовЗнач = ТЧКорпусов.Добавить();
		НовЗнач.Корпус = КорпусЗначение;			
		НовЗнач.ОбъектСтроительства = ОбъектСтроительства;
	КонецЦикла;

	
	ТЧКорпусов.Сортировать("Корпус Возр");

	Кнопки = Новый Соответствие;

	i=1;
	Для Каждого СТр Из ТЧКорпусов Цикл
		НомерКорпуса = XMLСтрока(СТр.Корпус);
		ДобавитьКнопку(Стр.ОбъектСтроительства, НомерКорпуса, "Корпус " + НомерКорпуса, i, Кнопки, "КомандаКорпус",,,4);
		i=i+1;
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура СформироватьКнопкиПол(Кнопки, МассивКоманд,Созаемщик)

	МассивКоманд.Добавить("КомандаПол"+Созаемщик);

	Кнопки = Новый Соответствие;

	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ПараметрыПримененияСтавок_Значения.Ссылка,
		|	ПараметрыПримененияСтавок_Значения.Представление
		|ИЗ
		|	Справочник.ПараметрыПримененияСтавок_Значения КАК ПараметрыПримененияСтавок_Значения
		|ГДЕ
		|	ПараметрыПримененияСтавок_Значения.Владелец = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ПараметрыПримененияСтавок.Пол)
		|
		|УПОРЯДОЧИТЬ ПО
		|	ПараметрыПримененияСтавок_Значения.Сортировка,
		|	ПараметрыПримененияСтавок_Значения.Наименование";
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	i = 1;
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		Наименование = ВыборкаДетальныеЗаписи.Представление;
		ДобавитьКнопку(ВыборкаДетальныеЗаписи.Ссылка,Наименование, Наименование, i, Кнопки, "КомандаПол",Созаемщик);
		i=i+1;
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура СформироватьКнопкиПлощадь(Кнопки, МассивКоманд)

	МассивКоманд.Добавить("КомандаПлощадь");

	Кнопки = Новый Соответствие;

	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ПараметрыПримененияСтавок_Значения.Ссылка,
		|	ПараметрыПримененияСтавок_Значения.Представление
		|ИЗ
		|	Справочник.ПараметрыПримененияСтавок_Значения КАК ПараметрыПримененияСтавок_Значения
		|ГДЕ
		|	ПараметрыПримененияСтавок_Значения.Владелец = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ПараметрыПримененияСтавок.Площадь)
		|
		|УПОРЯДОЧИТЬ ПО
		|	ПараметрыПримененияСтавок_Значения.Сортировка,
		|	ПараметрыПримененияСтавок_Значения.Наименование";
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	i = 1;
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		Наименование = ВыборкаДетальныеЗаписи.Представление;
		ДобавитьКнопку(ВыборкаДетальныеЗаписи.Ссылка,Наименование, Наименование, i, Кнопки, "КомандаПлощадь");
		i=i+1;
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура СформироватьКнопкиТипОбъекта(Кнопки, МассивКоманд)

	МассивКоманд.Добавить("КомандаТипОбъекта");

	Кнопки = Новый Соответствие;

	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ПараметрыПримененияСтавок_Значения.Ссылка,
		|	ПараметрыПримененияСтавок_Значения.Представление
		|ИЗ
		|	Справочник.ПараметрыПримененияСтавок_Значения КАК ПараметрыПримененияСтавок_Значения
		|ГДЕ
		|	ПараметрыПримененияСтавок_Значения.Владелец = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ПараметрыПримененияСтавок.ТипОбъекта)
		|
		|УПОРЯДОЧИТЬ ПО
		|	ПараметрыПримененияСтавок_Значения.Сортировка,
		|	ПараметрыПримененияСтавок_Значения.Наименование";
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	i = 1;
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		Наименование = ВыборкаДетальныеЗаписи.Представление;
		ДобавитьКнопку(ВыборкаДетальныеЗаписи.Ссылка,Наименование, Наименование, i, Кнопки, "КомандаТипОбъекта");
		i=i+1;
	КонецЦикла;
	
КонецПроцедуры



&НаСервере
Процедура СформироватьКнопкиГражданствоРФ(Кнопки, МассивКоманд,Созаемщик)
	
	МассивКоманд.Добавить("КомандаГражданствоРФ"+Созаемщик);

	Кнопки = Новый Соответствие;


	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ПараметрыПримененияСтавок_Значения.Ссылка,
		|	ПараметрыПримененияСтавок_Значения.Представление
		|ИЗ
		|	Справочник.ПараметрыПримененияСтавок_Значения КАК ПараметрыПримененияСтавок_Значения
		|ГДЕ
		|	ПараметрыПримененияСтавок_Значения.Владелец = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ПараметрыПримененияСтавок.ГражданствоРФ)
		|
		|УПОРЯДОЧИТЬ ПО
		|	ПараметрыПримененияСтавок_Значения.Сортировка,
		|	ПараметрыПримененияСтавок_Значения.Наименование";

	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	i = 1;
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		Наименование = ВыборкаДетальныеЗаписи.Представление;
		ДобавитьКнопку(ВыборкаДетальныеЗаписи.Ссылка,Наименование, Наименование, i, Кнопки, "КомандаГражданствоРФ",Созаемщик);
		i=i+1;
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура СформироватьКнопкиМатеринскийКапиталВПВ(Кнопки, МассивКоманд,Созаемщик)
	
	МассивКоманд.Добавить("КомандаМатеринскийКапиталВПВ"+Созаемщик);

	Кнопки = Новый Соответствие;


	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ПараметрыПримененияСтавок_Значения.Ссылка,
		|	ПараметрыПримененияСтавок_Значения.Представление
		|ИЗ
		|	Справочник.ПараметрыПримененияСтавок_Значения КАК ПараметрыПримененияСтавок_Значения
		|ГДЕ
		|	ПараметрыПримененияСтавок_Значения.Владелец = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ПараметрыПримененияСтавок.МатеринскийКапиталВПВ)
		|
		|УПОРЯДОЧИТЬ ПО
		|	ПараметрыПримененияСтавок_Значения.Сортировка,
		|	ПараметрыПримененияСтавок_Значения.Наименование";

	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	i = 1;
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		Наименование = ВыборкаДетальныеЗаписи.Представление;
		ДобавитьКнопку(ВыборкаДетальныеЗаписи.Ссылка,Наименование, Наименование, i, Кнопки, "КомандаМатеринскийКапиталВПВ",Созаемщик);
		i=i+1;
	КонецЦикла;
	
КонецПроцедуры

//&НаСервере
//Процедура СформироватьКнопкиСтрахованиеЖизни(Кнопки, МассивКоманд,Созаемщик)
//	
//	МассивКоманд.Добавить("КомандаСтрахованиеЖизни"+Созаемщик);

//	Кнопки = Новый Соответствие;


//	Запрос = Новый Запрос;
//	Запрос.Текст = 
//		"ВЫБРАТЬ
//		|	ПараметрыПримененияСтавок_Значения.Ссылка,
//		|	ПараметрыПримененияСтавок_Значения.Представление
//		|ИЗ
//		|	Справочник.ПараметрыПримененияСтавок_Значения КАК ПараметрыПримененияСтавок_Значения
//		|ГДЕ
//		|	ПараметрыПримененияСтавок_Значения.Владелец = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ПараметрыПримененияСтавок.СтрахованиеЖизни)
//		|
//		|УПОРЯДОЧИТЬ ПО
//		|	ПараметрыПримененияСтавок_Значения.Сортировка,
//		|	ПараметрыПримененияСтавок_Значения.Наименование";

//	
//	РезультатЗапроса = Запрос.Выполнить();
//	
//	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
//	
//	i = 1;
//	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
//		Наименование = ВыборкаДетальныеЗаписи.Представление;
//		ДобавитьКнопку(ВыборкаДетальныеЗаписи.Ссылка,Наименование, Наименование, i, Кнопки, "КомандаСтрахованиеЖизни",Созаемщик);
//		i=i+1;
//	КонецЦикла;
//	
//КонецПроцедуры


&НаСервере
Процедура СформироватьКнопкиРегистрацияРФ(Кнопки, МассивКоманд,Созаемщик)
	
	МассивКоманд.Добавить("КомандаРегистрацияРФ"+Созаемщик);

	Кнопки = Новый Соответствие;


	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ПараметрыПримененияСтавок_Значения.Ссылка,
		|	ПараметрыПримененияСтавок_Значения.Представление
		|ИЗ
		|	Справочник.ПараметрыПримененияСтавок_Значения КАК ПараметрыПримененияСтавок_Значения
		|ГДЕ
		|	ПараметрыПримененияСтавок_Значения.Владелец = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ПараметрыПримененияСтавок.РегистрацияРФ)
		|
		|УПОРЯДОЧИТЬ ПО
		|	ПараметрыПримененияСтавок_Значения.Сортировка,
		|	ПараметрыПримененияСтавок_Значения.Наименование";

	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	i = 1;
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		Наименование = ВыборкаДетальныеЗаписи.Представление;
		ДобавитьКнопку(ВыборкаДетальныеЗаписи.Ссылка,Наименование, Наименование, i, Кнопки, "КомандаРегистрацияРФ",Созаемщик);
		i=i+1;
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура СформироватьКнопкиСемейноеПоложение(Кнопки, МассивКоманд,Созаемщик)
	
	МассивКоманд.Добавить("КомандаСемейноеПоложение"+ Созаемщик);

	Кнопки = Новый Соответствие;

	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ПараметрыПримененияСтавок_Значения.Ссылка,
		|	ПараметрыПримененияСтавок_Значения.Представление
		|ИЗ
		|	Справочник.ПараметрыПримененияСтавок_Значения КАК ПараметрыПримененияСтавок_Значения
		|ГДЕ
		|	ПараметрыПримененияСтавок_Значения.Владелец = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ПараметрыПримененияСтавок.СемейноеПоложение)
		|
		|УПОРЯДОЧИТЬ ПО
		|	ПараметрыПримененияСтавок_Значения.Сортировка,
		|	ПараметрыПримененияСтавок_Значения.Наименование";

	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	i = 1;
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		Наименование = ВыборкаДетальныеЗаписи.Представление;
		ДобавитьКнопку(ВыборкаДетальныеЗаписи.Ссылка,Наименование, Наименование, i, Кнопки, "КомандаСемейноеПоложение",Созаемщик);
		i=i+1;
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура СформироватьКнопкиНаличиеИждивенцев(Кнопки, МассивКоманд,Созаемщик)
	
	МассивКоманд.Добавить("КомандаНаличиеИждивенцев"+Созаемщик);

	Кнопки = Новый Соответствие;

	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ПараметрыПримененияСтавок_Значения.Ссылка,
		|	ПараметрыПримененияСтавок_Значения.Представление
		|ИЗ
		|	Справочник.ПараметрыПримененияСтавок_Значения КАК ПараметрыПримененияСтавок_Значения
		|ГДЕ
		|	ПараметрыПримененияСтавок_Значения.Владелец = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ПараметрыПримененияСтавок.НаличиеИждивенцев)
		|
		|УПОРЯДОЧИТЬ ПО
		|	ПараметрыПримененияСтавок_Значения.Сортировка,
		|	ПараметрыПримененияСтавок_Значения.Наименование";
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	i = 1;
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		Наименование = ВыборкаДетальныеЗаписи.Представление;
		ДобавитьКнопку(ВыборкаДетальныеЗаписи.Ссылка,Наименование, Наименование, i, Кнопки, "КомандаНаличиеИждивенцев",Созаемщик);
		i=i+1;
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура СформироватьКнопкиКатегорияЗанятости(Кнопки, МассивКоманд,Созаемщик)
	
	МассивКоманд.Добавить("КомандаКатегорияЗанятости"+Созаемщик);

	Кнопки = Новый Соответствие;

	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ПараметрыПримененияСтавок_Значения.Ссылка,
		|	ПараметрыПримененияСтавок_Значения.Представление
		|ИЗ
		|	Справочник.ПараметрыПримененияСтавок_Значения КАК ПараметрыПримененияСтавок_Значения
		|ГДЕ
		|	ПараметрыПримененияСтавок_Значения.Владелец = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ПараметрыПримененияСтавок.КатегорияЗанятости)
		|
		|УПОРЯДОЧИТЬ ПО
		|	ПараметрыПримененияСтавок_Значения.Сортировка,
		|	ПараметрыПримененияСтавок_Значения.Наименование";
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	i = 1;
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		Наименование = ВыборкаДетальныеЗаписи.Представление;
		ДобавитьКнопку(ВыборкаДетальныеЗаписи.Ссылка,Наименование, Наименование, i, Кнопки, "КомандаКатегорияЗанятости",Созаемщик);
		i=i+1;
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура СформироватьКнопкиСтажТекущий(Кнопки, МассивКоманд,Созаемщик)
	
	МассивКоманд.Добавить("КомандаСтажТекущий"+Созаемщик);

	Кнопки = Новый Соответствие;

	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ПараметрыПримененияСтавок_Значения.Ссылка,
		|	ПараметрыПримененияСтавок_Значения.Представление
		|ИЗ
		|	Справочник.ПараметрыПримененияСтавок_Значения КАК ПараметрыПримененияСтавок_Значения
		|ГДЕ
		|	ПараметрыПримененияСтавок_Значения.Владелец = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ПараметрыПримененияСтавок.СтажТекущий)
		|
		|УПОРЯДОЧИТЬ ПО
		|	ПараметрыПримененияСтавок_Значения.Сортировка,
		|	ПараметрыПримененияСтавок_Значения.Наименование";
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	i = 1;
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		Наименование = ВыборкаДетальныеЗаписи.Представление;
		ДобавитьКнопку(ВыборкаДетальныеЗаписи.Ссылка,Наименование, Наименование, i, Кнопки, "КомандаСтажТекущий",Созаемщик);
		i=i+1;
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура СформироватьКнопкиСтажОбщий(Кнопки, МассивКоманд,Созаемщик)
	
	МассивКоманд.Добавить("КомандаСтажОбщий"+Созаемщик);

	Кнопки = Новый Соответствие;

	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ПараметрыПримененияСтавок_Значения.Ссылка,
		|	ПараметрыПримененияСтавок_Значения.Представление
		|ИЗ
		|	Справочник.ПараметрыПримененияСтавок_Значения КАК ПараметрыПримененияСтавок_Значения
		|ГДЕ
		|	ПараметрыПримененияСтавок_Значения.Владелец = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ПараметрыПримененияСтавок.СтажОбщий)
		|
		|УПОРЯДОЧИТЬ ПО
		|	ПараметрыПримененияСтавок_Значения.Сортировка,
		|	ПараметрыПримененияСтавок_Значения.Наименование";
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	i = 1;
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		Наименование = ВыборкаДетальныеЗаписи.Представление;
		ДобавитьКнопку(ВыборкаДетальныеЗаписи.Ссылка,Наименование, Наименование, i, Кнопки, "КомандаСтажОбщий",Созаемщик);
		i=i+1;
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура СформироватьКнопкиФормаПодтвержденияДоходов(Кнопки, МассивКоманд,Созаемщик)
	
	МассивКоманд.Добавить("КомандаФормаПодтвержденияДоходов"+Созаемщик);

	Кнопки = Новый Соответствие;

	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ПараметрыПримененияСтавок_Значения.Ссылка,
		|	ПараметрыПримененияСтавок_Значения.Представление
		|ИЗ
		|	Справочник.ПараметрыПримененияСтавок_Значения КАК ПараметрыПримененияСтавок_Значения
		|ГДЕ
		|	ПараметрыПримененияСтавок_Значения.Владелец = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ПараметрыПримененияСтавок.ФормаПодтвержденияДоходов)
		|
		|УПОРЯДОЧИТЬ ПО
		|	ПараметрыПримененияСтавок_Значения.Сортировка,
		|	ПараметрыПримененияСтавок_Значения.Наименование";
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	i = 1;
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		Наименование = ВыборкаДетальныеЗаписи.Представление;
		ДобавитьКнопку(ВыборкаДетальныеЗаписи.Ссылка,Наименование, Наименование, i, Кнопки, "КомандаФормаПодтвержденияДоходов",Созаемщик);
		i=i+1;
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура СформироватьКнопкиНаличиеЗПКартыБанка(Кнопки, МассивКоманд,Созаемщик)
	
	МассивКоманд.Добавить("КомандаНаличиеЗПКартыБанка"+Созаемщик);

	Кнопки = Новый Соответствие;

	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ПараметрыПримененияСтавок_Значения.Ссылка,
		|	ПараметрыПримененияСтавок_Значения.Представление
		|ИЗ
		|	Справочник.ПараметрыПримененияСтавок_Значения КАК ПараметрыПримененияСтавок_Значения
		|ГДЕ
		|	ПараметрыПримененияСтавок_Значения.Владелец = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ПараметрыПримененияСтавок.ЗарплатныйКлиент)
		|
		|УПОРЯДОЧИТЬ ПО
		|	ПараметрыПримененияСтавок_Значения.Сортировка,
		|	ПараметрыПримененияСтавок_Значения.Наименование";
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	i = 1;
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		Наименование = ВыборкаДетальныеЗаписи.Представление;
		ДобавитьКнопку(ВыборкаДетальныеЗаписи.Ссылка,Наименование, Наименование, i, Кнопки, "КомандаНаличиеЗПКартыБанка",Созаемщик);
		i=i+1;
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура СформироватьКнопкиФинансовыеОбязательства(Кнопки, МассивКоманд,Созаемщик)
	
	МассивКоманд.Добавить("КомандаФинансовыеОбязательства"+Созаемщик);

	Кнопки = Новый Соответствие;

	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ПараметрыПримененияСтавок_Значения.Ссылка,
		|	ПараметрыПримененияСтавок_Значения.Представление
		|ИЗ
		|	Справочник.ПараметрыПримененияСтавок_Значения КАК ПараметрыПримененияСтавок_Значения
		|ГДЕ
		|	ПараметрыПримененияСтавок_Значения.Владелец = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ПараметрыПримененияСтавок.ФинансовыеОбязательства)
		|
		|УПОРЯДОЧИТЬ ПО
		|	ПараметрыПримененияСтавок_Значения.Сортировка,
		|	ПараметрыПримененияСтавок_Значения.Наименование";
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	i = 1;
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		Наименование = ВыборкаДетальныеЗаписи.Представление;
		ДобавитьКнопку(ВыборкаДетальныеЗаписи.Ссылка,Наименование, Наименование, i, Кнопки, "КомандаФинансовыеОбязательства",Созаемщик);
		i=i+1;
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура Команда(Команда)
	Перем пОбъект,Команды;
	
	ОтобразитьПредупреждениеБаза();
	Префикс = "Команда";
	ПреобразоватьИмя = ПреобразоватьИмя(Команда.Имя, Ложь);
	ИмяРеквизита = ПреобразоватьИмя.ИмяРеквизита;	
	ИмяРеквизитаЧистое = ПреобразоватьИмя.ИмяРеквизитаЧистое;
	ИмяРеквизитаЧистоеБезНомера = ПреобразоватьИмя.ИмяРеквизитаЧистоеБезНомера;
	РеквизитОбъекта = Объект.Свойство(ИмяРеквизитаЧистое);
	НомерСозаемщикаСтр = "";
	
	Если РеквизитОбъекта Тогда
		Выполнить("пОбъект = Объект." + ИмяРеквизитаЧистое);
		ИмяКоманды = Команда.Имя;
	Иначе
		НомерСозаемщика = ОпределитьНомерСозаемщика(ИмяРеквизита);
		НомерСозаемщикаСтр = ?(НомерСозаемщика=0, "", XMLСтрока(НомерСозаемщика));
		пОбъект = Объект.ДанныеОЗаемщиках[НомерСозаемщика][ИмяРеквизитаЧистоеБезНомера];
		ИмяКоманды = Префикс + ИмяРеквизитаЧистое;
	КонецЕсли;
	
	Выполнить("Команды = КомандыСтруктура[Префикс + ИмяРеквизитаЧистоеБезНомера + НомерСозаемщикаСтр]");
	
	ОбработатьВыбор(Команда.Имя, пОбъект, Команды);
	ВыбЗнач = Команды.Получить(Команда.Имя);
	Если РеквизитОбъекта Тогда
		Объект[ИмяРеквизитаЧистое] = ВыбЗнач;
	Иначе
		Объект.ДанныеОЗаемщиках[НомерСозаемщика][ИмяРеквизитаЧистоеБезНомера] = ВыбЗнач;
	КонецЕсли;
	
	//++ Юкаев Роман 20180201 (
	Если ИмяРеквизитаЧистое = "ЖК" Тогда
		Объект.Корпус = ПредопределенноеЗначение("Справочник.ОбъектыНедвижимости.ПустаяСсылка");
		Объект.Фаза = ПредопределенноеЗначение("Справочник.Фазы.ПустаяСсылка");
	КонецЕсли;
	//-- Юкаев Роман 20180201 )

КонецПроцедуры

&НаКлиенте
Функция ОпределитьНомерСозаемщика(ИмяКоманды)
	Разделитель = Найти(ИмяКоманды, "Созаемщик");
	Если Разделитель = 0 Тогда
		Возврат 0;
	КонецЕсли;
	
	ЧастьПослеСозаемщика = Сред(ИмяКоманды,Разделитель+ СтрДлина("Созаемщик"), СтрДлина(ИмяКоманды));
	Попытка 
		Возврат Число(ЧастьПослеСозаемщика);
	Исключение
		Возврат 0;
	КонецПопытки;

КонецФункции

&НаСервереБезКонтекста
Функция УдалитьПорядковыйНомер(знач ИмяКоманды)
	
	Разделитель = Найти(ИмяКоманды, "Созаемщик");
	Если Разделитель = 0 Тогда
		Разделитель = СтрДлина(ИмяКоманды)+1;
	КонецЕсли;
	ЧастьДоСозаемщика = Сред(ИмяКоманды,1,Разделитель-1);
	ЧастьПослеСозаемщика = Сред(ИмяКоманды,Разделитель, СтрДлина(ИмяКоманды));
		
	Для i = 0 По 9 Цикл
	ЧастьДоСозаемщика = СтрЗаменить(ЧастьДоСозаемщика,Строка(i),"");
	КонецЦикла;

	ИмяКоманды = ЧастьДоСозаемщика + ЧастьПослеСозаемщика;

	Возврат ИмяКоманды;
	
КонецФункции

&НаКлиенте
Процедура УстановитьВидимостьКнопок(Начало=Неопределено, Макс=Неопределено, Префикс, Кнопки, НомерСозаемщика="")
	
	Начало =?(Начало=Неопределено,  КомандыСтруктура[Префикс + "Начальная"+ НомерСозаемщика], Начало);
	ВЫПОЛНИТЬ("Макс =?(Макс=Неопределено,"+  Префикс + "Макс" + ", Макс)");
	
	Созаемщик = ?(НомерСозаемщика="", "","Созаемщик" + НомерСозаемщика);
	
	ПорядковыйНомер = 0;
	Для Каждого Стр Из Кнопки Цикл
		ПорядковыйНомер = ПорядковыйНомер+1;
		Если ПорядковыйНомер>= Начало И ПорядковыйНомер<=Начало+ Макс-1 Тогда
			Элементы[Префикс+ПорядковыйНомер+Созаемщик].Видимость = Истина;
		Иначе
			Элементы[Префикс+ПорядковыйНомер+Созаемщик].Видимость = Ложь;
		КонецЕсли;
	КонецЦикла;
	ОстатокСтраниц(Префикс, Кнопки, НомерСозаемщика);
	
КонецПроцедуры

&НаКлиенте
Функция ОпределитьКоманду(Наименование, Команды, НомерСозаемщика)
	
	Для Каждого Стр Из Команды Цикл
		НомерТекущегоСозаемщика = ОпределитьНомерСозаемщика(Стр.Ключ);
		Если Стр.Значение = Наименование И НомерСозаемщика = НомерТекущегоСозаемщика Тогда
			Возврат Стр.Ключ;
		КонецЕсли;
	КонецЦикла;
	           	
КонецФункции

&НаКлиенте
Процедура СнятьОтметкуСКоманды(Команда)
	Элементы[Команда].ЦветФона = Новый Цвет(252, 250, 235);
	Элементы[Команда].ЦветТекста = Новый Цвет(179, 172, 134);
	Элементы[Команда].Пометка = Ложь;
Конецпроцедуры

&НаКлиенте
Процедура СнятьОтметкуСоВсехКоманд(ТекКоманда)
	Для Каждого Стр Из ТекКоманда Цикл
		Элементы[Стр.Ключ].ЦветФона = Новый Цвет(252, 250, 235);
		Элементы[Стр.Ключ].ЦветТекста = Новый Цвет(179, 172, 134);
		Элементы[Стр.Ключ].Пометка = Ложь;
	КонецЦикла;
Конецпроцедуры

&НаКлиенте
Процедура УстановитьОтметкуНаКоманду(Команда)
	Попытка
		Элементы[Команда].ЦветФона = Новый Цвет(31, 138, 255);
		Элементы[Команда].ЦветТекста = Новый Цвет(255, 255, 255);
		Элементы[Команда].Пометка = Истина;
	Исключение
	КонецПопытки;
Конецпроцедуры

&НаСервере
Процедура ДобавитьКнопку(пОбъект, Наименование, Подсказка, ПорядковыйНомер, Кнопки, ПрефиксКоманды, Созаемщик="",Ряд="",Ширина=0, Растягивать = Ложь)

	ЭтоСозаемщик = ЗначениеЗаполнено(Созаемщик);
	ИмяКоманды = ПрефиксКоманды + ПорядковыйНомер + Созаемщик;
	НоваяКоманда = ЭтаФорма.Команды.Найти(ИмяКоманды) ;
	Если НоваяКоманда = Неопределено Тогда
		Попытка
			НоваяКоманда = ЭтаФорма.Команды.Добавить(ИмяКоманды);
			ДобавленныеЭлементы.Добавить(ИмяКоманды);
		Исключение
			Возврат;
		КонецПопытки;
	КонецЕсли;
	
	НоваяКоманда.Действие = "Команда";
	        	
	ЭлементРодительСтр = "Родитель" + ПрефиксКоманды+ СтрЗаменить(Созаемщик, "Созаемщик","")+Ряд;
	ЭлементРодитель = Элементы.Найти(ЭлементРодительСтр);
	Если ЭлементРодитель = Неопределено Тогда
		  ЭлементРодитель = Элементы.Добавить(ЭлементРодительСтр, Тип("ГруппаФормы"),Элементы["Родитель" + ПрефиксКоманды+ СтрЗаменить(Созаемщик, "Созаемщик","")]);
		  ЭлементРодитель.Вид = ВидГруппыФормы.ОбычнаяГруппа;
		  ЭлементРодитель.Отображение = ОтображениеОбычнойГруппы.Нет;
		  ЭлементРодитель.ОтображатьЗаголовок = Ложь;
		  ДобавленныеЭлементы.Добавить(ЭлементРодитель.Имя);
	КонецЕсли;
	

	НовыйЭлемент = Элементы.Добавить(ИмяКоманды, Тип("КнопкаФормы"),ЭлементРодитель);
	НовыйЭлемент.ИмяКоманды = ИмяКоманды;
	НовыйЭлемент.Заголовок = Наименование;
	ШиринаЗаголовка = Макс(СтрДлина(Наименование)+2,1);
	ЧестнаяШирина = ШиринаЗаголовка*3 / Pow(ШиринаЗаголовка,0.3)+2;
	НовыйЭлемент.Ширина = ?(Ширина=0, ЧестнаяШирина,Макс(ЧестнаяШирина,Ширина));
	
	НовыйЭлемент.РасширеннаяПодсказка.Заголовок = Подсказка;
	НовыйЭлемент.ВысотаЗаголовка = 1;
	НовыйЭлемент.РастягиватьПоГоризонтали  = Ложь;
	ДобавленныеЭлементы.Добавить(НовыйЭлемент.Имя);
	
	Если Растягивать Тогда
		
		НовыйЭлемент.РастягиватьПоГоризонтали = Истина;
		ЭлементРодитель.Ширина = Макс(НовыйЭлемент.Ширина, ЭлементРодитель.Ширина);
		ЭлементРодитель.РастягиватьПоГоризонтали = Ложь;
		НовыйЭлемент.Ширина = 0;

	КонецЕсли;
	
	НовыйЭлемент.АвтоМаксимальнаяШирина = Истина;
	
	НовыйЭлемент.ЦветФона = Новый Цвет(252, 250, 235);
	НовыйЭлемент.ЦветТекста = Новый Цвет(179, 172, 134);

	НовыйЭлемент.ЦветРамки = Новый Цвет(179, 172, 134);
	НовыйЭлемент.Шрифт = Новый Шрифт("Arial Black",10);
	
	Кнопки.Вставить(НоваяКоманда.Имя, пОбъект);
	
КонецПроцедуры

&НаСервере
Процедура ДобавитьКнопкиСтрелки(ПрефиксКоманды, Кнопки, Созаемщик)
	
	Перем Картинка;
	
	ЭтоСозаемщик = ЗначениеЗаполнено(Созаемщик);
			
	Направление = "Влево";
	ИмяКоманды = ПрефиксКоманды + Направление + Созаемщик;
	НоваяКоманда = ЭтаФорма.Команды.Найти(ИмяКоманды) ;
	Если НоваяКоманда = Неопределено Тогда
		НоваяКоманда = ЭтаФорма.Команды.Добавить(ИмяКоманды);
	КонецЕсли;
	
	НовыйЭлемент = Элементы.Найти(ИмяКоманды);
	Если НовыйЭлемент = Неопределено Тогда
	НовыйЭлемент = Элементы.Добавить(ИмяКоманды, Тип("КнопкаФормы"),Элементы["Группа" + Направление + ПрефиксКоманды+ СтрЗаменить(Созаемщик, "Созаемщик","")]);
	КонецЕсли;
	
	НоваяКоманда.Действие = "Команда"+Направление;
	НовыйЭлемент.ИмяКоманды = ИмяКоманды;
	НовыйЭлемент.Заголовок = Направление;
	НовыйЭлемент.Ширина = 4;
	НовыйЭлемент.ЦветФона  = Новый Цвет(255, 255, 255);
	НовыйЭлемент.ЦветРамки = Новый Цвет(100, 149, 237);
	НовыйЭлемент.Картинка = БиблиотекаКартинок.ПереместитьВлево;
	НовыйЭлемент.Отображение = ОтображениеКнопки.КартинкаИТекст;
	ДобавленныеЭлементы.Добавить(НовыйЭлемент.Имя);
	
	Направление = "Вправо";
	ИмяКоманды = ПрефиксКоманды + Направление + Созаемщик;
	НоваяКоманда = ЭтаФорма.Команды.Найти(ИмяКоманды) ;
	Если НоваяКоманда = Неопределено Тогда
		НоваяКоманда = ЭтаФорма.Команды.Добавить(ИмяКоманды);
	КонецЕсли;
	
	НовыйЭлемент = Элементы.Найти(ИмяКоманды);
	Если НовыйЭлемент = Неопределено Тогда
	НовыйЭлемент = Элементы.Добавить(ИмяКоманды, Тип("КнопкаФормы"),Элементы["Группа" + Направление + ПрефиксКоманды+ СтрЗаменить(Созаемщик, "Созаемщик","")]);
	КонецЕсли;

	НоваяКоманда.Действие = "Команда"+Направление;
	НовыйЭлемент.ИмяКоманды = ИмяКоманды;
	НовыйЭлемент.Заголовок = Направление;
	НовыйЭлемент.Ширина = 4;
	НовыйЭлемент.ЦветФона  = Новый Цвет(255, 255, 255);
	НовыйЭлемент.ЦветРамки = Новый Цвет(100, 149, 237);
	НовыйЭлемент.Картинка = БиблиотекаКартинок.ПереместитьВправо;
	НовыйЭлемент.Отображение = ОтображениеКнопки.КартинкаИТекст;
	ДобавленныеЭлементы.Добавить(НовыйЭлемент.Имя);
	
КонецПроцедуры

&НаКлиенте
Процедура КомандаВлево(Команда)
	Перем Начало;
	ИмяРеквизита = ПреобразоватьИмя(Команда.Имя);
	НомерСозаемщика = ОпределитьНомерСозаемщика(Команда.Имя);
	НомерСозаемщикаСтр = ?(НомерСозаемщика=0,"", XMLСтрока(НомерСозаемщика));

	Префикс = СтрЗаменить(ИмяРеквизита.ИмяРеквизитаЧистоеБезНомера, "Влево", "");
	
	Выполнить("Начало = Макс(КомандыСтруктура[""" +Префикс+"Начальная"+НомерСозаемщикаСтр+"""] - "+Префикс+"Макс, 1)");
	Выполнить("КомандыСтруктура["""+Префикс+"Начальная"+НомерСозаемщикаСтр+"""] = Начало");
	Выполнить("УстановитьВидимостьКнопок(Начало,,Префикс,КомандыСтруктура[Префикс+НомерСозаемщикаСтр],НомерСозаемщикаСтр)");
	
КонецПроцедуры

&НаКлиенте
Процедура КомандаВправо(Команда)
	Перем Начало;
	ИмяРеквизита = ПреобразоватьИмя(Команда.Имя);
	НомерСозаемщика = ОпределитьНомерСозаемщика(Команда.Имя);
	НомерСозаемщикаСтр = ?(НомерСозаемщика=0,"", XMLСтрока(НомерСозаемщика));
	Префикс = СтрЗаменить(ИмяРеквизита.ИмяРеквизитаЧистоеБезНомера, "Вправо", "");

	Выполнить("Начало = Мин(КомандыСтруктура["""+Префикс+"Начальная" + НомерСозаемщикаСтр +"""] +" + Префикс+"Макс, " +КомандыСтруктура[Префикс+ НомерСозаемщикаСтр].Количество()+")");
	Выполнить("КомандыСтруктура["""+Префикс+"Начальная" + НомерСозаемщикаСтр+ """] = Начало");
	Выполнить("УстановитьВидимостьКнопок(Начало,,Префикс,КомандыСтруктура[Префикс+НомерСозаемщикаСтр],НомерСозаемщикаСтр)");
  
КонецПроцедуры

&НаКлиенте
Процедура ОстатокСтраниц(Префикс, Команды, НомерСозаемщика)
	
	Перем КомандаНачальная, КомандаМакс;
	
	НомерСозаемщикаСтр = ?(НомерСозаемщика=0, "", XMLСтрока(НомерСозаемщика));
	Созаемщик = ?(НомерСозаемщикаСтр="", "", "Созаемщик"+ НомерСозаемщикаСтр);
	
	КомандаНачальная = КомандыСтруктура[Префикс + "Начальная" + НомерСозаемщикаСтр];
	Выполнить("КомандаМакс = " +Префикс + "Макс;");
	
	КнопкаВлево = Элементы[Префикс+"Влево"+ Созаемщик];
	КнопкаВправо = Элементы[Префикс+"Вправо"+ Созаемщик];
	
	ОсталосьСтраниц = (Команды.Количество()-КомандаНачальная+1)/КомандаМакс;
	ОсталосьСтраницЦелое = ?(ОсталосьСтраниц>Цел(ОсталосьСтраниц), Цел(ОсталосьСтраниц)+1, Цел(ОсталосьСтраниц))-1;
	КнопкаВправо.Заголовок = Макс(ОсталосьСтраницЦелое,0);
	ВсегоСтраниц = Команды.Количество()/КомандаМакс;
	ВсегоСтраницЦелое = Цел(ВсегоСтраниц);
	Пролистано = ?(ВсегоСтраниц>ВсегоСтраницЦелое, ВсегоСтраницЦелое-ОсталосьСтраницЦелое, ВсегоСтраницЦелое-ОсталосьСтраницЦелое-1);
	КнопкаВлево.Заголовок = Пролистано;
	Если Пролистано<=0 Тогда
		КнопкаВлево.Видимость = Ложь;
	Иначе
		КнопкаВлево.Видимость = Истина;
	КонецЕсли;
	
	Если ОсталосьСтраницЦелое<=0 Тогда
		КнопкаВправо.Видимость = Ложь;
	Иначе
		КнопкаВправо.Видимость = Истина;
	КонецЕсли;

КонецПроцедуры	

&НаКлиенте
Процедура ДобавитьСозаемщика(Команда)
	
	ЧислоСозаемщиков = ЧислоСозаемщиков+1;	
	ПриДобавленииСозаемщика();
	

КонецПроцедуры

&НаКлиенте
Процедура ПриДобавленииСозаемщика()
	
	Перем МассивКоманд;
	
	ПодготовитьЭлементыФормы();
	
	
	i= ЧислоСозаемщиков;
	
	Для Каждого Эл Из КомандыСтруктура Цикл
		Если ТипЗнч(Эл.Значение) <> Тип("Соответствие") Тогда
			Продолжить;
		КонецЕсли;
		КомандыСтруктура.Вставить(Эл.Ключ+"Начальная"+ XMLСтрока(i),1);
		КомандыСтруктура.Вставить(Эл.Ключ+ XMLСтрока(i));
	КонецЦикла;
	
	Если Объект.ДанныеОЗаемщиках.Количество() > i Тогда
		СтрокаДанных = Объект.ДанныеОЗаемщиках[i];
		Элементы["ГруппаСозаемщик"+i].Видимость = Истина;
		ЭтаФорма.ТекущийЭлемент = Элементы["ГруппаСозаемщик"+i];
		ВизуализироватьДанные(i);
		Возврат;
	Иначе	
		СтрокаДанных = Объект.ДанныеОЗаемщиках.Добавить();
	КонецЕсли;
	Созаемщик = "Созаемщик"+ XMLСтрока(i);	
	ПорядковыйНомер = СтрЗаменить(Созаемщик, "Созаемщик","");
	СформироватьКнопкиНаСервере(КомандыСтруктура, МассивКоманд,Созаемщик);
	Для Каждого Эл Из КомандыСтруктура Цикл
		Выполнить(Эл.Ключ + " = Эл.Значение");	
	КонецЦикла;
	
	Для Каждого Стр Из МассивКоманд Цикл
		ИмяРеквизита = ПреобразоватьИмя(Стр);
		УстановитьВидимостьКнопок(,,ИмяРеквизита.ИмяРеквизитаЧистоеБезНомера, КомандыСтруктура[ИмяРеквизита.ИмяРеквизитаЧистоеБезНомера]);     	
		ОстатокСтраниц(ИмяРеквизита.ИмяРеквизитаЧистоеБезНомера, КомандыСтруктура[ИмяРеквизита.ИмяРеквизитаЧистоеБезНомера], ПорядковыйНомер);	                 
	КонецЦикла;
	
	
	Элементы["ГруппаСозаемщик"+i].Видимость = Истина;
	ЭтаФорма.ТекущийЭлемент = Элементы["ГруппаСозаемщик"+i];

КонецПроцедуры

&НаКлиенте
Процедура УдалитьСозаемщика(Команда)

	НомерСозаемщика = ОпределитьНомерСозаемщика(ЭтаФорма.ТекущийЭлемент.Имя);
	Объект.ДанныеОЗаемщиках.Удалить(НомерСозаемщика);
	ДействияПоУдалениюСозаемщикаНаСервере();
	ПриОткрытии(Ложь);
	ОтобразитьПредупреждениеБаза();
	
КонецПроцедуры

Процедура ДействияПоУдалениюСозаемщикаНаСервере()

	//начинаем удалять с последних
	Пока ДобавленныеЭлементы.Количество()>0 Цикл
		ПоследнийДобавленный = ДобавленныеЭлементы[ДобавленныеЭлементы.Количество()-1].Значение;
		ИндексПоследнего = ДобавленныеЭлементы.Количество()-1;
		Если Элементы.Найти(ПоследнийДобавленный) <> Неопределено Тогда
		Элементы.Удалить(Элементы[ПоследнийДобавленный]);
		КонецЕсли;
		ДобавленныеЭлементы.Удалить(ИндексПоследнего);
	КонецЦикла;
		
	//ЗаполнитьФормуНаСервере(ЧислоСозаемщиков,КомандыСтруктура, КомандыСтруктураБазовые, МассивКоманд, КлючевыеКнопки);

КонецПроцедуры

&НаКлиенте
Процедура ОчиститьДанныеОСозаемщике(НомерСтроки)
	
	СтрокаДанных = Объект.ДанныеОЗаемщиках[НомерСтроки];
	СтрокаДанных["ID"] = Неопределено;
	СтрокаДанных["ФИО"] = Неопределено;
	СтрокаДанных["Пол"] = Неопределено;
	СтрокаДанных["ДатаРождения"] = Неопределено;
	СтрокаДанных["КоличествоПолныхЛет"] = Неопределено;
	СтрокаДанных["ГражданствоРФ"] = Неопределено;
	
	СтрокаДанных["МатеринскийКапиталВПВ"] = Неопределено;
	//СтрокаДанных["СтрахованиеЖизни"] = Неопределено;
	
	СтрокаДанных["РегистрацияРФ"] = Неопределено;
	СтрокаДанных["СемейноеПоложение"] = Неопределено;
	СтрокаДанных["НаличиеИждивенцев"] = Неопределено;
	СтрокаДанных["КатегорияЗанятости"] = Неопределено;
	СтрокаДанных["СтажТекущий"] = Неопределено;
	СтрокаДанных["СтажОбщий"] = Неопределено;
	СтрокаДанных["ФормаПодтвержденияДоходов"] = Неопределено;
	СтрокаДанных["РазмерЕжемесячногоДохода"] = Неопределено;
	СтрокаДанных["НаличиеЗПКартыБанка"] = Неопределено;
	СтрокаДанных["ФинансовыеОбязательства"] = Неопределено;
	
	ОчиститьВизуализацию(НомерСтроки);
	                  	
КонецПроцедуры

&НаКлиенте
Процедура РеквизитФормыПриИзменении(Элемент)
	ОтобразитьПредупреждениеБаза();	
	ИмяРеквизита = ПреобразоватьИмя(Элемент.Имя);
	НомерСозаемщика = ОпределитьНомерСозаемщика(Элемент.Имя);
	НомерСозаемщикаСтр = ?(НомерСозаемщика=0, "", XMLСтрока(НомерСозаемщика));
	СтрокаДанных = Объект.ДанныеОЗаемщиках[НомерСозаемщика];
	СтрокаДанных[ИмяРеквизита.ИмяРеквизитаЧистоеБезНомера] = ЭтаФорма[Элемент.Имя];
	
	Если ИмяРеквизита.ИмяРеквизитаЧистоеБезНомера = "ДатаРождения" Тогда
		КПЛ = ОпределитьЧислоПолныхЛет(ЭтаФорма[ИмяРеквизита.ИмяРеквизита]);
		ЭтаФорма["КоличествоПолныхЛет" + НомерСозаемщикаСтр] = КПЛ;
		СтрокаДанных["КоличествоПолныхЛет"] = КПЛ ;
	КонецЕсли;
	//++ Юкаев Роман 20180122 (
	Если ИмяРеквизита.ИмяРеквизитаЧистоеБезНомера = "ФИО" Тогда
		ДанныеЗаемщика = ПолучитьДанныеПоЗаемщику(СтрокаДанных.ФИО);
		СтрокаДанных.ДатаРождения = ДанныеЗаемщика.ДатаРождения;
		СтрокаДанных.КоличествоПолныхЛет = ДанныеЗаемщика.ПолныйЛет;
		СтрокаДанных.Пол = ДанныеЗаемщика.Пол;
		СтрокаДанных.ГражданствоРФ = ДанныеЗаемщика.Гражданство;
		СтрокаДанных.РегистрацияРФ = ДанныеЗаемщика.Регистрация;
		
		Если НомерСозаемщика > 0 Тогда
			ЭтаФорма["ДатаРожденияСозаемщик" + НомерСозаемщика] = СтрокаДанных.ДатаРождения;
			ЭтаФорма["КоличествоПолныхЛет" + НомерСозаемщика] = СтрокаДанных.КоличествоПолныхЛет;
		Иначе
			ЭтаФорма.ДатаРождения = СтрокаДанных.ДатаРождения;
			ЭтаФорма.КоличествоПолныхЛет = СтрокаДанных.КоличествоПолныхЛет;
		КонецЕсли;
		
		Если ЗначениеЗаполнено(ФИО) Тогда
			Элементы.РодительКомандаДатаРождения.ТолькоПросмотр = Истина;
		Иначе
			Элементы.РодительКомандаДатаРождения.ТолькоПросмотр = Ложь;
		КонецЕсли;
	КонецЕсли;
	//-- Юкаев Роман 20180122 )
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ОпределитьЧислоПолныхЛет(ЗначениеРеквизита)
	
Дата1 = ЗначениеРеквизита; 
Дата2 = ТекущаяДата(); 

ЧислоЛет = Год(Дата2) - Год(Дата1); 
Если Месяц(Дата2) < Месяц(Дата1) Тогда 
    ЧислоЛет = ЧислоЛет-1; 
ИначеЕсли Месяц(Дата2) = Месяц(Дата1) И День(Дата2) < День(Дата1) Тогда 
    ЧислоЛет = ЧислоЛет-1; 
КонецЕсли; 
Возврат ЧислоЛет;

КонецФункции

&НаКлиенте
Процедура ВизуализироватьДанные(НомерСтроки = Неопределено)
	Перем Кнопка, ТекКоманда;
	
	//ЖК
	ТекКоманда = КомандыСтруктура.КомандаЖК;
	ТекЗначение = ОпределитьГруппуПоПроекту(Объект.ЖК); //++ Юкаев Роман 20180122 () //Если проект а не группаПроектов
	Кнопка = ОпределитьКоманду(ТекЗначение, ТекКоманда, 0);
	Если ЗначениеЗаполнено(ТекЗначение) Тогда
		УстановитьОтметкуНаКоманду(Кнопка);
	КонецЕсли;
	
	//Площадь
	ТекКоманда = КомандыСтруктура.КомандаПлощадь;
	ТекЗначение = Объект.Площадь;
	Кнопка = ОпределитьКоманду(ТекЗначение, ТекКоманда, 0);
	Если ЗначениеЗаполнено(ТекЗначение) Тогда
		УстановитьОтметкуНаКоманду(Кнопка);
	КонецЕсли; 
	
	//Тип объекта
	ТекКоманда = КомандыСтруктура.КомандаТипОбъекта;
	ТекЗначение = Объект.ТипОбъекта;
	Кнопка = ОпределитьКоманду(ТекЗначение, ТекКоманда, 0);
	Если ЗначениеЗаполнено(ТекЗначение) Тогда
		УстановитьОтметкуНаКоманду(Кнопка);
	КонецЕсли; 
	
	//Фаза
	Если ЗначениеЗаполнено(Объект.ЖК) Тогда
		
		ВыбранноеЗначение = Объект.ЖК;
		МассивКоманд = Новый Массив;
		СформироватьКнопкиФаза(КомандыСтруктура.КомандаФаза, МассивКоманд, ВыбранноеЗначение);
		КомандаФаза = КомандыСтруктура.КомандаФаза;		

		Для Каждого Стр Из МассивКоманд Цикл
			ИмяРеквизита = ПреобразоватьИмя(Стр);
			ДобавитьКнопкиСтрелки(ИмяРеквизита.ИмяРеквизитаЧистоеБезНомера, КомандыСтруктура[ИмяРеквизита.ИмяРеквизитаЧистоеБезНомера], "");	         
			УстановитьВидимостьКнопок(,,ИмяРеквизита.ИмяРеквизитаЧистоеБезНомера, КомандыСтруктура[ИмяРеквизита.ИмяРеквизитаЧистоеБезНомера]);     	
			ОстатокСтраниц(ИмяРеквизита.ИмяРеквизитаЧистоеБезНомера, КомандыСтруктура[ИмяРеквизита.ИмяРеквизитаЧистоеБезНомера], "");
		КонецЦикла;
		
	ТекЗначение = Объект.Фаза;
	ТекКоманда = КомандаФаза;
	Кнопка = ОпределитьКоманду(ТекЗначение, ТекКоманда, 0);
	Если ЗначениеЗаполнено(ТекЗначение) Тогда
		УстановитьОтметкуНаКоманду(Кнопка);
	КонецЕсли;
	КонецЕсли;

	
	//Корпус
	Если ЗначениеЗаполнено(Объект.ЖК) И ЗначениеЗаполнено(Объект.Фаза) Тогда
		ВыбранноеЗначение = Объект.Фаза;
		МассивКоманд = Новый Массив;
		СформироватьКнопкиКорпус(КомандыСтруктура.КомандаКорпус, МассивКоманд, ВыбранноеЗначение);
		КомандаКорпус = КомандыСтруктура.КомандаКорпус;		

		Для Каждого Стр Из МассивКоманд Цикл
			ИмяРеквизита = ПреобразоватьИмя(Стр);
			ДобавитьКнопкиСтрелки(ИмяРеквизита.ИмяРеквизитаЧистоеБезНомера, КомандыСтруктура[ИмяРеквизита.ИмяРеквизитаЧистоеБезНомера], "");	         
			УстановитьВидимостьКнопок(,,ИмяРеквизита.ИмяРеквизитаЧистоеБезНомера, КомандыСтруктура[ИмяРеквизита.ИмяРеквизитаЧистоеБезНомера]);     	
			ОстатокСтраниц(ИмяРеквизита.ИмяРеквизитаЧистоеБезНомера, КомандыСтруктура[ИмяРеквизита.ИмяРеквизитаЧистоеБезНомера], "");
		КонецЦикла;
		
	ТекЗначение = Объект.Корпус;
	ТекКоманда = КомандаКорпус;
	Кнопка = ОпределитьКоманду(ТекЗначение, ТекКоманда, 0);
	Если ЗначениеЗаполнено(ТекЗначение) Тогда
		УстановитьОтметкуНаКоманду(Кнопка);
	КонецЕсли; 		
	КонецЕсли;

		
	Для Каждого Стр Из Объект.ДанныеОЗаемщиках Цикл
		НомерСозаемщика = Объект.ДанныеОЗаемщиках.Индекс(Стр);
		НомерСозаемщикаСтр = ?(НомерСозаемщика=0, "", XMLСтрока(НомерСозаемщика));
		Созаемщик = ?(НомерСозаемщика=0, "", "Созаемщик"+НомерСозаемщикаСтр);
		
		Если НомерСтроки <> НомерСозаемщика И НомерСтроки <> Неопределено Тогда
			Продолжить;
		КонецЕсли;
		
		//ФИО
		ТекЗначение = Стр.ФИО;
		ЭтаФорма["ФИО"+Созаемщик] = ТекЗначение;
		
		//Чистый доход
		ТекЗначение = Стр.РазмерЕжемесячногоДохода;
		ЭтаФорма["РазмерЕжемесячногоДохода"+Созаемщик] = ТекЗначение;
		
		//ДатаРождения
		ТекЗначение = Стр.ДатаРождения;
		ЭтаФорма["ДатаРождения"+Созаемщик] = ТекЗначение;
		
		//КоличествоПолныхЛет
		ТекЗначение = Стр.КоличествоПолныхЛет;
		ЭтаФорма["КоличествоПолныхЛет"+НомерСозаемщикаСтр] = ТекЗначение;
	
		//Пол
		ТекКоманда = КомандыСтруктура["КомандаПол"+НомерСозаемщикаСтр];
		ТекЗначение = Стр.Пол;
		Кнопка = ОпределитьКоманду(ТекЗначение, ТекКоманда, НомерСозаемщика);
		Если ЗначениеЗаполнено(ТекЗначение) Тогда
			УстановитьОтметкуНаКоманду(Кнопка);
		КонецЕсли;
		
		//ГражданствоРФ
		ТекКоманда = КомандыСтруктура["КомандаГражданствоРФ"+НомерСозаемщикаСтр];
		ТекЗначение = Стр.ГражданствоРФ;
		Кнопка = ОпределитьКоманду(ТекЗначение, ТекКоманда, НомерСозаемщика);
		Если ЗначениеЗаполнено(ТекЗначение) Тогда
			УстановитьОтметкуНаКоманду(Кнопка);
		КонецЕсли;
		
		//СтрахованиеЖизни
		//ТекКоманда = КомандыСтруктура["КомандаСтрахованиеЖизни"+НомерСозаемщикаСтр];
		//ТекЗначение = Стр.СтрахованиеЖизни;
		//Кнопка = ОпределитьКоманду(ТекЗначение, ТекКоманда, НомерСозаемщика);
		//Если ЗначениеЗаполнено(ТекЗначение) Тогда
		//	УстановитьОтметкуНаКоманду(Кнопка);
		//КонецЕсли;
		
		//МатеринскийКапиталВПВ
		ТекКоманда = КомандыСтруктура["КомандаМатеринскийКапиталВПВ"+НомерСозаемщикаСтр];
		ТекЗначение = Стр.МатеринскийКапиталВПВ;
		Кнопка = ОпределитьКоманду(ТекЗначение, ТекКоманда, НомерСозаемщика);
		Если ЗначениеЗаполнено(ТекЗначение) Тогда
			УстановитьОтметкуНаКоманду(Кнопка);
		КонецЕсли;		

		//РегистрацияРФ
		ТекКоманда = КомандыСтруктура["КомандаРегистрацияРФ"+НомерСозаемщикаСтр];
		ТекЗначение = Стр.РегистрацияРФ;
		Кнопка = ОпределитьКоманду(ТекЗначение, ТекКоманда, НомерСозаемщика);
		Если ЗначениеЗаполнено(ТекЗначение) Тогда
			УстановитьОтметкуНаКоманду(Кнопка);
		КонецЕсли;             

		//СемейноеПоложение
		ТекКоманда = КомандыСтруктура["КомандаСемейноеПоложение"+НомерСозаемщикаСтр];
		ТекЗначение = Стр.СемейноеПоложение;
		Кнопка = ОпределитьКоманду(ТекЗначение, ТекКоманда, НомерСозаемщика);
		Если ЗначениеЗаполнено(ТекЗначение) Тогда
			УстановитьОтметкуНаКоманду(Кнопка);
		КонецЕсли;

		//НаличиеИждивенцев
		ТекКоманда = КомандыСтруктура["КомандаНаличиеИждивенцев"+НомерСозаемщикаСтр];
		ТекЗначение = Стр.НаличиеИждивенцев;
		Кнопка = ОпределитьКоманду(ТекЗначение, ТекКоманда, НомерСозаемщика);
		Если ЗначениеЗаполнено(ТекЗначение) Тогда
			УстановитьОтметкуНаКоманду(Кнопка);
		КонецЕсли;

		//КатегорияЗанятости
		ТекКоманда = КомандыСтруктура["КомандаКатегорияЗанятости"+НомерСозаемщикаСтр];
		ТекЗначение = Стр.КатегорияЗанятости;
		Кнопка = ОпределитьКоманду(ТекЗначение, ТекКоманда, НомерСозаемщика);
		Если ЗначениеЗаполнено(ТекЗначение) Тогда
			УстановитьОтметкуНаКоманду(Кнопка);
		КонецЕсли;

		//СтажТекущий
		ТекКоманда = КомандыСтруктура["КомандаСтажТекущий"+НомерСозаемщикаСтр];
		ТекЗначение = Стр.СтажТекущий;
		Кнопка = ОпределитьКоманду(ТекЗначение, ТекКоманда, НомерСозаемщика);
		Если ЗначениеЗаполнено(ТекЗначение) Тогда
			УстановитьОтметкуНаКоманду(Кнопка);
		КонецЕсли;

		//СтажОбщий
		ТекКоманда = КомандыСтруктура["КомандаСтажОбщий"+НомерСозаемщикаСтр];
		ТекЗначение = Стр.СтажОбщий;
		Кнопка = ОпределитьКоманду(ТекЗначение, ТекКоманда, НомерСозаемщика);
		Если ЗначениеЗаполнено(ТекЗначение) Тогда
			УстановитьОтметкуНаКоманду(Кнопка);
		КонецЕсли;

		//ФормаПодтвержденияДоходов
		ТекКоманда = КомандыСтруктура["КомандаФормаПодтвержденияДоходов"+НомерСозаемщикаСтр];
		ТекЗначение = Стр.ФормаПодтвержденияДоходов;
		Кнопка = ОпределитьКоманду(ТекЗначение, ТекКоманда, НомерСозаемщика);
		Если ЗначениеЗаполнено(ТекЗначение) Тогда
			УстановитьОтметкуНаКоманду(Кнопка);
		КонецЕсли;
		
		//НаличиеЗПКартыБанка
		ТекКоманда = КомандыСтруктура["КомандаНаличиеЗПКартыБанка"+НомерСозаемщикаСтр];
		ТекЗначение = Стр.НаличиеЗПКартыБанка;
		Кнопка = ОпределитьКоманду(ТекЗначение, ТекКоманда, НомерСозаемщика);
		Если ЗначениеЗаполнено(ТекЗначение) Тогда
			УстановитьОтметкуНаКоманду(Кнопка);
			Если Стр.НаличиеЗПКартыБанка = КнопкаДаЗарплатныйКлиент Тогда
				Элементы["БанкЭмитент"+Созаемщик].Видимость = Истина;
				ЭтаФорма["БанкЭмитент"+Созаемщик] = Стр.БанкЭмитент;
			КонецЕсли;
		КонецЕсли;

		//ФинансовыеОбязательства
		ТекКоманда = КомандыСтруктура["КомандаФинансовыеОбязательства"+НомерСозаемщикаСтр];
		ТекЗначение = Стр.ФинансовыеОбязательства;
		Кнопка = ОпределитьКоманду(ТекЗначение, ТекКоманда, НомерСозаемщика);
		Если ЗначениеЗаполнено(ТекЗначение) Тогда
			УстановитьОтметкуНаКоманду(Кнопка);
			Если Стр.ФинансовыеОбязательства = КнопкаДаФинансовыеОбязательства Тогда
				Элементы["ФинансовыеОбязательстваСумма"+Созаемщик].Видимость = Истина;
				ЭтаФорма["ФинансовыеОбязательстваСумма"+Созаемщик] = Стр.ФинансовыеОбязательстваСумма;
			КонецЕсли;
		КонецЕсли;
		
		
		
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ОчиститьВизуализацию(НомерСтроки = Неопределено)
	Перем ТекКоманда;
		
	Для Каждого Стр Из Объект.ДанныеОЗаемщиках Цикл
		НомерСозаемщика = Объект.ДанныеОЗаемщиках.Индекс(Стр);
		НомерСозаемщикаСтр = ?(НомерСозаемщика=0, "", XMLСтрока(НомерСозаемщика));
		Если НомерСтроки <> НомерСозаемщика И НомерСтроки <> Неопределено Тогда
			Продолжить;
		КонецЕсли;
				
		//Пол
		Выполнить("ТекКоманда = КомандаПол"+НомерСозаемщикаСтр);
		СнятьОтметкуСоВсехКоманд(ТекКоманда);
		
		//ГражданствоРФ
		Выполнить("ТекКоманда = КомандаГражданствоРФ"+НомерСозаемщикаСтр);
		СнятьОтметкуСоВсехКоманд(ТекКоманда);
		
		//МатеринскийКапиталВПВ
		Выполнить("ТекКоманда = КомандаМатеринскийКапиталВПВ"+НомерСозаемщикаСтр);
		СнятьОтметкуСоВсехКоманд(ТекКоманда);
		
		//СтрахованиеЖизни
		//Выполнить("ТекКоманда = КомандаСтрахованиеЖизни"+НомерСозаемщикаСтр);
		//СнятьОтметкуСоВсехКоманд(ТекКоманда);

		//РегистрацияРФ
		Выполнить("ТекКоманда = КомандаРегистрацияРФ"+НомерСозаемщикаСтр);
		СнятьОтметкуСоВсехКоманд(ТекКоманда);

		//СемейноеПоложение
		Выполнить("ТекКоманда = КомандаСемейноеПоложение"+НомерСозаемщикаСтр);
		СнятьОтметкуСоВсехКоманд(ТекКоманда);

		//НаличиеИждивенцев
		Выполнить("ТекКоманда = КомандаНаличиеИждивенцев"+НомерСозаемщикаСтр);
		СнятьОтметкуСоВсехКоманд(ТекКоманда);  

		//КатегорияЗанятости
		Выполнить("ТекКоманда = КомандаКатегорияЗанятости"+НомерСозаемщикаСтр);
		СнятьОтметкуСоВсехКоманд(ТекКоманда); 

		//СтажТекущий
		Выполнить("ТекКоманда = КомандаСтажТекущий"+НомерСозаемщикаСтр);
		СнятьОтметкуСоВсехКоманд(ТекКоманда); 

		//СтажОбщий
		Выполнить("ТекКоманда = КомандаСтажОбщий"+НомерСозаемщикаСтр);
		СнятьОтметкуСоВсехКоманд(ТекКоманда); 

		//ФормаПодтвержденияДоходов
		Выполнить("ТекКоманда = КомандаФормаПодтвержденияДоходов"+НомерСозаемщикаСтр);
		СнятьОтметкуСоВсехКоманд(ТекКоманда); 
		
		//НаличиеЗПКартыБанка
		Выполнить("ТекКоманда = КомандаНаличиеЗПКартыБанка"+НомерСозаемщикаСтр);
		СнятьОтметкуСоВсехКоманд(ТекКоманда); 

		//ФинансовыеОбязательства
		Выполнить("ТекКоманда = КомандаФинансовыеОбязательства"+НомерСозаемщикаСтр);
		СнятьОтметкуСоВсехКоманд(ТекКоманда); 
	
		
		
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура Растягивать(Команда)
	Элементы.РодительКомандаЖК.РастягиватьПоГоризонтали = Истина;
	Элементы.РодительКомандаФаза.РастягиватьПоГоризонтали = Истина;
КонецПроцедуры

&НаКлиенте
Процедура ПодготовитьЭлементыФормы()
	ТекущийНомер  = ЧислоСозаемщиков;
	ДобавитьСозаемщикаНаСервере(ТекущийНомер, КомандыСтруктураБазовые, КнопкаДаФинансовыеОбязательства);
	ЧислоСозаемщиков = ТекущийНомер;	
КонецПроцедуры

&НаСервере
Процедура ДобавитьСозаемщикаНаСервере(ЧислоСозаемщиков, КомандыСтруктураБазовые,КлючевыеКнопки)
	
	ЦветФона = Новый Цвет(255,255,255);

	НоваяСтраница = Элементы.Вставить("ГруппаСозаемщик" + XMLСтрока(ЧислоСозаемщиков),Тип("ГруппаФормы"),Элементы.Группа1, Элементы.ГруппаРасчет);
	НоваяСтраница.Вид = ВидГруппыФормы.Страница;
	НоваяСтраница.Заголовок = "Созаемщик " + ЧислоСозаемщиков;
	НоваяСтраница.Картинка = БиблиотекаКартинок.ЗначокФизическоеЛицо32;
	НоваяСтраница.ЦветФона = ЦветФона;

	ДобавленныеЭлементы.Добавить(НоваяСтраница.Имя);

	НомерГруппы=1;
	Группа1 = ДобавитьГруппу(НомерГруппы, НоваяСтраница,"ГруппаСозаемщикВложенная"+ЧислоСозаемщиков, "Данные по созаемщику №" + (ЧислоСозаемщиков), 14,ЦветФона);
	Группа1.ШиринаПодчиненныхЭлементов = ШиринаПодчиненныхЭлементовФормы.Одинаковая;
	Группа1.ГоризонтальныйИнтервал = ИнтервалМеждуЭлементамиФормы.Половинный;
	Группа1.ВертикальныйИнтервал = ИнтервалМеждуЭлементамиФормы.Половинный;
	
	ГруппаДобавитьУдалитьСозаемщика = ДобавитьГруппу(НомерГруппы, Группа1,"ГруппаДобавитьУдалитьСозаемщика"+ЧислоСозаемщиков, "",,ЦветФона,Истина);
	
	
	Группа2 = ДобавитьГруппу(НомерГруппы, Группа1,"ГруппаСозаемщикСлужебная"+ЧислоСозаемщиков, , ,ЦветФона, Истина);//Служебный калькулятор
	Группа2.ОтображатьЗаголовок = Ложь;
	ГруппаЛево = ДобавитьГруппу(НомерГруппы, Группа2,"ГруппаСозаемщикЛевая"+ЧислоСозаемщиков, , ,ЦветФона);//Левый столбец
	ГруппаПраво = ДобавитьГруппу(НомерГруппы, Группа2,"ГруппаСозаемщикПравая"+ЧислоСозаемщиков, , ,ЦветФона);//Правый столбец
	
	
	НовыйЭлемент = Элементы.Добавить("ДобавитьСозаемщик" + ЧислоСозаемщиков, Тип("КнопкаФормы"), ГруппаДобавитьУдалитьСозаемщика);
	НовыйЭлемент.Заголовок = "Добавить созаемщика";
	НовыйЭлемент.ИмяКоманды = "ДобавитьСозаемщика";
	НовыйЭлемент.Картинка = БиблиотекаКартинок.Приход;
	НовыйЭлемент.Отображение = ОтображениеКнопки.КартинкаИТекст;
	НовыйЭлемент = Элементы.Добавить("УдалитьСозаемщик" + ЧислоСозаемщиков, Тип("КнопкаФормы"), ГруппаДобавитьУдалитьСозаемщика);
	НовыйЭлемент.Заголовок = "Удалить созаемщика";
	НовыйЭлемент.ИмяКоманды = "УдалитьСозаемщика";
	НовыйЭлемент.Картинка = БиблиотекаКартинок.Расход;
	НовыйЭлемент.Отображение = ОтображениеКнопки.КартинкаИТекст;


	//ФИО
	ГруппаФИО = ДобавитьГруппу(НомерГруппы, ГруппаЛево,"ГруппаФИОСозаемщик"+ЧислоСозаемщиков, "ФИО",,ЦветФона,,,ОтображениеОбычнойГруппы.Нет);
	ЭлементФИО = ДобавитьПолеВвода("ФИОСозаемщик"+ЧислоСозаемщиков, ГруппаФИО, Новый ОписаниеТипов("СправочникСсылка.Клиенты"),40);
	ЭлементФИО.УстановитьДействие("ПриИзменении", "РеквизитФормыПриИзменении");
	ЭлементФИО.ЦветФона = WebЦвета.Роса;

	//ДатаРождения
	ГруппаДатаРождения = ДобавитьГруппу(НомерГруппы, ГруппаЛево,"ГруппаДатаРожденияСозаемщик"+ЧислоСозаемщиков, "Дата рождения или количество полных лет",,ЦветФона);
	РодительКомандаДатаРождения = ДобавитьГруппу(НомерГруппы, ГруппаДатаРождения,"РодительКомандаДатаРожденияСозаемщик"+ЧислоСозаемщиков, "РодительКомандаДатаРождения",,ЦветФона);
	РодительКомандаДатаРождения.ОтображатьЗаголовок = Ложь;
	РодительКомандаДатаРождения.Группировка = ГруппировкаПодчиненныхЭлементовФормы.Горизонтальная;
	ПараметрыДаты = Новый КвалификаторыДаты(ЧастиДаты.Дата);
	ЭлементДатаРождения = ДобавитьПолеВвода("ДатаРожденияСозаемщик"+ЧислоСозаемщиков, РодительКомандаДатаРождения, Новый ОписаниеТипов("Дата",,,,,ПараметрыДаты), 10);
	ЭлементДатаРождения.УстановитьДействие("ПриИзменении", "РеквизитФормыПриИзменении");
	ЭлементДатаРождения.ЦветФона = WebЦвета.Роса;
	КЧ = Новый КвалификаторыЧисла(3,0);
	ЭлементКоличествоПолныхЛет = ДобавитьПолеВвода("КоличествоПолныхЛет"+ЧислоСозаемщиков, РодительКомандаДатаРождения, Новый ОписаниеТипов("Число",,,КЧ), 4);
	ЭлементКоличествоПолныхЛет.УстановитьДействие("ПриИзменении", "РеквизитФормыПриИзменении");
	ЭлементКоличествоПолныхЛет.ТолькоПросмотр = Истина;
	
	//++ Юкаев Роман 20170122 (
	Если ЗначениеЗаполнено(ЭтаФорма["ФИОСозаемщик" + ЧислоСозаемщиков]) Тогда
		ГруппаДатаРождения.ТолькоПросмотр = Истина;
	Иначе
		ГруппаДатаРождения.ТолькоПросмотр = Ложь;
	КонецЕсли;
	//-- Юкаев Роман 20170122 )

	//РазмерЕжемесячногоДохода
	//ГруппаРазмерЕжемесячногоДохода = ДобавитьГруппу(НомерГруппы, ГруппаЛево,"ГруппаРазмерЕжемесячногоДоходаСозаемщик"+ЧислоСозаемщиков, "Размер ежемесячного дохода (чистый)",,ЦветФона);
	//КЧ = Новый КвалификаторыЧисла(15,2);
	//ЭлементРазмерЕжемесячногоДохода = ДобавитьПолеВвода("РазмерЕжемесячногоДоходаСозаемщик"+ЧислоСозаемщиков, ГруппаРазмерЕжемесячногоДохода, Новый ОписаниеТипов("Число",,,КЧ), 16);
	//ЭлементРазмерЕжемесячногоДохода.УстановитьДействие("ПриИзменении", "РеквизитФормыПриИзменении");
	//ЭлементРазмерЕжемесячногоДохода.ЦветФона = WebЦвета.Роса;


	ТаблицаКоманд = ДополнитьСтруктуру(КомандыСтруктураБазовые);
	Для Каждого Стр Из ТаблицаКоманд Цикл
		Если Стр.Ключ = "КомандаЖК" ИЛИ Стр.Ключ = "КомандаФаза" ИЛИ Стр.Ключ = "КомандаКорпус" Тогда
			Продолжить;
		КонецЕсли;
			Если Стр.Ключ = "КомандаФормаПодтвержденияДоходов" Тогда
			ГруппаРазмерЕжемесячногоДохода = ДобавитьГруппу(НомерГруппы, ГруппаПраво,"ГруппаРазмерЕжемесячногоДоходаСозаемщик"+ЧислоСозаемщиков, "Размер ежемесячного дохода (чистый)",,ЦветФона);
			КЧ = Новый КвалификаторыЧисла(15,2);
			ЭлементРазмерЕжемесячногоДохода = ДобавитьПолеВвода("РазмерЕжемесячногоДоходаСозаемщик"+ЧислоСозаемщиков, ГруппаРазмерЕжемесячногоДохода, Новый ОписаниеТипов("Число",,,КЧ), 16);
			ЭлементРазмерЕжемесячногоДохода.УстановитьДействие("ПриИзменении", "РеквизитФормыПриИзменении");
			ЭлементРазмерЕжемесячногоДохода.ЦветФона = WebЦвета.Роса;
		КонецЕсли;
		
		ГруппаДоб = ?(Стр.Ключ = "КомандаПол" ИЛИ Стр.Ключ = "КомандаГражданствоРФ" ИЛИ Стр.Ключ = "КомандаРегистрацияРФ" ИЛИ Стр.Ключ = "КомандаФинансовыеОбязательства" ИЛИ Стр.Ключ = "КомандаНаличиеИждивенцев" ИЛИ Стр.Ключ = "КомандаСемейноеПоложение" ИЛИ Стр.Ключ = "КомандаМатеринскийКапиталВПВ", ГруппаЛево, ГруппаПраво);
		
		Группа = ДобавитьГруппу(НомерГруппы, ГруппаДоб,"Группа"+Стр.Ключ +"Созаемщик"+ЧислоСозаемщиков, Стр.Синоним,,ЦветФона,Истина,Истина,ОтображениеОбычнойГруппы.Нет);
		ГруппаСтрелки = ДобавитьГруппу(НомерГруппы, Группа,"Группа"+Стр.Ключ+ "Стрелки"+ЧислоСозаемщиков, "",,ЦветФона,Истина,Ложь);
		ГруппаВлево = ДобавитьГруппу(НомерГруппы, ГруппаСтрелки,"ГруппаВлево"+Стр.Ключ+ЧислоСозаемщиков, "",,ЦветФона,,Ложь);
		ГруппаВправо = ДобавитьГруппу(НомерГруппы, ГруппаСтрелки,"ГруппаВправо"+Стр.Ключ+ЧислоСозаемщиков, "",,ЦветФона,Ложь);
		Родитель = ДобавитьГруппу(НомерГруппы, Группа,"Родитель"+Стр.Ключ+ЧислоСозаемщиков, "",,ЦветФона,Истина);
		Если Стр.Ключ ="КомандаФинансовыеОбязательства"  Тогда
			Родитель.РастягиватьПоГоризонтали = Ложь;
			Элемент = ДобавитьПолеВвода("ФинансовыеОбязательстваСуммаСозаемщик"+ЧислоСозаемщиков, Группа, Новый ОписаниеТипов("Число",,,КЧ), 16);
			Элемент.УстановитьДействие("ПриИзменении", "РеквизитФормыПриИзменении");
			Если Объект.ДанныеОЗаемщиках.Количество()>ЧислоСозаемщиков Тогда
			Элемент.Видимость = ?(Объект.ДанныеОЗаемщиках[ЧислоСозаемщиков].ФинансовыеОбязательства=КлючевыеКнопки.КнопкаДаФинансовыеОбязательства,Истина, Ложь);
			Иначе
			Элемент.Видимость = Ложь;
		КонецЕсли;
		КонецЕсли;

		Если Стр.Ключ ="КомандаНаличиеЗПКартыБанка"  Тогда
			Родитель.РастягиватьПоГоризонтали = Ложь;
			Элемент = ДобавитьПолеВвода("БанкЭмитентСозаемщик"+ЧислоСозаемщиков, Группа, Новый ОписаниеТипов("СправочникСсылка.Банки"));
			Элемент.РастягиватьПоГоризонтали = Ложь;
			Элемент.УстановитьДействие("ПриИзменении", "РеквизитФормыПриИзменении");
			Если Объект.ДанныеОЗаемщиках.Количество()>ЧислоСозаемщиков Тогда
			Элемент.Видимость = ?(Объект.ДанныеОЗаемщиках[ЧислоСозаемщиков].БанкЭмитент=КлючевыеКнопки.КнопкаДаФинансовыеОбязательства,Истина, Ложь);
			Иначе
			Элемент.Видимость = Ложь;
		КонецЕсли;

		Элемент.ЦветФона = WebЦвета.Роса;
		КонецЕсли;
	КонецЦикла;

	НовыйЭлемент = Элементы.Добавить("кнДалееГруппаСозаемщик" + ЧислоСозаемщиков, Тип("КнопкаФормы"), ГруппаПраво);
	НовыйЭлемент.Заголовок = "Далее";
	НовыйЭлемент.ИмяКоманды = "Далее";
	НовыйЭлемент.Картинка = БиблиотекаКартинок.Вперед;
	НовыйЭлемент.Отображение = ОтображениеКнопки.КартинкаИТекст;
	НовыйЭлемент.ЦветФона  	 = Новый Цвет(79, 255, 118);
	НовыйЭлемент.ЦветТекста  = Новый Цвет(0, 0, 0);
	НовыйЭлемент.ЦветРамки 	 = Новый Цвет(9, 179, 53);
	НовыйЭлемент.Шрифт       = Новый Шрифт(ШрифтыСтиля.КрупныйШрифтТекста);	
	НовыйЭлемент.Ширина = 18;

	ЭтаФорма.ТекущийЭлемент = НоваяСтраница;

КонецПроцедуры

&НаСервере
Функция ДополнитьСтруктуру(КомандыСтруктураБазовые)
	
	Таблица = Новый ТаблицаЗначений;
	Таблица.Колонки.Добавить("Ключ");
	Таблица.Колонки.Добавить("Значение");
	Таблица.Колонки.Добавить("Порядок", Новый ОписаниеТипов("Число"));
	Таблица.Колонки.Добавить("Синоним");
	
	Для Каждого Стр Из КомандыСтруктураБазовые Цикл
		СтрокаТаблицы = Таблица.Добавить();
		ЗаполнитьЗначенияСвойств(СтрокаТаблицы, Стр);
		Если Стр.Ключ = "КомандаПол" Тогда
			СтрокаТаблицы.Синоним = "Пол";
			СтрокаТаблицы.Порядок = 4;
		ИначеЕсли Стр.Ключ = "КомандаФинансовыеОбязательства" Тогда
			СтрокаТаблицы.Синоним = "Наличие финансовых обязательств, ежемесячно руб";
			СтрокаТаблицы.Порядок = 3;
		ИначеЕсли Стр.Ключ = "КомандаГражданствоРФ" Тогда
			СтрокаТаблицы.Синоним = "Гражданство РФ";
			СтрокаТаблицы.Порядок = 5;
		ИначеЕсли Стр.Ключ = "КомандаРегистрацияРФ" Тогда
			СтрокаТаблицы.Синоним = "Регистрация РФ";
			СтрокаТаблицы.Порядок = 6;
		ИначеЕсли Стр.Ключ = "КомандаМатеринскийКапиталВПВ" Тогда
			СтрокаТаблицы.Синоним = "Материнский капитал в ПВ";
			СтрокаТаблицы.Порядок = 9;
		ИначеЕсли Стр.Ключ = "КомандаСемейноеПоложение" Тогда
			СтрокаТаблицы.Синоним = "Семейное положение";
			СтрокаТаблицы.Порядок = 1;
		ИначеЕсли Стр.Ключ = "КомандаНаличиеИждивенцев" Тогда
			СтрокаТаблицы.Синоним = "Наличие иждивенцев";
			СтрокаТаблицы.Порядок = 2;
		ИначеЕсли Стр.Ключ = "КомандаКатегорияЗанятости" Тогда
			СтрокаТаблицы.Синоним = "Категория занятости";
			СтрокаТаблицы.Порядок = 10;
		ИначеЕсли Стр.Ключ = "КомандаСтажТекущий" Тогда
			СтрокаТаблицы.Синоним = "Стаж на текущем месте работы, месяцев";
			СтрокаТаблицы.Порядок = 11;
		ИначеЕсли Стр.Ключ = "КомандаСтажОбщий" Тогда
			СтрокаТаблицы.Синоним = "Общий трудовой стаж";
			СтрокаТаблицы.Порядок = 12;
		ИначеЕсли Стр.Ключ = "КомандаФормаПодтвержденияДоходов" Тогда
			СтрокаТаблицы.Синоним = "Форма подтверждения доходов";
			СтрокаТаблицы.Порядок = 13;
		ИначеЕсли Стр.Ключ = "КомандаНаличиеЗПКартыБанка" Тогда
			СтрокаТаблицы.Синоним = "Наличие ЗП карты банка";
			СтрокаТаблицы.Порядок = 14;
		//ИначеЕсли Стр.Ключ = "КомандаСтрахованиеЖизни" Тогда
		//	СтрокаТаблицы.Синоним = "Страхование жизни";
		//	СтрокаТаблицы.Порядок = 15;
		Иначе
			СтрокаТаблицы.Порядок = 999;
			СтрокаТаблицы.Синоним = Стр.Ключ;
		КонецЕсли;
	КонецЦикла;
	
	Таблица.Сортировать("Порядок Возр");
	
	Возврат Таблица;
	
КонецФункции

&НаСервере
Функция ДобавитьПолеВвода(Имя, Родитель, ОписаниеТипов, Ширина=0)
	
	нРеквизиты = Новый Массив;
	Реквизит = Новый РеквизитФормы(Имя, ОписаниеТипов, , "", Ложь);
	нРеквизиты.Добавить(Реквизит);
	Попытка
		ИзменитьРеквизиты(нРеквизиты);
	Исключение
	КонецПопытки;
	
	НовыйЭлемент = Элементы.Добавить(Имя, Тип("ПолеФормы"), Родитель);
	НовыйЭлемент.Вид = ВидПоляФормы.ПолеВвода;
	НовыйЭлемент.ПутьКДанным = Имя;
	НовыйЭлемент.РастягиватьПоГоризонтали = Ширина=0;
	НовыйЭлемент.ПоложениеЗаголовка = ПоложениеЗаголовкаЭлементаФормы.Нет;
	НовыйЭлемент.Ширина = Ширина;
	
	ДобавленныеЭлементы.Добавить(НовыйЭлемент.Имя);
	Возврат НовыйЭлемент;
	
КонецФункции

&НаСервере
Функция ДобавитьГруппу(НомерГруппы=1, Родитель, ИмяГруппы, ЗаголовокГруппы, РазмерШрифта=12, ЦветФона=Неопределено, ГоризонтальнаяГруппировка =Ложь, Растягивать =Истина, Отображение=Неопределено)
	
	Если ЦветФона=Неопределено Тогда
		ЦветФона = Новый Цвет(255,255,255);
	КонецЕсли;
	
	НоваяГруппа = Элементы.Добавить(ИмяГруппы,Тип("ГруппаФормы"),Родитель);
	НоваяГруппа.Вид = ВидГруппыФормы.ОбычнаяГруппа;
	НоваяГруппа.Заголовок = ЗаголовокГруппы;
	НоваяГруппа.ШрифтЗаголовка = Новый Шрифт(ШрифтыСтиля.КрупныйШрифтТекста);//,,РазмерШрифта);
	НоваяГруппа.ЦветФона = ЦветФона;
	НоваяГруппа.Отображение = ?(Отображение=Неопределено,ОтображениеОбычнойГруппы.Нет, Отображение);
	НоваяГруппа.Группировка = ?(ГоризонтальнаяГруппировка, ГруппировкаПодчиненныхЭлементовФормы.Горизонтальная,ГруппировкаПодчиненныхЭлементовФормы.Вертикальная);   
	НоваяГруппа.РастягиватьПоГоризонтали = Растягивать;
	НоваяГруппа.Отображение = ?(Отображение=Неопределено,ОтображениеОбычнойГруппы.Нет, Отображение);
	НоваяГруппа.Ширина = Ширина;
	Если ЗаголовокГруппы="" Тогда
		НоваяГруппа.ОтображатьЗаголовок = Ложь;	     
	КонецЕсли;
	НоваяГруппа.ГоризонтальныйИнтервал = ИнтервалМеждуЭлементамиФормы.Половинный;
	НоваяГруппа.ВертикальныйИнтервал = ИнтервалМеждуЭлементамиФормы.Половинный;
	НомерГруппы = НомерГруппы+1;
	ДобавленныеЭлементы.Добавить(НоваяГруппа.Имя);
	
	Возврат НоваяГруппа;

КонецФункции

&НаКлиенте
Процедура ПервоначальныйВзносРубПриИзменении(Элемент)
	ОтобразитьПредупреждениеБаза();
	ОпределитьПроцентПВ();
КонецПроцедуры

&НаКлиенте
Процедура ОпределитьПроцентПВ()
	
	Если Объект.СтоимостьКвартирыРуб = 0 Тогда
		Объект.ПервоначальныйВзносПроцент = 0;
	Иначе
		Объект.ПервоначальныйВзносПроцент = 100*Объект.ПервоначальныйВзносРуб/Объект.СтоимостьКвартирыРуб;
	КонецЕсли;
	Объект.СуммаКредитаРуб = Объект.СтоимостьКвартирыРуб - Объект.ПервоначальныйВзносРуб;

КонецПроцедуры

&НаКлиенте
Процедура СтоимостьКвартирыРубПриИзменении(Элемент)
	ОтобразитьПредупреждениеБаза();
	ОпределитьПроцентПВ();
КонецПроцедуры

&НаКлиенте
Процедура ПервоначальныйВзносПроцентПриИзменении(Элемент)
	ОтобразитьПредупреждениеБаза();
	Объект.ПервоначальныйВзносРуб = Объект.СтоимостьКвартирыРуб*Объект.ПервоначальныйВзносПроцент/100;
	Объект.СуммаКредитаРуб = Объект.СтоимостьКвартирыРуб - Объект.ПервоначальныйВзносРуб;
КонецПроцедуры

&НаСервере
Функция СписокПроектовГруппы()
	
	МассивПроектов = Новый Массив;
	Если ТипЗнч(Объект.ЖК) = Тип("СправочникСсылка.Проекты") Тогда
		МассивПроектов.Добавить(Объект.ЖК);
		Возврат МассивПроектов;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	МультикалькуляторГруппыПроектов.Проект
		|ИЗ
		|	РегистрСведений.МультикалькуляторГруппыПроектов КАК МультикалькуляторГруппыПроектов
		|ГДЕ
		|	МультикалькуляторГруппыПроектов.Активен
		|	И МультикалькуляторГруппыПроектов.ГруппаПроектов = &Группа";
	
	Запрос.УстановитьПараметр("Группа", Объект.ЖК);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		МассивПроектов.Добавить(ВыборкаДетальныеЗаписи.Проект);
	КонецЦикла;
	
	Возврат МассивПроектов;
	
КонецФункции

&НаСервере
Процедура ВыполнитьРасчетНаСервере(ЧислоСозаемщиков, КоличествоНеПройденныхСФ, БанкиДобавленныеВручную)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ОбъектыСтроительства.Ссылка КАК ОС
		|ПОМЕСТИТЬ ВТ_ОС_По_Проектам
		|ИЗ
		|	Справочник.ОбъектыСтроительства КАК ОбъектыСтроительства
		|ГДЕ
		|	ОбъектыСтроительства.Проект В(&Проект)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	СтопФакторыБанковСрезПоследних.УсловиеКредитования КАК СтопФактор,
		|	ЕСТЬNULL(СтопФакторыБанковСрезПоследних.Значение, НЕОПРЕДЕЛЕНО) КАК Значение,
		|	АккредитацияОбъектовСтроительстваВБанкахСрезПоследних.Банк КАК Банк,
		|	АккредитацияОбъектовСтроительстваВБанкахСрезПоследних.Банк.Наименование КАК БанкНаименование,
		|	СтопФакторыБанковСрезПоследних.Группа КАК Группа,
		|	ВТ_ОС_По_Проектам.ОС.Проект КАК Проект
		|ИЗ
		|	РегистрСведений.АккредитацияОбъектовСтроительстваВБанках.СрезПоследних(
		|			&Дата,
		|			ОбъектСтроительства.Фаза = &Фаза
		|				И ВЫБОР
		|					КОГДА &Корпус = ЗНАЧЕНИЕ(Справочник.ОбъектыСтроительства.ПустаяСсылка)
		|						ТОГДА ОбъектСтроительства В
		|								(ВЫБРАТЬ
		|									ВТ_ОС_По_Проектам.ОС КАК ОС
		|								ИЗ
		|									ВТ_ОС_По_Проектам КАК ВТ_ОС_По_Проектам)
		|					ИНАЧЕ ОбъектСтроительства = &Корпус
		|				КОНЕЦ) КАК АккредитацияОбъектовСтроительстваВБанкахСрезПоследних
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СтопФакторыБанков.СрезПоследних(&Дата, ) КАК СтопФакторыБанковСрезПоследних
		|		ПО АккредитацияОбъектовСтроительстваВБанкахСрезПоследних.Банк = СтопФакторыБанковСрезПоследних.ИпотечныйБанк
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_ОС_По_Проектам КАК ВТ_ОС_По_Проектам
		|		ПО АккредитацияОбъектовСтроительстваВБанкахСрезПоследних.ОбъектСтроительства = ВТ_ОС_По_Проектам.ОС
		|ГДЕ
		|	ЕСТЬNULL(СтопФакторыБанковСрезПоследних.Активен, ИСТИНА) = ИСТИНА
		|	И АккредитацияОбъектовСтроительстваВБанкахСрезПоследних.Аккредитация
		|
		|УПОРЯДОЧИТЬ ПО
		|	БанкНаименование
		|ИТОГИ ПО
		|	Банк";
	
	
	Запрос.УстановитьПараметр("Дата", ТекущаяДата());
	Запрос.УстановитьПараметр("Проект", СписокПроектовГруппы());
	Запрос.УстановитьПараметр("Фаза", Объект.Фаза);
	//++ Юкаев Роман 20180201 ( //
	Запрос.УстановитьПараметр("Корпус", Объект.Корпус);
	//-- Юкаев Роман 20180201 )
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаБанк = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	ПрохождениеСтопФакторов = Новый ТаблицаЗначений;
	ПрохождениеСтопФакторов.Колонки.Добавить("СтопФактор");
	ПрохождениеСтопФакторов.Колонки.Добавить("Значение");
	ПрохождениеСтопФакторов.Колонки.Добавить("Созаемщик");
	ПрохождениеСтопФакторов.Колонки.Добавить("Результат");
	ПрохождениеСтопФакторов.Колонки.Добавить("Банк");
	ПрохождениеСтопФакторов.Колонки.Добавить("Группа");
	ПрохождениеСтопФакторов.Колонки.Добавить("РезультатГруппы");


	МассивБанков = Новый Массив;
	
	Пока ВыборкаБанк.Следующий() Цикл
		ВыборкаДетальныеЗаписи = ВыборкаБанк.Выбрать();
		Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
			Для i=0 По ЧислоСозаемщиков Цикл
			ПроверитьЗаемшиковПоСтопФактору(ПрохождениеСтопФакторов,i,ВыборкаДетальныеЗаписи);
			КонецЦикла;
		КонецЦикла;
	МассивБанков.Добавить(ВыборкаБанк.Банк);
	КонецЦикла;
	//Для Каждого эл из БанкиДобавленныеВручную Цикл
	//	МассивБанков.Добавить(Эл);
	//КонецЦикла;
	
	СформироватьТаблицуСписокБанков(ПрохождениеСтопФакторов, МассивБанков, КоличествоНеПройденныхСФ, БанкиДобавленныеВручную);
	
	Объект.СтопФакторы.Загрузить(ПрохождениеСтопФакторов);
	Объект.СтопФакторы.Сортировать("Созаемщик,Группа  Возр");

	
КонецПроцедуры

&НаСервере
Функция ВернутьСписокБанков()
	
	Отбор = Новый Структура("Выбор", Истина);
	Банки = Новый Массив;
	Список = Объект.СписокБанков.НайтиСтроки(Отбор);
	Для Каждого Стр Из Список Цикл
	Банки.Добавить(Стр.Банк);
	КонецЦикла;
	Возврат Банки;

КонецФункции

&НаСервере
Процедура СформироватьТаблицуСписокБанков(ПрохождениеСтопФакторов, МассивБанков, КоличествоНеПройденныхСФ, БанкиДобавленныеВручную)
	
	Объект.СписокБанков.Очистить();
	Отбор = Новый Структура("Банк, Результат, Созаемщик",,Ложь,0);
	Для Каждого Стр Из МассивБанков Цикл
		Отбор.Банк = Стр;
		БанкНеПодошел = БанкНеПодошел(ПрохождениеСтопФакторов, Стр, КоличествоНеПройденныхСФ);
		Если НЕ БанкНеПодошел Тогда
			НовСтр = Объект.СписокБанков.Добавить();
			НовСтр.Банк = Стр;
		КонецЕсли;
	КонецЦикла;
	
	Для Каждого Эл из БанкиДобавленныеВручную Цикл
		НовСтр = Объект.СписокБанков.Добавить();
		НовСтр.Банк = Эл;
		НовСтр.ДобавленВРучную = Истина;
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Функция БанкНеПодошел(ПрохождениеСтопФакторов, Банк, КоличествоНеПройденныхСФ)
	
	ЧислоСозаемщиков = Объект.ДанныеОЗаемщиках.Количество()-1;
	Неподошел = Ложь;
	
	Для i = 0 По ЧислоСозаемщиков Цикл
		
		Отбор = Новый Структура("Банк, Созаемщик", Банк,i);
		Отбор2 = Новый Структура("Банк, Созаемщик, Группа, Результат", Банк,i);
		ЧастьБанкСозаемщик = ПрохождениеСтопФакторов.НайтиСтроки(Отбор);
		ПроверенныеГруппы = Новый Массив;
		Для Каждого Стр Из ЧастьБанкСозаемщик Цикл
			Стр.РезультатГруппы = ?(НЕ ЗначениеЗаполнено(Стр.РезультатГруппы),Истина,Стр.РезультатГруппы);
			Если ПроверенныеГруппы.Найти(Стр.Группа)<>Неопределено Тогда
				Продолжить;
			КонецЕсли;
			Группа = Стр.Группа;
			Если Группа = 0 Тогда
				Если Стр.Результат = Ложь Тогда
					Если i=0 Или Объект.УчитыватьДанныеСозаемщиков Тогда
						Неподошел =  Истина;
					КонецЕсли;
					КоличествоНеПройденныхСФ = КоличествоНеПройденныхСФ+1;
					Стр.РезультатГруппы = Ложь;
				КонецЕсли;	
				Продолжить;
			КонецЕсли;   
			Отбор2.Группа = Группа;
			Отбор2.Результат = Истина;
			БанкиОтбора2 = ПрохождениеСтопФакторов.НайтиСтроки(Отбор2);
			БанкПодошел = БанкиОтбора2.Количество()>0;
			ПроверенныеГруппы.Добавить(Группа);
			Если НЕ БанкПодошел Тогда
				Отбор3 = Новый Структура("Банк, Созаемщик, Группа", Банк, i, Группа);
				БанкиОтбора3 = ПрохождениеСтопФакторов.НайтиСтроки(Отбор3);
				Для Каждого НеподошедшийБанк Из БанкиОтбора3 Цикл
					НеподошедшийБанк.РезультатГруппы = Ложь;
				КонецЦикла;
				КоличествоНеПройденныхСФ = КоличествоНеПройденныхСФ+1;
				Если i=0 Или Объект.УчитыватьДанныеСозаемщиков Тогда
					Неподошел =  Истина;
				КонецЕсли;
				
			КонецЕсли;			
		КонецЦикла;
		
	КонецЦикла;
	
	
	Возврат Неподошел;
	
КонецФункции

&НаСервере
Процедура ПроверитьЗаемшиковПоСтопФактору(ПрохождениеСтопФакторов,i, Выборка)
	Значение = Выборка.Значение;
	Если Значение= Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Результат = СтопФакторПрисутствуетУЗаемщика(Значение,i, Выборка);
	РезультатПрохождения = ПрохождениеСтопФакторов.Добавить();
	ЗаполнитьЗначенияСвойств(РезультатПрохождения, Выборка);
	РезультатПрохождения.Созаемщик = i;
	РезультатПрохождения.Результат = НЕ Результат;
		
КонецПроцедуры

&НаСервере
Функция СтопФакторПрисутствуетУЗаемщика(Значение, НомерСозаемщика, СтрокаТаблицы)
	
	ДокОбъект = РеквизитФормыВЗначение("Объект");
	Возврат ДокОбъект.СтопФакторПрисутствуетУЗаемщика(Значение, НомерСозаемщика, СтрокаТаблицы);

КонецФункции

&НаКлиенте
Процедура СделатьОсновным(Команда)
	
	ТекущиеДанные = Элементы.СписокБанков.ТекущиеДанные;
	Если ТекущиеДанные=Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ТекущийБанк = ТекущиеДанные.Банк;
	
	Для Каждого Стр Из Объект.СписокБанков Цикл
		Если Стр.Банк = ТекущийБанк Тогда 
			Стр.Основной = Истина;
			Стр.Выбор = Истина;
		Иначе
			Стр.Основной = Ложь;
		КонецЕсли;
	КонецЦикла;
	
	Для Каждого Стр Из Объект.Расчеты Цикл
		Стр.Сортировка = ?(Стр.Банк = ТекущийБанк, 0, 1);
		ПорядокБанка = Объект.СписокБанков.НайтиСтроки(Новый Структура("Банк", Стр.Банк));
		Для Каждого ПБ Из ПорядокБанка Цикл
			Стр.ПорядокБанка = ПБ.НомерСтроки;
			Прервать;
		КонецЦикла;
	КонецЦикла;
	Объект.Расчеты.Сортировать("Сортировка, ПорядокБанка, НомерСтроки Возр");
	ПодключитьОбработчикОжидания("ОпределитьДоступностьЭлементов",0.5,Истина);
	ОпределитьЗаполнениеПоЭтапам(2);

КонецПроцедуры

&НаСервере
Процедура Расчет2НаСервере()
	ДокОбъект = РеквизитФормыВЗначение("Объект");
	ДокОбъект.РассчитатьНаСервере(Объект.СтопФакторы.Выгрузить(), Объект.ДоступныеПрограммы.Выгрузить(), КорпусаИФазы.Выгрузить());
	ЗначениеВРеквизитФормы(ДокОбъект,"Объект");

	ПрименитьУсловноеОформление();
КонецПроцедуры

&НаКлиенте
Процедура Расчет2(Команда)
	Расчет2НаСервере();
	ОпределитьЗаполнениеПоЭтапам(3);
КонецПроцедуры

&НаСервере
Процедура ПрименитьУсловноеОформление()
	
	ЭтаФорма.УсловноеОформление.Элементы.Очистить();
	ЭлементУсловногоОформления = УсловноеОформление.Элементы.Добавить();
	ОформляемоеПоле = ЭлементУсловногоОформления.Поля.Элементы.Добавить();
	ОформляемоеПоле.Поле = Новый ПолеКомпоновкиДанных("Расчеты");
	ЭлементОтбора = ЭлементУсловногоОформления.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ЭлементОтбора.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Объект.Расчеты.Выбор");
	ЭлементОтбора.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	ЭлементОтбора.ПравоеЗначение = Ложь;
	ЭлементУсловногоОформления.Оформление.УстановитьЗначениеПараметра("ЦветТекста", WebЦвета.СеребристоСерый);
	
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Объект.ПереченьДокументов.Количество()=0 Тогда
		ПереченьДокументов = Документы.РасчетИпотеки.ВернутьСписокДокументов();
		Для Каждого Стр Из ПереченьДокументов Цикл
			НовДок = Объект.ПереченьДокументов.Добавить();
			НовДок.Документ = Стр;
			НовДок.Выбор = Ложь;		
		КонецЦикла;
		
	КонецЕсли;

	Если НЕ ЗначениеЗаполнено(Объект.Ссылка) Тогда
		Объект.Ответственный = Пользователи.ТекущийПользователь();
		//Элементы.УчитыватьДанныеОЗаемщикахДа.Пометка = Объект.УчитыватьДанныеОЗаемщикахДа;
		//Элементы.УчитыватьДанныеОЗаемщикахНет.Пометка = НЕ Объект.УчитыватьДанныеОЗаемщикахДа;
	КонецЕсли;

	ПрименитьУсловноеОформление();
	
КонецПроцедуры

&НаКлиенте
Процедура РасчетыВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	ТекДанные = Элементы.Расчеты.ТекущиеДанные;
	Если ЗначениеЗаполнено(ТекДанные.Описание) Тогда
		Сообщить(ТекДанные.Описание);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ИнфоСтопФакторы(Команда)
	
	ИнфоФорма = ПолучитьФорму("Документ.РасчетИпотеки.Форма.ИнфоПоСтопФакторам", Новый Структура("Ссылка", Объект.Ссылка), ЭтаФорма);
	ИнфоФорма.Открыть();
	
КонецПроцедуры

&НаКлиенте
Процедура ДоступныеПрограммыВыборПриИзменении(Элемент)
	ТекДанные = Элементы.ДоступныеПрограммы.ТекущиеДанные;
	Если ТекДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Отбор = Новый Структура("Банк, Программа", ТекДанные.Банк, ТекДанные.Программа);
	НС = Объект.Расчеты.НайтиСтроки(Отбор);
	Для Каждого Стр Из НС Цикл
		Если Стр.МинимальныйДоход > Стр.СовокупныйДоход Тогда
			Стр.Выбор = Ложь;
		Иначе
			Стр.Выбор = ТекДанные.Выбор;
		КонецЕсли;
	КонецЦикла;
	ОпределитьЗаполнениеПоЭтапам(3);
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьСписокБанков(Команда)
	ДействиеОбновитьСписокБанков();
	НовСтраница = Элементы.ГруппаРасчет;
	Элементы.Группа1.ТекущаяСтраница = НовСтраница;
	ЭтаФорма.ОбновитьОтображениеДанных();
КонецПроцедуры

//&НаСервере
//Процедура ПеречитатьНаСервереФорму()
//	ЭтаФорма.Прочитать();
//КонецПроцедуры

&НаКлиенте
Процедура ДействиеОбновитьСписокБанков()
	
	ИсходныйОсновной = Неопределено;
	ИсходныеБанки = Новый Массив;
	БанкиДобавленныеВручную = Новый Массив;
	Для Каждого Стр Из Объект.СписокБанков Цикл
		Если Стр.Выбор Тогда
			ИсходныеБанки.Добавить(Стр.Банк);
			Если Стр.Основной Тогда
				ИсходныйОсновной = Стр.Банк;
			КонецЕсли;
		КонецЕсли;
		Если Стр.ДобавленВРучную Тогда
			БанкиДобавленныеВручную.Добавить(Стр.Банк);
		КонецЕсли;
	КонецЦикла;
	
	ОтобразитьПредупреждениеБаза(Ложь);
	Элементы.ГруппаДоступныеБанки.Доступность = Истина;
	КоличествоНепройденныхСФ = 0;
	ВыполнитьРасчетНаСервере(ЧислоСозаемщиков, КоличествоНепройденныхСФ, БанкиДобавленныеВручную);
	Записать();
	ЭтаФорма.Прочитать();

	
	ПодключитьОбработчикОжидания("ОпределитьДоступностьЭлементов",0.3,Истина);
	Элементы.СписокБанковСтопИнфо.Заголовок = "Стоп-факторы ("+ КоличествоНепройденныхСФ+ ")";
	Если КоличествоНепройденныхСФ=0 Тогда
		Элементы.СписокБанковСтопИнфо.Картинка = БиблиотекаКартинок.ИнформацияПоНедоступнымПолям;
	Иначе
		Элементы.СписокБанковСтопИнфо.Картинка = БиблиотекаКартинок.Информация;
	КонецЕсли;
	
	Если КоличествоНепройденныхСФ>0 Тогда
	ИнфоСтопФакторы(Неопределено);	
	КонецЕсли;
	
	Для Каждого Стр Из Объект.СписокБанков Цикл
		Если ИсходныеБанки.Найти(Стр.Банк) <> Неопределено Тогда
			Стр.Выбор = Истина;
			Если Стр.Банк = ИсходныйОсновной Тогда
				Стр.Основной = Истина;
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	ИзмениласьБаза = Ложь;
	
КонецПроцедуры

&НаКлиенте
Процедура СписокБанковВыборПриИзменении(Элемент)
	
	Элементы.СписокБанков.ТекущиеДанные.Основной = Ложь;
	ОпределитьЗаполнениеПоЭтапам(2);
	ПодключитьОбработчикОжидания("ОпределитьДоступностьЭлементов",0.5,Истина);
	
КонецПроцедуры

&НаКлиенте
Процедура ОпределитьДоступностьЭлементов()
	
	СрокКредитаУказан = ЗначениеЗаполнено(Объект.СрокКредита1) ИЛИ ЗначениеЗаполнено(Объект.СрокКредита2) ИЛИ ЗначениеЗаполнено(Объект.СрокКредита3);
	Если НЕ СрокКредитаУказан Тогда
		Элементы.ГруппаДоступныеПрограммы.Доступность = Ложь;
		Элементы.ГруппаДоступныеБанки.Доступность = Ложь;
		Объект.ДоступныеПрограммы.Очистить();
		Объект.СписокБанков.Очистить();

		Возврат;
	Иначе
		Элементы.ГруппаДоступныеБанки.Доступность = Истина;
	КонецЕсли;
	Отбор = Новый Структура("Выбор", Истина);
	ВыбраныБанки = Объект.СписокБанков.НайтиСтроки(Отбор).Количество()>0;
	Если ВыбраныБанки И СрокКредитаУказан Тогда
		Элементы.ГруппаДоступныеПрограммы.Доступность = Истина;
		Элементы.ГруппаДоступныеПрограммы.ТолькоПросмотр = Ложь;
	Иначе
		Элементы.ГруппаДоступныеПрограммы.Доступность = Ложь;
		Объект.ДоступныеПрограммы.Очистить();
	КонецЕсли;

		Расчет2НаСервере();

	Если Объект.Расчеты.Количество()=0 Тогда
		Элементы.ГруппаПечать.Доступность=Ложь;
	Иначе
		Элементы.ГруппаПечать.Доступность=Истина;
	КонецЕсли;
	
	ОпределитьЗаполнениеПоЭтапам(2);
	ОпределитьЗаполнениеПоЭтапам(3);
	
КонецПроцедуры

&НаКлиенте
Процедура ОпределитьДоступностьЭлементовБезРасчета()
	
	СрокКредитаУказан = ЗначениеЗаполнено(Объект.СрокКредита1) ИЛИ ЗначениеЗаполнено(Объект.СрокКредита2) ИЛИ ЗначениеЗаполнено(Объект.СрокКредита3);
	Если НЕ СрокКредитаУказан Тогда
		Элементы.ГруппаДоступныеПрограммы.Доступность = Ложь;
		Элементы.ГруппаДоступныеБанки.Доступность = Ложь;
		Объект.ДоступныеПрограммы.Очистить();
		Объект.СписокБанков.Очистить();

		Возврат;
	Иначе
		Элементы.ГруппаДоступныеБанки.Доступность = Истина;
	КонецЕсли;
	Отбор = Новый Структура("Выбор", Истина);
	ВыбраныБанки = Объект.СписокБанков.НайтиСтроки(Отбор).Количество()>0;
	Если ВыбраныБанки И СрокКредитаУказан Тогда
		Элементы.ГруппаДоступныеПрограммы.Доступность = Истина;
		Элементы.ГруппаДоступныеПрограммы.ТолькоПросмотр = Ложь;
	Иначе
		Элементы.ГруппаДоступныеПрограммы.Доступность = Ложь;
		Объект.ДоступныеПрограммы.Очистить();
	КонецЕсли;
	Если Объект.Расчеты.Количество()=0 Тогда
		Элементы.ГруппаПечать.Доступность=Ложь;
	Иначе
		Элементы.ГруппаПечать.Доступность=Истина;
	КонецЕсли;
	
	ОпределитьЗаполнениеПоЭтапам(2);
	ОпределитьЗаполнениеПоЭтапам(3);
	
КонецПроцедуры

&НаКлиенте
Процедура БанкиСнятьВсеФлажки(Команда)
	
	Для Каждого Стр Из Объект.СписокБанков Цикл
		Стр.Выбор = Ложь;
		Стр.Основной = Ложь;
	КонецЦикла;
	
	ПодключитьОбработчикОжидания("ОпределитьДоступностьЭлементов",0.3,Истина);
	ОпределитьЗаполнениеПоЭтапам(2);
	
КонецПроцедуры

&НаКлиенте
Процедура БанкиУстановитьВсеФлажки(Команда)
	
	Для Каждого Стр Из Объект.СписокБанков Цикл
		Стр.Выбор = Истина;
	КонецЦикла;
	
	ПодключитьОбработчикОжидания("ОпределитьДоступностьЭлементов",0.3,Истина);
	ОпределитьЗаполнениеПоЭтапам(2);

КонецПроцедуры

&НаКлиенте
Процедура ПрограммыСнятьВсеФлажки(Команда)
	
	Для Каждого Стр Из Объект.ДоступныеПрограммы Цикл
		Стр.Выбор = Ложь;
	КонецЦикла;

	Для Каждого Стр Из Объект.Расчеты Цикл
		Стр.Выбор = Ложь;
	КонецЦикла;
	
	ОпределитьЗаполнениеПоЭтапам(3);
	
КонецПроцедуры

&НаКлиенте
Процедура ПрограммыУстановитьВсеФлажки(Команда)
	
	Для Каждого Стр Из Объект.ДоступныеПрограммы Цикл
		Стр.Выбор = Истина;
	КонецЦикла;
	
	Для Каждого Стр Из Объект.Расчеты Цикл
		Стр.Выбор = Истина;
	КонецЦикла;
	
	ОпределитьЗаполнениеПоЭтапам(3);

КонецПроцедуры

&НаКлиенте
Процедура СформироватьПФ()
	
	Записать();
	ВывестиОбластьТДНаСервере();
	
КонецПроцедуры

&НаСервере
Процедура ВывестиОбластьТДНаСервере()
	
	ТД.Очистить();
	ТД.ОриентацияСтраницы=ОриентацияСтраницы.Ландшафт;
	ТД.АвтоМасштаб = Истина;
	ТД.ПолеСлева =0;
	ТД.ПолеСправа =0;
	ТД.ПолеСверху = 0;
	ТД.ПолеСнизу =0;
	
	Область = Документы.РасчетИпотеки.СформироватьПФ(Объект.Ссылка);	
	ТД.Вывести(Область);   

КонецПроцедуры

&НаКлиенте
Процедура Группа1ПриСменеСтраницы(Элемент, ТекущаяСтраница)
	Если ТекущаяСтраница.Имя = "ГруппаПечать" Тогда
		СформироватьПФ();		
	ИначеЕсли ТекущаяСтраница.Имя = "ГруппаРасчет" Тогда
		ОтобразитьПредупреждение();
		ОпределитьЗаполнениеПоЭтапам();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОтобразитьПредупреждение()
	
	Если ИзмениласьБаза Тогда
	ПодключитьОбработчикОжидания("ДействиеОбновитьСписокБанков", 0.3, Истина);
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция ВернутьЦелое(знач Число)
	
	ЧислоЦел = Цел(Число);
	Число = ?(ЧислоЦел>Число, ЧислоЦел-1, ЧислоЦел);
	
	Возврат Число;

КонецФункции

&НаКлиенте
Процедура ОбработкаЗаписиНового(НовыйОбъект, Источник, СтандартнаяОбработка)
	Объект.Ответственный = ПользователиКлиентСервер.ТекущийПользователь();
КонецПроцедуры

&НаКлиенте
Процедура СуммаКредитаРубПриИзменении(Элемент)
	ОтобразитьПредупреждениеБаза();
КонецПроцедуры

&НаКлиенте
Процедура УстановитьСрок(Команда)
	
	ОтобразитьПредупреждениеБаза();
	ПараметрыДействия = СтрЗаменить(ЭтаФорма.ТекущийЭлемент.Имя, "_", Символы.ПС);
	УстановитьСрокКредита(Число(СтрПолучитьСтроку(ПараметрыДействия,2)),Число(СтрПолучитьСтроку(ПараметрыДействия,3)));
	ОпределитьЗаполнениеПоЭтапам(1);

КонецПроцедуры

&НаКлиенте
Процедура СрокКредитаПриИзменении(Элемент)
	ОтобразитьПредупреждениеБаза();
	ОпределитьЗаполнениеПоЭтапам(1);
КонецПроцедуры

&НаКлиенте
Процедура ОтобразитьПредупреждениеБаза(Видимость = Истина, Текст = "")
	
	ИзмениласьБаза = Истина;
	Если Текст = "" И ИзмениласьБаза Тогда
		Текст = "Нажмите кнопку";
	КонецЕсли;
	Элементы.Предупреждение.Заголовок = Текст;
	Элементы.ГруппаПредупреждение.Видимость = Видимость;
	Элементы.ГруппаПечать.Доступность = НЕ Видимость;
	
КонецПроцедуры

&НаКлиенте
Функция ЗаполненыДанныеОЗаемщиках()
	
	ДанныеЗаполнены = Истина;
	
	Для i=0 По ЧислоСозаемщиков Цикл
		ТекСозаемщик = Объект.ДанныеОЗаемщиках[i];
		Если Не (ЗначениеЗаполнено(ТекСозаемщик.ФИО) И ЗначениеЗаполнено(ТекСозаемщик.Пол) И ЗначениеЗаполнено(ТекСозаемщик.ДатаРождения) И ЗначениеЗаполнено(ТекСозаемщик.КоличествоПолныхЛет)
			И ЗначениеЗаполнено(ТекСозаемщик.ГражданствоРФ) И ЗначениеЗаполнено(ТекСозаемщик.РегистрацияРФ) И ЗначениеЗаполнено(ТекСозаемщик.СемейноеПоложение) И ЗначениеЗаполнено(ТекСозаемщик.НаличиеИждивенцев)
			И ЗначениеЗаполнено(ТекСозаемщик.КатегорияЗанятости) И ЗначениеЗаполнено(ТекСозаемщик.СтажТекущий) И ЗначениеЗаполнено(ТекСозаемщик.СтажОбщий) И ЗначениеЗаполнено(ТекСозаемщик.ФормаПодтвержденияДоходов)
			И ЗначениеЗаполнено(ТекСозаемщик.РазмерЕжемесячногоДохода) И ЗначениеЗаполнено(ТекСозаемщик.НаличиеЗПКартыБанка) И ЗначениеЗаполнено(ТекСозаемщик.ФинансовыеОбязательства)
			//И ЗначениеЗаполнено(ТекСозаемщик.СтрахованиеЖизни) 
			И ЗначениеЗаполнено(ТекСозаемщик.МатеринскийКапиталВПВ) ) Тогда
			ДанныеЗаполнены = Ложь;
			Прервать;
		КонецЕсли;			
		Если ТекСозаемщик.ФинансовыеОбязательства = КнопкаДаФинансовыеОбязательства И ТекСозаемщик.ФинансовыеОбязательстваСумма=0 Тогда
			ДанныеЗаполнены = Ложь;
			Прервать;
		КонецЕсли;			
	КонецЦикла;
		
	Возврат ДанныеЗаполнены;
	
КонецФункции

&НаКлиенте
Процедура ОпределитьЗаполнениеПоЭтапам(Этап=0)
	
	Если Этап=1 ИЛИ Этап=0 Тогда
		УсловиеВыполнено = ЗначениеЗаполнено(Объект.СрокКредита1) ИЛИ ЗначениеЗаполнено(Объект.СрокКредита2) ИЛИ ЗначениеЗаполнено(Объект.СрокКредита3);
		Если УсловиеВыполнено Тогда
			Элементы.Этап1.ЦветФона = Новый Цвет(31, 138, 255);
		Иначе
			Элементы.Этап1.ЦветФона = Новый Цвет(192, 192, 192);
		КонецЕсли;	
	КонецЕсли;
	
	Если Этап=2 ИЛИ Этап=0 Тогда
		Отбор = Новый Структура("Выбор", Истина);
		УсловиеВыполнено = Объект.СписокБанков.НайтиСтроки(Отбор).Количество()>0;
		Если УсловиеВыполнено Тогда
			Элементы.Этап2.ЦветФона = Новый Цвет(31, 138, 255);
		Иначе
			Элементы.Этап2.ЦветФона = Новый Цвет(192, 192, 192);
		КонецЕсли;	
	КонецЕсли;
	
	Если Этап=3 ИЛИ Этап=0 Тогда
		Отбор = Новый Структура("Выбор", Истина);
		УсловиеВыполнено = Объект.ДоступныеПрограммы.НайтиСтроки(Отбор).Количество()>0;
		Если УсловиеВыполнено Тогда
			Элементы.Этап3.ЦветФона = Новый Цвет(31, 138, 255);
		Иначе
			Элементы.Этап3.ЦветФона = Новый Цвет(192, 192, 192);
		КонецЕсли;	
	КонецЕсли;

	Если Этап=4 ИЛИ Этап=0 Тогда
		Отбор = Новый Структура("Выбор", Истина);
		УсловиеВыполнено = Объект.ПереченьДокументов.НайтиСтроки(Отбор).Количество()>0;
		Если УсловиеВыполнено Тогда
			Элементы.Этап4.ЦветФона = Новый Цвет(31, 138, 255);
		Иначе
			Элементы.Этап4.ЦветФона = Новый Цвет(192, 192, 192);
		КонецЕсли;	
	КонецЕсли;    	
	
КонецПроцедуры

&НаКлиенте
Процедура ПереченьДокументовВыборПриИзменении(Элемент)
	ОпределитьЗаполнениеПоЭтапам(4);
КонецПроцедуры

&НаКлиенте
Процедура ПереченьДокументовУстановитьВсеФлажки(Команда)
	
	Для Каждого Стр Из Объект.ПереченьДокументов Цикл
		Стр.Выбор = Истина;
	КонецЦикла;
	ОпределитьЗаполнениеПоЭтапам(4);

КонецПроцедуры

&НаКлиенте
Процедура ПереченьДокументовСнятьВсеФлажки(Команда)
	
	Для Каждого Стр Из Объект.ПереченьДокументов Цикл
		Стр.Выбор = Ложь;
	КонецЦикла;
	ОпределитьЗаполнениеПоЭтапам(4);
	
КонецПроцедуры

&НаКлиенте
Процедура Далее(Команда)
	ТекЭлемент = ЭтаФорма.ТекущийЭлемент;
	Для i=1 По 3 Цикл
	Родитель = ?(i=1, ТекЭлемент.Родитель, Родитель.Родитель);
	Если Родитель.Вид = ВидГруппыФормы.Страница Тогда
		Прервать;
	КонецЕсли;
	КонецЦикла;

	Если Найти(Родитель.Имя, "ГруппаСозаемщик") <> 0 Тогда
		НомерТекущейГруппы = ?(НАйти(Родитель.Имя, "ГруппаСозаемщикВложенная")<> 0, СтрЗаменить(Родитель.Имя, "ГруппаСозаемщикВложенная",""),СтрЗаменить(Родитель.Имя, "ДалееГруппаСозаемщик",""));
		НомерТекущейГруппы = Число (НомерТекущейГруппы);
		Если НомерТекущейГруппы<ЧислоСозаемщиков Тогда
			НовСтраница = Элементы.Группа1.ПодчиненныеЭлементы.Найти("ГруппаСозаемщик"+(НомерТекущейГруппы+1));
			Элементы.Группа1.ТекущаяСтраница = НовСтраница;
		Иначе
			НовСтраница = Элементы.Группа1.ПодчиненныеЭлементы.Найти("ГруппаРасчет");
			Элементы.Группа1.ТекущаяСтраница = НовСтраница;
			ОтобразитьПредупреждение();
		КонецЕсли;
	ИначеЕсли Родитель.Имя = "ГруппаДанныеПоОбъекту" Тогда
		НовСтраница = Элементы.Группа1.ПодчиненныеЭлементы.Найти("ГруппаСозаемщик0");
		Элементы.Группа1.ТекущаяСтраница = НовСтраница;
	ИначеЕсли Родитель.Имя = "ГруппаРасчет" Тогда
		НовСтраница = Элементы.Группа1.ПодчиненныеЭлементы.Найти("ГруппаПечать");
		Если НовСтраница.Видимость Тогда
			Элементы.Группа1.ТекущаяСтраница = НовСтраница;
			СформироватьПФ();
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ПечатьОбновить(Команда)
	СформироватьПФ();
КонецПроцедуры

&НаКлиенте
Процедура ПредупреждениеНажатие(Элемент)
	ОбновитьСписокБанков(Неопределено);
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьПереченьДокументов(Команда)
	
		ПереченьДокументов = ВернутьПереченьДокументов();
		Объект.ПереченьДокументов.Очистить();
		Для Каждого Стр Из ПереченьДокументов Цикл
			НовДок = Объект.ПереченьДокументов.Добавить();
			НовДок.Документ = Стр;
			НовДок.Выбор = Ложь;		
		КонецЦикла;
		
КонецПроцедуры
	
&НаСервереБезКонтекста
Функция ВернутьПереченьДокументов()
	
	Возврат  Документы.РасчетИпотеки.ВернутьСписокДокументов();
	
КонецФункции

&НаКлиенте
Процедура СписокБанковПриИзменении(Элемент)
	ПодключитьОбработчикОжидания("СортировкаРасчетов", 0.5, Истина);
КонецПроцедуры

&НаКлиенте
Процедура СортировкаРасчетов()
	
	Для Каждого Стр Из Объект.Расчеты Цикл
		ПорядокБанка = Объект.СписокБанков.НайтиСтроки(Новый Структура("Банк", Стр.Банк));
		Для Каждого ПБ Из ПорядокБанка Цикл
			Стр.ПорядокБанка = ПБ.НомерСтроки;
			Прервать;
		КонецЦикла;
	КонецЦикла;
	Объект.Расчеты.Сортировать("Сортировка, ПорядокБанка, НомерСтроки Возр");

КонецПроцедуры

&НаСервере
Процедура ТестОтборыНаСервере()
	НомерКорпуса = Неопределено;
	
	Отбор = Новый Структура("ОбъектСтроительства", Объект.Корпус);
	НС = КорпусаИФазы.НайтиСтроки(Отбор);
	Для Каждого Стр Из НС Цикл
		НомерКорпуса = Стр.НомерКорпуса;  
		Прервать;
	КонецЦикла;
	ДокОбъект = РеквизитФормыВЗначение("Объект");
	Результат = ДокОбъект.СхемаПроходитОтбор(Справочники.СхемыУсловийСтавки.НайтиПоКоду("000000011"),НомерКорпуса);
	Сообщить("" + Результат);

КонецПроцедуры


&НаКлиенте
Процедура ТестОтборы(Команда)
	ТестОтборыНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура ОтправитьПоПочте(Команда)
	
	ТипФайла = "PDF";
	ИмяФайлаВложения =  "расчет."+ ТипФайла;
	ПолноеИмяФайлаВложения	= КаталогВременныхФайлов() + ИмяФайлаВложения;
	ТД.Записать(ПолноеИмяФайлаВложения, ТипФайлаТабличногоДокумента.PDF);
	Outlook = Новый COMОбъект("Outlook.Application");
	
	Письмо = Outlook.CreateItem(0);
	НаименованиеЖК = ВернутьПолноеИмяПроекта(Объект.ЖК);
	НаименованиеКлиент = ЗнчРеквизита(ФИО,"Наименование");
	Письмо.Subject = "~~Расчет по ипотечному кредиту. Объект """ + НаименованиеЖК + """, клиент """ + СОКРЛП(НаименованиеКлиент) + """"; 
	Письмо.Body = "Добрый день.
				  |Как и договаривались, по итогу нашего разговора, направляю Вам анкеты, расчет и перечень документов.
				  |Прошу подтвердить получение письма.";
	
	Попытка
		Письмо.Attachments.Add(ПолноеИмяФайлаВложения);
	Исключение
	КонецПопытки; 
	                              
	Попытка
		Письмо.Display();
	Исключение
	КонецПопытки; 
	
	УдалитьФайлы(ПолноеИмяФайлаВложения);

КонецПроцедуры

&НаСервереБезКонтекста
Функция ЗнчРеквизита(Об, Рек)
	Возврат Об[Рек];
КонецФУнкции

&НаСервереБезКонтекста
Функция ВернутьПолноеИмяПроекта(ГП)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	МультикалькуляторГруппыПроектов.Проект.Наименование КАК Наименование
		|ИЗ
		|	РегистрСведений.МультикалькуляторГруппыПроектов КАК МультикалькуляторГруппыПроектов
		|ГДЕ
		|	МультикалькуляторГруппыПроектов.ГруппаПроектов = &ГП";
	
	Запрос.УстановитьПараметр("ГП", ГП);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		Возврат ВыборкаДетальныеЗаписи.Наименование;
	КонецЦикла;

	Возврат ГП.Наименование;	
	
КонецФункции

&НаКлиенте
Процедура СписокБанковБанкНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	//СтандартнаяОбработка = Ложь;
	МассивВозможныхБанков = ПолучитьВозможныеБанкиДляДобавления();
	Элементы.СписокБанковБанк.СписокВыбора.ЗагрузитьЗначения(МассивВозможныхБанков);
КонецПроцедуры

&НаСервере
Функция ПолучитьВозможныеБанкиДляДобавления()
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ОбъектыСтроительства.Ссылка КАК ОС
		|ПОМЕСТИТЬ ВТ_ОС_По_Проектам
		|ИЗ
		|	Справочник.ОбъектыСтроительства КАК ОбъектыСтроительства
		|ГДЕ
		|	ОбъектыСтроительства.Проект В(&Проект)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	АккредитацияОбъектовСтроительстваВБанкахСрезПоследних.Банк КАК Банк,
		|	АккредитацияОбъектовСтроительстваВБанкахСрезПоследних.Банк.Наименование КАК БанкНаименование,
		|	ВТ_ОС_По_Проектам.ОС.Проект КАК Проект
		|ИЗ
		|	РегистрСведений.АккредитацияОбъектовСтроительстваВБанках.СрезПоследних(&Дата, ОбъектСтроительства.Фаза = &Фаза) КАК АккредитацияОбъектовСтроительстваВБанкахСрезПоследних
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_ОС_По_Проектам КАК ВТ_ОС_По_Проектам
		|		ПО АккредитацияОбъектовСтроительстваВБанкахСрезПоследних.ОбъектСтроительства = ВТ_ОС_По_Проектам.ОС
		|ГДЕ
		|	АккредитацияОбъектовСтроительстваВБанкахСрезПоследних.Аккредитация
		|	И НЕ АккредитацияОбъектовСтроительстваВБанкахСрезПоследних.Банк В (&СписокИмеющихсяБанков)";
	
	
	Запрос.УстановитьПараметр("Дата", ТекущаяДата());
	Запрос.УстановитьПараметр("Проект", СписокПроектовГруппы());
	Запрос.УстановитьПараметр("Фаза", Объект.Фаза);
	Запрос.УстановитьПараметр("СписокИмеющихсяБанков", Объект.СписокБанков.Выгрузить().ВыгрузитьКолонку("Банк"));

	РезультатЗапроса = Запрос.Выполнить();
	
	Если НЕ РезультатЗапроса.Пустой() Тогда
		Возврат РезультатЗапроса.Выгрузить().ВыгрузитьКолонку("Банк");
	КонецЕсли;
	Возврат	Новый Массив;
	
КонецФункции

&НаКлиенте
Процедура СписокБанковБанкОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	ТекСтрока = Элементы.СписокБанков.ТекущиеДанные;
	Если ТекСтрока <> Неопределено Тогда
		ТекСтрока.ДобавленВРучную = Истина;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура СписокБанковПередУдалением(Элемент, Отказ)
	ТекСтрока = Элементы.СписокБанков.ТекущиеДанные;
	Если ТекСтрока <> Неопределено И НЕ ТекСтрока.ДобавленВРучную Тогда
		Отказ = Истина;
	КонецЕсли;

КонецПроцедуры

&НаСервере
Функция ДоступныеПрограммыБанкНачалоВыбораНаСервере(ДобавленныеВручную = Истина)
	Если ДобавленныеВручную Тогда
		Возврат Объект.СписокБанков.Выгрузить(Новый Структура("ДобавленВРучную", Истина)).ВыгрузитьКолонку("Банк");
	Иначе
		Возврат Объект.СписокБанков.Выгрузить().ВыгрузитьКолонку("Банк");
	КонецЕсли;
КонецФункции

&НаКлиенте
Процедура ДоступныеПрограммыБанкНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	Элементы.ДоступныеПрограммыБанк.СписокВыбора.ЗагрузитьЗначения(ДоступныеПрограммыБанкНачалоВыбораНаСервере());
	
КонецПроцедуры

&НаКлиенте
Процедура РасчетыБанкНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	Элементы.РасчетыБанк.СписокВыбора.ЗагрузитьЗначения(ДоступныеПрограммыБанкНачалоВыбораНаСервере(Ложь));	
		
КонецПроцедуры

&НаКлиенте
Процедура РасчетыПередУдалением(Элемент, Отказ)
	
	ТекСтрока = Элементы.Расчеты.ТекущиеДанные;
	Если ТекСтрока <> Неопределено Тогда
		МассивБанков = ДоступныеПрограммыБанкНачалоВыбораНаСервере();
		Если МассивБанков.Найти(ТекСтрока.Банк) = Неопределено Тогда
			Отказ = Истина;
		КонецЕсли;
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ДоступныеПрограммыПередУдалением(Элемент, Отказ)
	
	ТекСтрока = Элементы.ДоступныеПрограммы.ТекущиеДанные;
	Если ТекСтрока <> Неопределено Тогда
		МассивБанков = ДоступныеПрограммыБанкНачалоВыбораНаСервере();
		Если МассивБанков.Найти(ТекСтрока.Банк) = Неопределено Тогда
			Отказ = Истина;
		КонецЕсли;		
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура РасчетыПередНачаломИзменения(Элемент, Отказ)
	
	ТекСтрока = Элементы.Расчеты.ТекущиеДанные;
	Если ТекСтрока <> Неопределено Тогда
		МассивБанков = ДоступныеПрограммыБанкНачалоВыбораНаСервере(Ложь);
		Если ЗначениеЗаполнено(ТекСтрока.Банк) И МассивБанков.Найти(ТекСтрока.Банк) = Неопределено Тогда
			Отказ = Истина;
		КонецЕсли;
	КонецЕсли;	

КонецПроцедуры

&НаКлиенте
Процедура ДоступныеПрограммыПередНачаломИзменения(Элемент, Отказ)
	
	ТекСтрока = Элементы.ДоступныеПрограммы.ТекущиеДанные;
	Если ТекСтрока <> Неопределено Тогда
		МассивБанков = ДоступныеПрограммыБанкНачалоВыбораНаСервере();
		Если ЗначениеЗаполнено(ТекСтрока.Банк) И МассивБанков.Найти(ТекСтрока.Банк) = Неопределено Тогда
			Отказ = Истина;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

//++ Юкаев Роман 20180122 (
&НаСервереБезКонтекста
Функция ПолучитьДатуРождения(ФИОКлиента)
	Возврат ФИОКлиента.ДатаРождения;
КонецФункции

&НаСервереБезКонтекста
Функция ОпределитьГруппуПоПроекту(ЖК)
	
	Если ТипЗнч(ЖК) = Тип("СправочникСсылка.ГруппыПроектов") Тогда
		Возврат ЖК;
	КонецЕсли;
	
	ЗапросТ = Новый Запрос;
	ЗапросТ.Текст = 
		"ВЫБРАТЬ
		|	МультикалькуляторГруппыПроектов.ГруппаПроектов КАК ГруппаПроектов
		|ИЗ
		|	РегистрСведений.МультикалькуляторГруппыПроектов КАК МультикалькуляторГруппыПроектов
		|ГДЕ
		|	МультикалькуляторГруппыПроектов.Проект = &Проект
		|	И МультикалькуляторГруппыПроектов.Активен";
	
	ЗапросТ.УстановитьПараметр("Проект", ЖК);
	
	Результат = ЗапросТ.Выполнить();
	Если Результат.Пустой() Тогда
		Возврат Справочники.ГруппыПроектов.ПустаяСсылка();
	Иначе
		Выборка = Результат.Выбрать();
		Выборка.Следующий();
		Возврат Выборка.ГруппаПроектов;
	КонецЕсли;
	
КонецФункции
//-- Юкаев Роман 20180122 )

&НаКлиенте
Процедура УчитыватьДанныеОЗаемщиках(Команда)
	
	Объект.УчитыватьДанныеСозаемщиков = Команда.Имя = "УчитыватьДанныеОЗаемщикахДа";
	СнятьОтметкуСКоманды(?(НЕ Объект.УчитыватьДанныеСозаемщиков, "УчитыватьДанныеОЗаемщикахДа", "УчитыватьДанныеОЗаемщикахНет"));
	УстановитьОтметкуНаКоманду(?(Объект.УчитыватьДанныеСозаемщиков, "УчитыватьДанныеОЗаемщикахДа", "УчитыватьДанныеОЗаемщикахНет"));

КонецПроцедуры

&НаСервереБезКонтекста
функция ВернутьПараметрыРасчетаИпотекиПоБанку(Банк, СрокЗайма, ПроцентнаяСтавка, ПервоначальныйВзнос, СуммаКредита)
	
	СтруктураВозврата = Новый Структура;
	СтруктураВозврата.Вставить("СуммаПлатежа", 0);
	СтруктураВозврата.Вставить("МинимальныйДоход", 0);
	СтруктураВозврата.Вставить("СовокупныйДоход", 0);
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ ПЕРВЫЕ 1
	               |	БанкиВидыКредита.ШагРасчетный КАК ШагРасчетный,
	               |	БанкиВидыКредита.КоэффициентПлатежаКДоходу КАК КоэффициентПлатежаКДоходу,
	               |	БанкиВидыКредита.ШагКредитования КАК ШагКредитования
	               |ИЗ
	               |	Справочник.Банки.ВидыКредита КАК БанкиВидыКредита
	               |ГДЕ
	               |	БанкиВидыКредита.Ссылка = &Ссылка
	               |	И БанкиВидыКредита.ВидКредита = ЗНАЧЕНИЕ(Справочник.ВидыКредитов.ИпотечныйКредит)";
	Запрос.УстановитьПараметр("Ссылка", Банк);
	РезЗапроса = Запрос.Выполнить();
	Если Не РезЗапроса.Пустой() Тогда
		Стр = РезЗапроса.Выгрузить()[0];		
		ПС = ПроцентнаяСтавка/100/12; // ежемесячная процентная ставка
		Икс = POW(1+ПС,-(СрокЗайма - Стр.ШагРасчетный));	
		ЕжемесячныйПлатеж = СуммаКредита*ПС/(1-Икс);
		Если Стр.КоэффициентПлатежаКДоходу<>0 Тогда
			ЕжемесячныйДоход = ЕжемесячныйПлатеж/Стр.КоэффициентПлатежаКДоходу;
		Иначе	
			ЕжемесячныйДоход = ЕжемесячныйПлатеж/0.6/0.85;
		КонецЕсли;
		СтруктураВозврата.Вставить("СуммаПлатежа", ЕжемесячныйПлатеж);
		СтруктураВозврата.Вставить("МинимальныйДоход", ЕжемесячныйДоход);
	КонецЕсли;
	Возврат СтруктураВозврата;
	
КонецФункции

&НаКлиенте
Процедура РасчетыСрокКредитаПриИзменении(Элемент)
	
	ТекДанные = Элементы.Расчеты.ТекущиеДанные;
	Если ТекДанные <> Неопределено и ТекДанные.ПроцентнаяСтавка <> 0 и ТекДанные.СрокКредита Тогда
		РасчетПоСтроке = ВернутьПараметрыРасчетаИпотекиПоБанку(ТекДанные.Банк, ТекДанные.СрокКредита, ТекДанные.ПроцентнаяСтавка, Объект.ПервоначальныйВзносРуб, Объект.СуммаКредитаРуб);
		ТекДанные.СуммаПлатежа = РасчетПоСтроке.СуммаПлатежа;
		ТекДанные.МинимальныйДоход = РасчетПоСтроке.МинимальныйДоход;
		СовокупныйДоход = 0;//ТекДанные.СовокупныйДоход;
		Для i=0 По ?(Объект.УчитыватьДанныеСозаемщиков, Объект.ДанныеОЗаемщиках.Количество()-1, 0) Цикл
			СовокупныйДоход = СовокупныйДоход + Объект.ДанныеОЗаемщиках[i].РазмерЕжемесячногоДохода - Объект.ДанныеОЗаемщиках[i].ФинансовыеОбязательстваСумма;		
		КонецЦикла;
		ТекДанные.СовокупныйДоход = СовокупныйДоход;
	КонецЕсли;
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьДанныеПоЗаемщику(Клиент)
	
	СтруктураПараметров = Новый Структура("ДатаРождения, ПолныйЛет, Пол, ПолЧ, Гражданство, Гр, Регистрация, Рег", Клиент.ДатаРождения, ЧислоПолныхЛет(Клиент.ДатаРождения), "", "", "");
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ПараметрыПримененияСтавок_Значения.Ссылка КАК Ссылка,
		|	ПараметрыПримененияСтавок_Значения.Представление КАК Представление,
		|	ВЫБОР
		|		КОГДА ПараметрыПримененияСтавок_Значения.Владелец = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ПараметрыПримененияСтавок.Пол)
		|			ТОГДА 1
		|		КОГДА ПараметрыПримененияСтавок_Значения.Владелец = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ПараметрыПримененияСтавок.ГражданствоРФ)
		|			ТОГДА 2
		|		ИНАЧЕ 3
		|	КОНЕЦ КАК Поле1
		|ИЗ
		|	Справочник.ПараметрыПримененияСтавок_Значения КАК ПараметрыПримененияСтавок_Значения
		|ГДЕ
		|	ПараметрыПримененияСтавок_Значения.Владелец В (ЗНАЧЕНИЕ(ПланВидовХарактеристик.ПараметрыПримененияСтавок.Пол), ЗНАЧЕНИЕ(ПланВидовХарактеристик.ПараметрыПримененияСтавок.ГражданствоРФ), ЗНАЧЕНИЕ(ПланВидовХарактеристик.ПараметрыПримененияСтавок.РегистрацияРФ))
		|
		|УПОРЯДОЧИТЬ ПО
		|	ПараметрыПримененияСтавок_Значения.Сортировка,
		|	ПараметрыПримененияСтавок_Значения.Наименование";
	
	Результат = Запрос.Выполнить();
	
	Если Не Результат.Пустой() Тогда
		
		Выгрузка = Результат.Выгрузить();
		
		//Пол
		Отбор = Новый Структура("Поле1, Представление", 1, Строка(Клиент.Пол));
		СписокСтрок = Выгрузка.НайтиСтроки(Отбор);
		
		СтруктураПараметров.Пол = ?(ЗначениеЗаполнено(СписокСтрок), СписокСтрок[0].Ссылка, Справочники.ПараметрыПримененияСтавок_Значения.ПустаяСсылка());
		СтруктураПараметров.ПолЧ = Клиент.Пол = Перечисления.ПолФизическогоЛица.Мужской;
		
		//Гражданство
		Запрос = Новый Запрос;
		Запрос.Текст = 
			"ВЫБРАТЬ
			|	ВЫБОР
			|		КОГДА ГражданствоФизическихЛицСрезПоследних.Страна = ЗНАЧЕНИЕ(Справочник.СтраныМира.Россия)
			|			ТОГДА ИСТИНА
			|		ИНАЧЕ ЛОЖЬ
			|	КОНЕЦ КАК Страна
			|ИЗ
			|	РегистрСведений.ГражданствоФизическихЛиц.СрезПоследних(&Период, ФизическоеЛицо = &Клиент) КАК ГражданствоФизическихЛицСрезПоследних";
		
		Запрос.УстановитьПараметр("Клиент", Клиент);
		Запрос.УстановитьПараметр("Период", ТекущаяДата());
		
		Результат = Запрос.Выполнить();
		                                                               
		Если Результат.Пустой() Тогда
			СтруктураПараметров.Гражданство = Справочники.ПараметрыПримененияСтавок_Значения.ПустаяСсылка();
		Иначе
			Выборка = Результат.Выбрать();
			Выборка.Следующий();
			Отбор = Новый Структура("Поле1, Представление", 2, ?(Выборка.Страна, "Да", "Нет"));
			СписокСтрок = Выгрузка.НайтиСтроки(Отбор);
		
			СтруктураПараметров.Гражданство = ?(ЗначениеЗаполнено(СписокСтрок), СписокСтрок[0].Ссылка, Справочники.ПараметрыПримененияСтавок_Значения.ПустаяСсылка());
			СтруктураПараметров.Гр = ?(Выборка.Страна, 1, 2);
		КонецЕсли;
		
		//Регстрация
		СтруктураПараметров.Регистрация = Справочники.ПараметрыПримененияСтавок_Значения.ПустаяСсылка();
		СтруктураПараметров.Рег = 1;
	КонецЕсли;
	
	Возврат СтруктураПараметров;
	
КонецФункции

//++ Юкаев Роман 20180122 (
&НаСервереБезКонтекста
Функция ЧислоПолныхЛет(ДатаРождения)
	
	Если ДатаРождения = Дата(1,1,1) Тогда
		Возврат 0;
	КонецЕсли;
	
	ТекущаяДата = ТекущаяДата(); 
	
	ЧислоЛет = Год(ТекущаяДата) - Год(ДатаРождения); 
	
	Если Месяц(ТекущаяДата) < Месяц(ДатаРождения) Тогда 
		ЧислоЛет = ЧислоЛет - 1; 
	ИначеЕсли Месяц(ТекущаяДата) = Месяц(ДатаРождения) И День(ТекущаяДата) < День(ДатаРождения) Тогда 
		ЧислоЛет = ЧислоЛет - 1; 
	КонецЕсли; 
	
	Возврат ЧислоЛет;

КонецФункции


&НаКлиенте
Процедура РасчетыВсеФлажки(Команда)
	
	Для Каждого Строка Из Объект.Расчеты Цикл
		Строка.Выбор = Истина;
	КонецЦикла;
	
КонецПроцедуры


&НаКлиенте
Процедура РасчетыСнятьФлажки(Команда)
	
	Для Каждого Строка Из Объект.Расчеты Цикл
		Строка.Выбор = Ложь;
	КонецЦикла;
	
КонецПроцедуры


&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)
	//Вставить содержимое обработчика
КонецПроцедуры
//-- Юкаев Роман 20180122 )
