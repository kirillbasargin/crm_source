&НаКлиенте
Перем Группа;

&НаКлиенте
Процедура УсловияКредитованияЗначениеНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	СтандартнаяОбработка=Ложь;
	ПараметрыОтбора = Новый Структура("Владелец",Элементы.УсловияКредитования.ТекущиеДанные.УсловиеКредитования);
	ФормаВыбора = ПолучитьФорму("Справочник.ПараметрыПримененияСтавок_Значения.Форма.ФормаВыбораОдноЗначение",Новый Структура("Отбор", ПараметрыОтбора),Элемент);
	ФормаВыбора.Открыть();
КонецПроцедуры

&НаКлиенте
Процедура ДобавитьЭлемент(Команда)
	
	ТекДанные = Элементы.Дерево.ТекущиеДанные;
	
	Если ТекДанные = Неопределено  Тогда
		Элемент = Дерево.ПолучитьЭлементы().Добавить();	
	ИначеЕсли ТекДанные.Строка = Истина Тогда
		Элемент = Дерево.ПолучитьЭлементы().Добавить();	
	Иначе
		ТекЭлементы = ТекДанные.ПолучитьЭлементы();
		Элемент = ТекЭлементы.Добавить();
	КонецЕсли;
	
	Элемент.Строка = Истина;
	
КонецПроцедуры


&НаКлиенте
Процедура ДобавитьГруппу(Команда)
	
	Группа = Дерево.ПолучитьЭлементы().Добавить();	
	Группа.УсловиеКредитования = "Группа";
	
КонецПроцедуры


&НаКлиенте
Процедура ДеревоСтопФакторНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	
КонецПроцедуры


&НаКлиенте
Процедура ДеревоПередНачаломИзменения(Элемент, Отказ)
	
	ТекДанные = Элементы.Дерево.ТекущиеДанные;
	ЭлементСтопФактор = Элемент.ПодчиненныеЭлементы.ДеревоСтопФактор;
	
	Если ТекДанные.Строка  Тогда
            ЭлементСтопФактор.ОграничениеТипа = Новый ОписаниеТипов("ПланВидовХарактеристикСсылка.ПараметрыПримененияСтавок");
            ДанныеВыбора = ЭлементСтопФактор.ОграничениеТипа.ПривестиЗначение(ПредопределенноеЗначение("ПланВидовХарактеристик.ПараметрыПримененияСтавок.ПустаяСсылка"));      
		Иначе
		    ЭлементСтопФактор.ОграничениеТипа = Новый ОписаниеТипов("Строка");
            ДанныеВыбора = ЭлементСтопФактор.ОграничениеТипа.ПривестиЗначение(""); 	
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ДобавитьСтрокуВТЧ(Строка, Группа=0)
	
	СтрТЧ = Объект.УсловияКредитования.Добавить();
	СтрТЧ.УсловиеКредитования = Строка.УсловиеКредитования;
	СтрТЧ.Значение = Строка.Значение;
	СтрТЧ.Группа = Группа;
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)
	
	Объект.УсловияКредитования.Очистить();
	
	ДанныеДерева = Дерево.ПолучитьЭлементы();
	Группа= 0;
	Для Каждого Эл Из ДанныеДерева Цикл
		Если НЕ Эл.Строка Тогда
			Группа = Группа+1;
			СтрокиГруппы = Эл.ПолучитьЭлементы();
			Для Каждого Строка Из СтрокиГруппы Цикл
				ДобавитьСтрокуВТЧ(Строка,Группа);	
			КонецЦикла;
		Иначе
				ДобавитьСтрокуВТЧ(Эл);	
		КонецЕсли;                  
	КонецЦикла;

КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	НарисоватьДерево();
КонецПроцедуры

&НаКлиенте
Процедура НарисоватьДерево()
	
	Для Каждого Стр Из Объект.УсловияКредитования Цикл
		Если Стр.Группа = 0 Тогда
			ДобавитьЭлементСтрока(Дерево, Стр);
		Иначе
			Родитель = ОпределитьРодителя(Стр.Группа);
			ДобавитьЭлементСтрока(Родитель, Стр);
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ДобавитьЭлементСтрока(Родитель, Стр)
	
	Элемент = Родитель.ПолучитьЭлементы().Добавить();	
	ЗаполнитьЗначенияСвойств(Элемент, Стр);
	Элемент.Строка = Истина;
	
КонецПроцедуры

&НаКлиенте
Функция ОпределитьРодителя(НомерГруппы)
	ВерхнийУровень = Дерево.ПолучитьЭлементы();
	Родитель = Неопределено;
	
	Для Каждого Стр Из ВерхнийУровень Цикл
		Если Стр.Группа = НомерГруппы Тогда
			Родитель = Стр;
			Прервать;
		КонецЕсли;
	КонецЦикла;
	
	Если Родитель= Неопределено Тогда
		Родитель = Дерево.ПолучитьЭлементы().Добавить();	
		Родитель.УсловиеКредитования = "Группа";
		Родитель.Группа = НомерГруппы;
	КонецЕсли;
	
	Возврат Родитель;
КонецФункции

&НаКлиенте
Процедура Удалить(Команда)
	
	ТекДанные = Элементы.Дерево.ТекущиеДанные;
	Если ТекДанные = Неопределено  Тогда
		Возврат;	
	КонецЕсли;
	
	Дерево.ПолучитьЭлементы().Удалить(ТекДанные);
	
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	Если НЕ ЗначениеЗаполнено(Объект.ВидОперации) Тогда
	Объект.ВидОперации = Перечисления.ВидыОперацийСтопФакторы.Установка;
	КонецЕсли;
КонецПроцедуры
