
Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	
	//++ Юкаев Роман 20180425 (//
	//СнятьАктивностьПредыдущих();
	//
	//Если ВидОперации <> Перечисления.ВидыОперацийУсловияПримененияСтавок.Отмена Тогда
	//	СформироватьДвижения();
	//КонецЕсли;
	
	Движения.ИпотечныеСтавки.Записывать = Истина;
	Движения.ИпотечныеСтавки.Очистить();
	
	//снимаем активность предыдущих ставок
	Выборка = СформироватьВыборкуПоПредыдущимЗначениям();
	
	Если Выборка <> Неопределено Тогда
		Пока Выборка.Следующий() Цикл
			Движение = Движения.ИпотечныеСтавки.Добавить();
			ЗаполнитьЗначенияСвойств(Движение, Выборка,, "Активен");
			Движение.Активен = Ложь;
		КонецЦикла;
	КонецЕсли;
	
	Если ВидОперации <> Перечисления.ВидыОперацийУсловияПримененияСтавок.Отмена Тогда
		
		Для Каждого Стр Из ЗначенияСтавок Цикл
			Движение = Движения.ИпотечныеСтавки.Добавить();
			Движение.Активен = Истина;
			Движение.Активен1 = Истина;
			Движение.Банк = Банк;
			Движение.Группа = Стр.Группа;
			Движение.Параметр = Стр.Параметр;
			Движение.Период = ДатаРегистрации;
			Движение.ПрограммаКредитования = Программа;
			Движение.Расположение = Стр.Расположение;
			Движение.Ставка = Стр.Ставка;
			Движение.СхемаУсловийСтавок = СхемаУсловияПримененияСтавки;
			Движение.Тип = Стр.Тип;
		КонецЦикла;
	КонецЕсли;
	//-- Юкаев Роман 20180425 )
	
КонецПроцедуры

//++ Юкаев Роман 20180425 (//
Функция СформироватьВыборкуПоПредыдущимЗначениям()
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	&Дата КАК Период,
		|	ИпотечныеСтавкиСрезПоследних.НомерСтроки КАК НомерСтроки,
		|	ИпотечныеСтавкиСрезПоследних.Активность КАК Активность,
		|	ИпотечныеСтавкиСрезПоследних.Банк КАК Банк,
		|	ИпотечныеСтавкиСрезПоследних.Тип КАК Тип,
		|	ИпотечныеСтавкиСрезПоследних.Параметр КАК Параметр,
		|	ИпотечныеСтавкиСрезПоследних.Группа КАК Группа,
		|	ИпотечныеСтавкиСрезПоследних.СхемаУсловийСтавок КАК СхемаУсловийСтавок,
		|	ИпотечныеСтавкиСрезПоследних.Ставка КАК Ставка,
		|	ИпотечныеСтавкиСрезПоследних.Активен КАК Активен,
		|	ИпотечныеСтавкиСрезПоследних.Расположение КАК Расположение,
		|	ИпотечныеСтавкиСрезПоследних.ПрограммаКредитования КАК ПрограммаКредитования,
		|	ИпотечныеСтавкиСрезПоследних.Активен1 КАК Активен1
		|ИЗ
		|	РегистрСведений.ИпотечныеСтавки.СрезПоследних(
		|			&Дата,
		|			Банк = &Банк
		|				И ПрограммаКредитования = &Программа
		|				И СхемаУсловийСтавок = &Схема
		|				И Регистратор <> &Ссылка) КАК ИпотечныеСтавкиСрезПоследних
		|ГДЕ
		|	ИпотечныеСтавкиСрезПоследних.Активен
		|
		|ДЛЯ ИЗМЕНЕНИЯ";
	
	Запрос.УстановитьПараметр("Банк", Банк);
	Запрос.УстановитьПараметр("Дата", ДатаРегистрации);
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	Запрос.УстановитьПараметр("Программа", Программа);
	Запрос.УстановитьПараметр("Схема", СхемаУсловияПримененияСтавки);
	
	Результат = Запрос.Выполнить();
	Если Результат.Пустой() Тогда
		Возврат Неопределено;
	Иначе
		Выборка = Результат.Выбрать();
		Возврат Выборка;
	КонецЕсли;
	
КонецФункции
//-- Юкаев Роман 20180425 )

//Процедура СнятьАктивностьПредыдущих()
//	
//	Запрос = Новый Запрос;
//	Запрос.Текст = 
//		"ВЫБРАТЬ
//		|	&Дата КАК Период,
//		|	ИпотечныеСтавкиСрезПоследних.НомерСтроки,
//		|	ИпотечныеСтавкиСрезПоследних.Активность,
//		|	ИпотечныеСтавкиСрезПоследних.Банк,
//		|	ИпотечныеСтавкиСрезПоследних.Тип,
//		|	ИпотечныеСтавкиСрезПоследних.Параметр,
//		|	ИпотечныеСтавкиСрезПоследних.Группа,
//		|	ИпотечныеСтавкиСрезПоследних.СхемаУсловийСтавок,
//		|	ИпотечныеСтавкиСрезПоследних.Ставка,
//		|	ИпотечныеСтавкиСрезПоследних.Активен,
//		|	ИпотечныеСтавкиСрезПоследних.Расположение,
//		|	ИпотечныеСтавкиСрезПоследних.ПрограммаКредитования
//		|ИЗ
//		|	РегистрСведений.ИпотечныеСтавки.СрезПоследних(
//		|			&Дата,
//		|			Банк = &Банк
//		|				И ПрограммаКредитования = &Программа
//		|				И СхемаУсловийСтавок = &Схема
//		|				И Регистратор <> &Ссылка) КАК ИпотечныеСтавкиСрезПоследних
//		|ГДЕ
//		|	ИпотечныеСтавкиСрезПоследних.Активен
//		|
//		|ДЛЯ ИЗМЕНЕНИЯ";
//	
//	Запрос.УстановитьПараметр("Банк", Банк);
//	Запрос.УстановитьПараметр("Дата", ДатаРегистрации);
//	Запрос.УстановитьПараметр("Ссылка", Ссылка);
//	Запрос.УстановитьПараметр("Программа", Программа);
//	Запрос.УстановитьПараметр("Схема", СхемаУсловияПримененияСтавки);
//	
//	НачатьТранзакцию();
//	
//	РезультатЗапроса = Запрос.Выполнить();
//	
//	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
//	
//	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
//		
//	Набор = ЭтотОбъект.Движения.ИпотечныеСтавки;
//	
//	Запись = Набор.Добавить();
//	
//	ЗаполнитьЗначенияСвойств(Запись, ВыборкаДетальныеЗаписи);		
//	Запись.Активен = Ложь;
//	
//	Попытка
//		Набор.Записать();
//	Исключение
//		Информация = ИнформацияОбОшибке();
//		Ошибка = ОписаниеОшибки();
//		Если Найти(Ошибка, "Запись с такими ключевыми полями существует!")<>0 Тогда
//			Сообщить("По этой схеме на дату регистрации уже существует другой документ ""Условия применения ставок"""); 
//			//+ Символы.ПС +	Информация.Причина.Описание);
//		Иначе
//			ВызватьИсключение;
//		КонецЕсли;
//	КонецПопытки;

//	КонецЦикла;
//	ЗафиксироватьТранзакцию();
//	
//КонецПроцедуры

//Процедура СформироватьДвижения()
//	
//	
//	Набор = РегистрыСведений.ИпотечныеСтавки.СоздатьНаборЗаписей();
//	Набор.Отбор.Регистратор.Установить(Ссылка);
//	Набор.Прочитать();
//	Набор.Очистить();
//	Для Каждого Стр Из ЗначенияСтавок Цикл
//		Запись = Набор.Добавить();
//		ЗаполнитьЗначенияСвойств(Запись, Стр,,"НомерСтроки");
//		Запись.Активен = Истина;
//		Запись.Период = ДатаРегистрации;
//		Запись.СхемаУсловийСтавок = СхемаУсловияПримененияСтавки;
//		Запись.ПрограммаКредитования = Программа;
//		Запись.Банк = Банк;
//	КонецЦикла;
//	
//	Набор.Записать();
//	
//КонецПроцедуры
