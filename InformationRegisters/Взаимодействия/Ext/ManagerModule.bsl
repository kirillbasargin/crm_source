
#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

Функция СтруктураЗаписи() Экспорт
	
	Возврат Новый Структура(
		//Измерения
		"Взаимодействие,
		//Ресурсы
		|АктивностьВзаимодействия, 
		|Статус, 
		|ДатаВзаимодействия,
		|Контакт, 
		|КонтактыСтрокой,
		|Номер,
		|ПериодВзаимодействия,
		|Ответственный,
		|ГруппаОтветственного,
		|ТипВзаимодействия,	
		|Предмет,			
		|Проект,
		|Офис,
		|МестоПроведенияВстречи,
		|ТипОбъектаНедвижимости,
		|ФормыОплатыСтрокой,
		//Служебные
		|Рассмотрено,
		|РассмотретьПосле");

КонецФункции

Процедура ЗаписатьВзаимодействие(Взаимодействие) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	СтруктураЗаписи = СтруктураЗаписи();
	Если ТипЗнч(Взаимодействие) = Тип("ДокументОбъект.Встреча") Тогда
		СтруктураЗаписи.ТипВзаимодействия = Перечисления.ТипыВзаимодействий.Встреча; 
	ИначеЕсли ТипЗнч(Взаимодействие) = Тип("ДокументОбъект.ТелефонныйЗвонок") Тогда
		СтруктураЗаписи.ТипВзаимодействия = Перечисления.ТипыВзаимодействий.ТелефонныйЗвонок; 
	ИначеЕсли ТипЗнч(Взаимодействие) = Тип("ДокументОбъект.ЭлектронноеПисьмоВходящее") Тогда
		СтруктураЗаписи.ТипВзаимодействия = Перечисления.ТипыВзаимодействий.ЭлектронноеПисьмоВходящее;
	ИначеЕсли ТипЗнч(Взаимодействие) = Тип("ДокументОбъект.ЭлектронноеПисьмоИсходящее") Тогда
		СтруктураЗаписи.ТипВзаимодействия = Перечисления.ТипыВзаимодействий.ЭлектронноеПисьмоИсходящее; 
	Иначе
		Возврат;
	КонецЕсли;	
	
	СтруктураЗаписи.Взаимодействие = Взаимодействие.Ссылка;
	СтруктураЗаписи.Номер = Взаимодействие.Номер;
	СтруктураЗаписи.ПериодВзаимодействия = Взаимодействие.Дата;
	СтруктураЗаписи.Ответственный = Взаимодействие.Ответственный;
	ЗаполнитьКонтактыЗаписи(Взаимодействие.Ссылка, СтруктураЗаписи);	
	
	СтруктураРеквизитов = Взаимодействия.СтруктураРеквизитовВзаимодействия(Взаимодействие.Ссылка);
	ЗаполнитьЗначенияСвойств(СтруктураЗаписи, СтруктураРеквизитов, "Предмет, Рассмотрено, РассмотретьПосле");	

	Если ЗначениеЗаполнено(СтруктураЗаписи.Предмет) И ТипЗнч(СтруктураЗаписи.Предмет) = Тип("ДокументСсылка.Запрос") Тогда
		Если ТипЗнч(СтруктураЗаписи.Предмет) = Тип("ДокументСсылка.Запрос") Тогда
			СтруктураЗаписи.Проект = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(СтруктураЗаписи.Предмет, "Проект");
			//СтруктураЗаписи.ТипОбъектаНедвижимости = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(СтруктураЗаписи.Предмет, "ТипОбъектаНедвижимости");
			//ЗаполнитьФормыОплатыСтрокой(СтруктураЗаписи);
		Иначе
			Возврат;
		КонецЕсли;
	Иначе
		Возврат;
	КонецЕсли;
		
	Если Взаимодействие.Отменено Тогда
		СтруктураЗаписи.Статус = Перечисления.СтатусыВзаимодействий.Отменено;
	ИначеЕсли НЕ СтруктураЗаписи.Рассмотрено = Неопределено И СтруктураЗаписи.Рассмотрено Тогда
		СтруктураЗаписи.Статус = Перечисления.СтатусыВзаимодействий.Завершено; 
	Иначе
		СтруктураЗаписи.Статус = Перечисления.СтатусыВзаимодействий.Запланировано; 
	КонецЕсли; 
	
	Если СтруктураЗаписи.Статус = Перечисления.СтатусыВзаимодействий.Запланировано Тогда 
		СтруктураЗаписи.ДатаВзаимодействия = СтруктураРеквизитов.РассмотретьПосле;
	Иначе
		Если СтруктураЗаписи.ТипВзаимодействия = Перечисления.ТипыВзаимодействий.Встреча Тогда 
			СтруктураЗаписи.ДатаВзаимодействия = Взаимодействие.ДатаОкончания;							
		ИначеЕсли СтруктураЗаписи.ТипВзаимодействия = Перечисления.ТипыВзаимодействий.ТелефонныйЗвонок Тогда 
			СтруктураЗаписи.ДатаВзаимодействия = Взаимодействие.ДатаОкончания;	
		ИначеЕсли СтруктураЗаписи.ТипВзаимодействия = Перечисления.ТипыВзаимодействий.ЭлектронноеПисьмоВходящее Тогда
			СтруктураЗаписи.ДатаВзаимодействия = Взаимодействие.Дата;
		ИначеЕсли СтруктураЗаписи.ТипВзаимодействия = Перечисления.ТипыВзаимодействий.ЭлектронноеПисьмоИсходящее Тогда
			СтруктураЗаписи.ДатаВзаимодействия = Взаимодействие.ДатаОтправления;
		Иначе
			Возврат;
		КонецЕсли;				
	КонецЕсли;
	
	СтруктураЗаписи.ДатаВзаимодействия = ?(ЗначениеЗаполнено(СтруктураЗаписи.ДатаВзаимодействия), СтруктураЗаписи.ДатаВзаимодействия, СтруктураЗаписи.ПериодВзаимодействия);
	Если СтруктураЗаписи.ТипВзаимодействия = Перечисления.ТипыВзаимодействий.Встреча Тогда 
		Если ЗначениеЗаполнено(Взаимодействие.МестоПроведенияВстречи) Тогда
			СтруктураЗаписи.Офис = Взаимодействие.МестоПроведенияВстречи; 
			СтруктураЗаписи.ГруппаОтветственного = ?(НЕ ЗначениеЗаполнено(Взаимодействие.ГруппаОтветственного), ПолучитьГруппуОтветственного(Взаимодействие.Ответственный, СтруктураЗаписи.ДатаВзаимодействия, СтруктураЗаписи), ПолучитьВерхнийУровеньГруппы(Взаимодействие.ГруппаОтветственного));			
		//Иначе
		//	СтруктураЗаписи.ГруппаОтветственного = ПолучитьГруппуОтветственного(Взаимодействие.Ответственный, СтруктураЗаписи.ДатаВзаимодействия, СтруктураЗаписи);
		//	СтруктураЗаписи.Офис = ПолучитьОфисГруппы(СтруктураЗаписи.ГруппаОтветственного);
		КонецЕсли;
	Иначе
		СтруктураЗаписи.ГруппаОтветственного = ПолучитьГруппуОтветственного(Взаимодействие.Ответственный, ?(ЗначениеЗаполнено(СтруктураЗаписи.ДатаВзаимодействия), СтруктураЗаписи.ДатаВзаимодействия, СтруктураЗаписи.ПериодВзаимодействия), СтруктураЗаписи);     
	КонецЕсли;
			
	СтруктураЗаписи.АктивностьВзаимодействия = Перечисления.ТипАктивностиВзаимодействия.Вторичное; //?(НЕ СтруктураЗаписи.Статус = "Завершено", Перечисления.ТипАктивностиВзаимодействия.Вторичное, Перечисления.ТипАктивностиВзаимодействия.Первичное);
	
	Если ЗначениеЗаполнено(СтруктураЗаписи.Офис) Тогда
		СтруктураЗаписи.МестоПроведенияВстречи = Перечисления.МестаПроведенияВстреч[СтруктураЗаписи.Офис];
	КонецЕсли;
	
	ВыполнитьЗаписьВРегистр(Взаимодействие.Ссылка, СтруктураЗаписи);

	Если НЕ ЗначениеЗаполнено(СтруктураЗаписи.ГруппаОтветственного) Тогда
		Возврат;
	КонецЕсли;
	
	СтруктураЗаписи.АктивностьВзаимодействия = ПолучитьАктивностьВзаимодействия(СтруктураЗаписи);
	Если СтруктураЗаписи.АктивностьВзаимодействия = Неопределено Тогда 
		//<789123>, Басаргин (29.03.2018) {
		УправлениеЗаявкамиНаЗвонок.ОбработкаЗаявкиНаЗвонокПриЗаписиВзаимодействия(Взаимодействие);
		//<789123> }
		Возврат;
	КонецЕсли;
	
	ВыполнитьЗаписьВРегистр(Взаимодействие.Ссылка, СтруктураЗаписи);
	
	//<789123>, Басаргин (29.03.2018) {
	УправлениеЗаявкамиНаЗвонок.ОбработкаЗаявкиНаЗвонокПриЗаписиВзаимодействия(Взаимодействие);
	//<789123> }
	
	//<853881>, Басаргин (10.08.2018) {
	ПроверяемыеИменаГрупп = Новый Массив;
	ПроверяемыеИменаГрупп.Добавить("Филиал");
	ПроверяемыеИменаГрупп.Добавить("Центральный офис");
	Если СтруктураЗаписи.АктивностьВзаимодействия = Перечисления.ТипАктивностиВзаимодействия.Первичное
			И СтруктураЗаписи.Статус = Перечисления.СтатусыВзаимодействий.Завершено
			И СтруктураЗаписи.ТипВзаимодействия = Перечисления.ТипыВзаимодействий.Встреча 
			И НЕ ПроверяемыеИменаГрупп.Найти(ОбщегоНазначения.ЗначениеРеквизитаОбъекта(СтруктураЗаписи.ГруппаОтветственного, "Наименование")) = Неопределено
			И НачалоДня(СтруктураЗаписи.ДатаВзаимодействия) = НачалоДня(ТекущаяДата()) Тогда
		Запрос = Новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	ЗапросФормыОплаты.Ссылка КАК Ссылка
		|ИЗ
		|	Документ.Запрос.ФормыОплаты КАК ЗапросФормыОплаты
		|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.РасчетИпотеки КАК РасчетИпотеки
		|		ПО ЗапросФормыОплаты.Ссылка = РасчетИпотеки.Запрос
		|ГДЕ
		|	ЗапросФормыОплаты.Ссылка = &Ссылка
		|	И ЗапросФормыОплаты.ФормаОплаты В (ЗНАЧЕНИЕ(Перечисление.ФормыОплаты.Ипотека), ЗНАЧЕНИЕ(Перечисление.ФормыОплаты.ВоеннаяИпотекаМолодострой), ЗНАЧЕНИЕ(Перечисление.ФормыОплаты.ВоеннаяИпотекаНеМолодострой))
		|	И РасчетИпотеки.Ссылка ЕСТЬ NULL";
		
		Запрос.УстановитьПараметр("Ссылка", СтруктураЗаписи.Предмет);
		
		РезультатЗапроса = Запрос.Выполнить();

		Если НЕ РезультатЗапроса.Пустой() Тогда			
			СсылкаНаДокумент = Документы.РасчетИпотеки.ПолучитьСсылку();	
			НовыйДокумент = Документы.РасчетИпотеки.СоздатьДокумент();
			НовыйДокумент.УстановитьСсылкуНового(СсылкаНадокумент);
			НовыйДокумент.Дата = ТекущаяДата();			
			НовыйДокумент.Заполнить(СтруктураЗаписи.Предмет);
			НовыйДокумент.Ответственный = СтруктураЗаписи.Ответственный;
			НовыйДокумент.Записать(РежимЗаписиДокумента.Запись);	
		КонецЕсли;
	КонецЕсли;	
	//<853881> }
	
КонецПроцедуры

Процедура УдалитьЗаписьИзРегистра(Взаимодействие = Неопределено) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	НаборЗаписей = СоздатьНаборЗаписей();
	Если Взаимодействие <> Неопределено Тогда
		НаборЗаписей.Отбор.Взаимодействие.Установить(Взаимодействие);
	КонецЕсли;
	
	НаборЗаписей.Записать();
		
КонецПроцедуры

Процедура ВыполнитьЗаписьВРегистр(Взаимодействие, СтруктураЗаписи) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	НаборЗаписей = СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.Взаимодействие.Установить(Взаимодействие);
	
	Запись = НаборЗаписей.Добавить();
	ЗаполнитьЗначенияСвойств(Запись, СтруктураЗаписи);
	Запись.Взаимодействие = Взаимодействие;
	НаборЗаписей.Записать();

КонецПроцедуры

Функция ПолучитьТекущийСтатусВзаимодействия(Ссылка, СтруктураРеквизитов = Неопределено) Экспорт
	
	Если НЕ ЗначениеЗаполнено(Ссылка) Тогда
		Возврат Неопределено;
	КонецЕсли;
		
	СтруктураРеквизитов = ?(СтруктураРеквизитов = Неопределено, Взаимодействия.СтруктураРеквизитовВзаимодействия(Ссылка), СтруктураРеквизитов);	
	Если ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Ссылка, "Отменено") Тогда
		ТекущийСтатус = Перечисления.СтатусыВзаимодействий.Отменено;
	ИначеЕсли НЕ СтруктураРеквизитов.Рассмотрено = Неопределено И СтруктураРеквизитов.Рассмотрено Тогда
		ТекущийСтатус = Перечисления.СтатусыВзаимодействий.Завершено;
	Иначе
		ТекущийСтатус = Перечисления.СтатусыВзаимодействий.Запланировано; 
	КонецЕсли; 
	
	Возврат ТекущийСтатус;
	
КонецФункции

Функция ПолучитьАктивностьЗаписи(Взаимодействие) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	Взаимодействия.АктивностьВзаимодействия КАК АктивностьВзаимодействия
	|ИЗ
	|	РегистрСведений.Взаимодействия КАК Взаимодействия
	|ГДЕ
	|	Взаимодействия.Взаимодействие = &Взаимодействие";
	
	Запрос.УстановитьПараметр("Взаимодействие", Взаимодействие);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Если ВыборкаДетальныеЗаписи.Следующий() Тогда
		Возврат ВыборкаДетальныеЗаписи.АктивностьВзаимодействия;
	КонецЕсли;
		
КонецФункции

Процедура УстановитьСтатусВзаимодействияСФиксациейИзменений(Взаимодействие, СтатусВзаимодействия, МассивИзменений = Неопределено, ОтветственныйВзаимодействия = Неопределено) Экспорт
	
	ВзаимодействиеОбъект = Взаимодействие.ПолучитьОбъект();
	Если ВзаимодействиеОбъект = Неопределено Тогда														
		Возврат;	
	КонецЕсли;

	ТекущийСтатусВзаимоедйствия = РегистрыСведений.Взаимодействия.ПолучитьТекущийСтатусВзаимодействия(Взаимодействие);

	Если ТекущийСтатусВзаимоедйствия = СтатусВзаимодействия Тогда
		Возврат;
	КонецЕсли;

	МассивИзмененийВзаимодействия = ?(МассивИзменений = Неопределено, Новый Массив, МассивИзменений);	
	Если СтатусВзаимодействия = Перечисления.СтатусыВзаимодействий.Отменено Тогда
		НаборЗаписей = РегистрыСведений.ПредметыПапкиВзаимодействий.СоздатьНаборЗаписей();
		НаборЗаписей.Отбор.Взаимодействие.Установить(Взаимодействие);
		НаборЗаписей.Прочитать();
		Если НаборЗаписей.Количество() Тогда
			Для каждого Запись Из НаборЗаписей Цикл
				Если Запись.Рассмотрено Тогда
					РегистрыСведений.Взаимодействия.ДобавитьИзменениеВзаимодействияВМассив(МассивИзмененийВзаимодействия, Взаимодействие, "Рассмотрено", Ложь, Истина);
					Запись.Рассмотрено = Ложь;
				КонецЕсли;
			КонецЦикла;
			Если НаборЗаписей.Модифицированность() Тогда
				НаборЗаписей.Записать();
			КонецЕсли;
		КонецЕсли;			
		Если НЕ ВзаимодействиеОбъект.Отменено Тогда
			РегистрыСведений.Взаимодействия.ДобавитьИзменениеВзаимодействияВМассив(МассивИзмененийВзаимодействия, Взаимодействие, "Отменено", Истина, Ложь);
			ВзаимодействиеОбъект.Отменено = Истина;
			ВзаимодействиеОбъект.Записать();	
		КонецЕсли;				
	ИначеЕсли СтатусВзаимодействия = Перечисления.СтатусыВзаимодействий.Завершено Тогда		
		НаборЗаписей = РегистрыСведений.ПредметыПапкиВзаимодействий.СоздатьНаборЗаписей();
		НаборЗаписей.Отбор.Взаимодействие.Установить(Взаимодействие);
		НаборЗаписей.Прочитать();
		Если НаборЗаписей.Количество() Тогда
			Для каждого Запись Из НаборЗаписей Цикл
				Если НЕ Запись.Рассмотрено Тогда
					РегистрыСведений.Взаимодействия.ДобавитьИзменениеВзаимодействияВМассив(МассивИзмененийВзаимодействия, Взаимодействие, "Рассмотрено", Истина, Ложь);
					Запись.Рассмотрено = Истина;
				КонецЕсли;
			КонецЦикла;
			Если НаборЗаписей.Модифицированность() Тогда
				НаборЗаписей.Записать();
			КонецЕсли;
		КонецЕсли;			
		Если ВзаимодействиеОбъект.Отменено Тогда
			РегистрыСведений.Взаимодействия.ДобавитьИзменениеВзаимодействияВМассив(МассивИзмененийВзаимодействия, Взаимодействие, "Отменено", Ложь, Истина);
			ВзаимодействиеОбъект.Отменено = Ложь;
		КонецЕсли;
		//<>, Басаргин (17.07.2018) {
		Если ТипЗнч(ВзаимодействиеОбъект) = Тип("ДокументОбъект.Встреча") 
				ИЛИ ТипЗнч(ВзаимодействиеОбъект) = Тип("ДокументОбъект.ТелефонныйЗвонок") Тогда
			ДатаОкончания = ТекущаяДата();
			РегистрыСведений.Взаимодействия.ДобавитьИзменениеВзаимодействияВМассив(МассивИзмененийВзаимодействия, Взаимодействие, "ДатаОкончания", ДатаОкончания, ВзаимодействиеОбъект.ДатаОкончания);	
			ВзаимодействиеОбъект.ДатаОкончания = ТекущаяДата();					
		КонецЕсли;
		ВзаимодействиеОбъект.Записать();	
		//<> }
	ИначеЕсли СтатусВзаимодействия = Перечисления.СтатусыВзаимодействий.Запланировано Тогда
		НаборЗаписей = РегистрыСведений.ПредметыПапкиВзаимодействий.СоздатьНаборЗаписей();
		НаборЗаписей.Отбор.Взаимодействие.Установить(Взаимодействие);
		НаборЗаписей.Прочитать();
		Если НаборЗаписей.Количество() Тогда
			Для каждого Запись Из НаборЗаписей Цикл
				Если Запись.Рассмотрено Тогда
					РегистрыСведений.Взаимодействия.ДобавитьИзменениеВзаимодействияВМассив(МассивИзмененийВзаимодействия, Взаимодействие, "Рассмотрено", Ложь, Истина);
					Запись.Рассмотрено = Ложь;
				КонецЕсли;
			КонецЦикла;
			Если НаборЗаписей.Модифицированность() Тогда
				НаборЗаписей.Записать();
			КонецЕсли;
		КонецЕсли;			
		Если ВзаимодействиеОбъект.Отменено Тогда
			РегистрыСведений.Взаимодействия.ДобавитьИзменениеВзаимодействияВМассив(МассивИзмененийВзаимодействия, Взаимодействие, "Отменено", Ложь, Истина);
			ВзаимодействиеОбъект.Отменено = Ложь;
			ВзаимодействиеОбъект.Записать();	
		КонецЕсли;
	Иначе
		Возврат;
	КонецЕсли;
	
	Если НЕ ОтветственныйВзаимодействия = Неопределено И НЕ ВзаимодействиеОбъект.Ответственный = ОтветственныйВзаимодействия Тогда				
		РегистрыСведений.Взаимодействия.ДобавитьИзменениеВзаимодействияВМассив(МассивИзмененийВзаимодействия, Взаимодействие, "Ответственный", ОтветственныйВзаимодействия, ВзаимодействиеОбъект.Ответственный);					
		ВзаимодействиеОбъект.Ответственный = ОтветственныйВзаимодействия; 						
		ВзаимодействиеОбъект.Записать();				
	КонецЕсли;
	
	РегистрыСведений.Взаимодействия.ЗаписатьВзаимодействие(ВзаимодействиеОбъект);
	
	Если МассивИзменений = Неопределено И МассивИзмененийВзаимодействия.Количество() Тогда
		РегистрыСведений.Взаимодействия.ЗафиксироватьИзмененияВзаимодействия(МассивИзмененийВзаимодействия);
	КонецЕсли;		
	
КонецПроцедуры

#КонецОбласти
	
#Область СлужебныеПроцедурыИФункции

Процедура ЗаполнитьКонтактыЗаписи(Взаимодействие, СтруктураЗаписи)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
	|	КонтактыВзаимодействий.Контакт КАК Контакт,
	|	ПРЕДСТАВЛЕНИЕ(КонтактыВзаимодействий.Контакт) КАК КонтактПредставление
	|ИЗ
	|	РегистрСведений.КонтактыВзаимодействий КАК КонтактыВзаимодействий
	|ГДЕ
	|	КонтактыВзаимодействий.Взаимодействие = &Взаимодействие";
	
	Запрос.УстановитьПараметр("Взаимодействие", Взаимодействие);
	
	РезультатЗапроса = Запрос.Выполнить();	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Контакт = Неопределено;
	КонтактыСтрокой = "";
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		Если Контакт = Неопределено И ЗначениеЗаполнено(ВыборкаДетальныеЗаписи.Контакт) Тогда
			Контакт = ВыборкаДетальныеЗаписи.Контакт;		
		КонецЕсли;
		КонтактыСтрокой = КонтактыСтрокой + ВыборкаДетальныеЗаписи.КонтактПредставление + "; ";
	КонецЦикла;
	
	СтруктураЗаписи.Контакт = Контакт;
	СтруктураЗаписи.КонтактыСтрокой = ?(НЕ ПустаяСтрока(КонтактыСтрокой), Сред(КонтактыСтрокой, 1, СтрДлина(КонтактыСтрокой) - 2), "");
	
КонецПроцедуры

Функция ПолучитьГруппуОтветственного(Ответственный, ДатаВзаимодействия, СтруктураЗаписи = Неопределено) Экспорт 
	
	ГруппаОтветственного = Неопределено;
	Если ТипЗнч(Ответственный) = Тип("СправочникСсылка.ГруппыПользователей") Тогда
		ГруппаОтветственного = Ответственный;
	ИначеЕсли ТипЗнч(Ответственный) = Тип("СправочникСсылка.Пользователи") Тогда		
		Если НЕ СтруктураЗаписи = Неопределено 
			И СтруктураЗаписи.ТипВзаимодействия = Перечисления.ТипыВзаимодействий.Встреча
			И ЗначениеЗаполнено(СтруктураЗаписи.Офис) Тогда				
			Запрос = Новый Запрос;
			Запрос.Текст = 
			"ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
			|	СоставыГруппПользователейИсторияИзмений.ГруппаПользователей КАК Группа
			|ИЗ
			|	РегистрСведений.СоставыГруппПользователейИсторияИзмений КАК СоставыГруппПользователейИсторияИзмений
			|ГДЕ
			|	ВЫБОР
			|			КОГДА СоставыГруппПользователейИсторияИзмений.ДатаВыходаИзГруппы = ДАТАВРЕМЯ(1, 1, 1)
			|				ТОГДА &ДатаВзаимодействия >= СоставыГруппПользователейИсторияИзмений.ДатаВключенияВГруппу
			|			ИНАЧЕ &ДатаВзаимодействия >= СоставыГруппПользователейИсторияИзмений.ДатаВключенияВГруппу
			|					И &ДатаВзаимодействия < СоставыГруппПользователейИсторияИзмений.ДатаВыходаИзГруппы
			|		КОНЕЦ
			|	И СоставыГруппПользователейИсторияИзмений.Пользователь = &Пользователь
			|
			|УПОРЯДОЧИТЬ ПО
			|	СоставыГруппПользователейИсторияИзмений.ГруппаПользователей";
				
			Запрос.УстановитьПараметр("ДатаВзаимодействия", ДатаВзаимодействия);
			Запрос.УстановитьПараметр("Пользователь", Ответственный);
			
			РезультатЗапроса = Запрос.Выполнить();
			ГруппыПользователей = Новый Массив;
			ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();		
			Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
				ГруппыПользователей.Добавить(ВыборкаДетальныеЗаписи.Группа);
			КонецЦикла;
			
			Запрос = Новый Запрос;
			Запрос.Текст = 
			"ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
			|	СоответствиеГруппПользователейОфисам.ГруппаПользователей КАК Группа,
			|	СоответствиеГруппПользователейОфисам.Офис КАК Офис
			|ИЗ
			|	РегистрСведений.СоответствиеГруппПользователейОфисам КАК СоответствиеГруппПользователейОфисам
			|ГДЕ
			|	СоответствиеГруппПользователейОфисам.ГруппаПользователей В ИЕРАРХИИ(&ГруппыПользователей)
			|	И СоответствиеГруппПользователейОфисам.Офис = &Офис
			|	И СоответствиеГруппПользователейОфисам.Проект = &Проект
			|
			|УПОРЯДОЧИТЬ ПО
			|	СоответствиеГруппПользователейОфисам.ГруппаПользователей.Наименование";
			
			Запрос.УстановитьПараметр("ГруппыПользователей", ГруппыПользователей);
			Запрос.УстановитьПараметр("Офис", СтруктураЗаписи.Офис);
			Запрос.УстановитьПараметр("Проект", СтруктураЗаписи.Проект);
			
			РезультатЗапроса = Запрос.Выполнить();			
			ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();			
			Если ВыборкаДетальныеЗаписи.Следующий() Тогда
				ГруппаОтветственного = ВыборкаДетальныеЗаписи.Группа;
			КонецЕсли;	
		Иначе
			Запрос = Новый Запрос;
			Запрос.Текст = 
			"ВЫБРАТЬ РАЗРЕШЕННЫЕ 
			|	СоставыГруппПользователейИсторияИзмений.ГруппаПользователей КАК Группа
			|ИЗ
			|	РегистрСведений.СоставыГруппПользователейИсторияИзмений КАК СоставыГруппПользователейИсторияИзмений
			|ГДЕ
			|	ВЫБОР
			|			КОГДА СоставыГруппПользователейИсторияИзмений.ДатаВыходаИзГруппы = ДАТАВРЕМЯ(1, 1, 1)
			|				ТОГДА &ДатаВзаимодействия >= СоставыГруппПользователейИсторияИзмений.ДатаВключенияВГруппу
			|			ИНАЧЕ &ДатаВзаимодействия >= СоставыГруппПользователейИсторияИзмений.ДатаВключенияВГруппу
			|					И &ДатаВзаимодействия < СоставыГруппПользователейИсторияИзмений.ДатаВыходаИзГруппы
			|		КОНЕЦ
			|	И СоставыГруппПользователейИсторияИзмений.Пользователь = &Пользователь
			|
			|УПОРЯДОЧИТЬ ПО
			|	СоставыГруппПользователейИсторияИзмений.ГруппаПользователей";
				
			Запрос.УстановитьПараметр("ДатаВзаимодействия", ДатаВзаимодействия);
			Запрос.УстановитьПараметр("Пользователь", Ответственный);
			
			РезультатЗапроса = Запрос.Выполнить();		
			ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();		
			Если ВыборкаДетальныеЗаписи.Следующий() Тогда
				ГруппаОтветственного = ВыборкаДетальныеЗаписи.Группа;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ГруппаОтветственного) Тогда
		Пока ЗначениеЗаполнено(ГруппаОтветственного.Родитель) Цикл
			ГруппаОтветственного = ГруппаОтветственного.Родитель;
		КонецЦикла;
	КонецЕсли; 
	
	Возврат ГруппаОтветственного;
	
КонецФункции

Функция ПолучитьОфисГруппы(ГруппаОтветственного) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ ПЕРВЫЕ 1
	|	СоответствиеГруппПользователейОфисам.Офис КАК Офис
	|ИЗ
	|	РегистрСведений.СоответствиеГруппПользователейОфисам КАК СоответствиеГруппПользователейОфисам
	|ГДЕ
	|	СоответствиеГруппПользователейОфисам.ГруппаПользователей = &ГруппаПользователей
	|
	|УПОРЯДОЧИТЬ ПО
	|	Офис УБЫВ";
		
	Запрос.УстановитьПараметр("ГруппаПользователей", ГруппаОтветственного);

	РезультатЗапроса = Запрос.Выполнить();		
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();		
	Если ВыборкаДетальныеЗаписи.Следующий() Тогда
		Возврат ВыборкаДетальныеЗаписи.Офис;
	КонецЕсли;
	
КонецФункции

Функция ПолучитьАктивностьВзаимодействия(СтруктураЗаписи) 
	
	ГруппаИпотечныеБрокеры = ТипЗнч(СтруктураЗаписи.ГруппаОтветственного) = Тип("СправочникСсылка.ГруппыПользователей")
		И ОбщегоНазначения.ЗначениеРеквизитаОбъекта(СтруктураЗаписи.ГруппаОтветственного, "Наименование") = "Ипотечные брокеры";
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	Взаимодействия.Взаимодействие КАК Взаимодействие,
	|	Взаимодействия.АктивностьВзаимодействия КАК АктивностьВзаимодействия,
	|	Взаимодействия.Статус КАК Статус,
	|	Взаимодействия.ДатаВзаимодействия КАК ДатаВзаимодействия,
	|	Взаимодействия.Контакт КАК Контакт,
	|	Взаимодействия.КонтактыСтрокой КАК КонтактыСтрокой,
	|	Взаимодействия.Номер КАК Номер,
	|	Взаимодействия.ПериодВзаимодействия КАК ПериодВзаимодействия,
	|	Взаимодействия.Ответственный КАК Ответственный,
	|	Взаимодействия.ГруппаОтветственного КАК ГруппаОтветственного,
	|	Взаимодействия.ТипВзаимодействия КАК ТипВзаимодействия,
	|	Взаимодействия.Предмет КАК Предмет,
	|	Взаимодействия.Проект КАК Проект,
	|	Взаимодействия.Офис КАК Офис,
	|	Взаимодействия.МестоПроведенияВстречи КАК МестоПроведенияВстречи
	|ИЗ
	|	РегистрСведений.Взаимодействия КАК Взаимодействия
	|ГДЕ
	|	Взаимодействия.ГруппаОтветственного = &ГруппаОтветственного
	|	И Взаимодействия.ТипВзаимодействия = &ТипВзаимодействия
	|	И Взаимодействия.Статус = &Статус
	|	И Взаимодействия.Предмет = &Предмет
	|	И Взаимодействия.Офис В(&Офис)
	|
	|УПОРЯДОЧИТЬ ПО
	|	ДатаВзаимодействия";
	
	Запрос.УстановитьПараметр("ГруппаОтветственного", СтруктураЗаписи.ГруппаОтветственного);
	Запрос.УстановитьПараметр("Предмет", СтруктураЗаписи.Предмет);
	Запрос.УстановитьПараметр("Статус", Перечисления.СтатусыВзаимодействий.Завершено);
	Если ГруппаИпотечныеБрокеры Тогда
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "И Взаимодействия.ТипВзаимодействия = &ТипВзаимодействия", "");
	Иначе
		Запрос.УстановитьПараметр("ТипВзаимодействия", СтруктураЗаписи.ТипВзаимодействия);
	КонецЕсли;	
	Если НЕ СтруктураЗаписи.ТипВзаимодействия = Перечисления.ТипыВзаимодействий.Встреча ИЛИ ГруппаИпотечныеБрокеры Тогда
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "И Взаимодействия.Офис В(&Офис)", "");
	Иначе
		Офисы = Новый Массив;
		Если СтруктураЗаписи.Офис = "ОПО" ИЛИ СтруктураЗаписи.Офис = "Филиал" Тогда
			Офисы.Добавить("ОПО");
			Офисы.Добавить("Филиал");
		Иначе
			Офисы.Добавить(СтруктураЗаписи.Офис);
		КонецЕсли;
		Запрос.УстановитьПараметр("Офис", Офисы);		
	КонецЕсли;

	РезультатЗапроса = Запрос.Выполнить();
	Если НЕ РезультатЗапроса.Пустой() Тогда
		ТЗ = РезультатЗапроса.Выгрузить();	
		Если СтруктураЗаписи.ТипВзаимодействия = Перечисления.ТипыВзаимодействий.ТелефонныйЗвонок Тогда
			СтадияЗапроса = РегистрыСведений.ИзменениеСтатусаСтадииЗапроса.ПолучитьПоследнее(СтруктураЗаписи.ДатаВзаимодействия, Новый Структура("Запрос", СтруктураЗаписи.Предмет));
			//СтадияЗапроса = РегистрыСведений.ИзменениеСтатусаСтадииЗапроса.ПолучитьПервое(НачалоДня(СтруктураЗаписи.ДатаВзаимодействия), Новый Структура("Запрос", СтруктураЗаписи.Предмет));			
		КонецЕсли;		
		Если СтруктураЗаписи.Взаимодействие = ТЗ[0].Взаимодействие Тогда
			Если ТЗ[0].АктивностьВзаимодействия = Перечисления.ТипАктивностиВзаимодействия.Первичное Тогда
				Если ТЗ.Количество() > 1 Тогда
					Для й = 1 По ТЗ.Количество() - 1 Цикл
						_СтруктураЗаписи = СтруктураЗаписи();
						ЗаполнитьЗначенияСвойств(_СтруктураЗаписи, ТЗ[й]);
						АктивностьВзаимодействия = Перечисления.ТипАктивностиВзаимодействия.Вторичное;
						Если НЕ АктивностьВзаимодействия = ТЗ[й].АктивностьВзаимодействия Тогда
							_СтруктураЗаписи.АктивностьВзаимодействия = АктивностьВзаимодействия;
							ВыполнитьЗаписьВРегистр(ТЗ[й].Взаимодействие, _СтруктураЗаписи);
						КонецЕсли;
					КонецЦикла;
				КонецЕсли;
				
				Возврат Неопределено;
			Иначе
				Для й = 0 По ТЗ.Количество() - 1 Цикл
					Если ТЗ[й].Взаимодействие = СтруктураЗаписи.Взаимодействие Тогда
						Продолжить;
					КонецЕсли;
					_СтруктураЗаписи = СтруктураЗаписи();
					ЗаполнитьЗначенияСвойств(_СтруктураЗаписи, ТЗ[й]);
					АктивностьВзаимодействия = Перечисления.ТипАктивностиВзаимодействия.Вторичное;
					Если НЕ АктивностьВзаимодействия = ТЗ[й].АктивностьВзаимодействия Тогда
						_СтруктураЗаписи.АктивностьВзаимодействия = АктивностьВзаимодействия;
						ВыполнитьЗаписьВРегистр(ТЗ[й].Взаимодействие, _СтруктураЗаписи);
					КонецЕсли;
				КонецЦикла;				
				Активность = Перечисления.ТипАктивностиВзаимодействия.Первичное;
				Если СтруктураЗаписи.ТипВзаимодействия = Перечисления.ТипыВзаимодействий.ТелефонныйЗвонок И НЕ ГруппаИпотечныеБрокеры Тогда
					Активность = ?(СтадияЗапроса.Стадия = Перечисления.СтадииЗапроса.Звонок, Активность, Перечисления.ТипАктивностиВзаимодействия.Вторичное);	
				КонецЕсли;
				
				Возврат Активность;
			КонецЕсли;
		Иначе
			Если СтруктураЗаписи.АктивностьВзаимодействия = Перечисления.ТипАктивностиВзаимодействия.Первичное Тогда
				Возврат Перечисления.ТипАктивностиВзаимодействия.Вторичное;
			КонецЕсли;				
		КонецЕсли;
	КонецЕсли;
			
КонецФункции

Процедура ЗаполнитьФормыОплатыСтрокой(СтруктураЗаписи)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ПРЕДСТАВЛЕНИЕ(ЗапросФормыОплаты.ФормаОплаты) КАК ФормаОплатыПредставление
	|ИЗ
	|	Документ.Запрос.ФормыОплаты КАК ЗапросФормыОплаты
	|ГДЕ
	|	ЗапросФормыОплаты.Ссылка = &Предмет";
	
	Запрос.УстановитьПараметр("Предмет", СтруктураЗаписи.Предмет);
	
	РезультатЗапроса = Запрос.Выполнить();	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	ФормыОплатыСтрокой = "";
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		ФормыОплатыСтрокой = ФормыОплатыСтрокой + ВыборкаДетальныеЗаписи.ФормаОплатыПредставление + "; ";
	КонецЦикла;
	
	СтруктураЗаписи.ФормыОплатыСтрокой = ?(НЕ ПустаяСтрока(ФормыОплатыСтрокой), Сред(ФормыОплатыСтрокой, 1, СтрДлина(ФормыОплатыСтрокой) - 2), "");
	
КонецПроцедуры

Функция ПолучитьОфисГруппыПоПроекту(Ответственный, Проект, СписокВыбора = Неопределено, ГруппыПользователя = Неопределено) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
	|	СоответствиеГруппПользователейОфисам.Офис КАК Офис,
	|	СоответствиеГруппПользователейОфисам.ГруппаПользователей КАК ГруппаПользователей
	|ИЗ
	|	РегистрСведений.СоответствиеГруппПользователейОфисам КАК СоответствиеГруппПользователейОфисам
	|ГДЕ
	|	СоответствиеГруппПользователейОфисам.ГруппаПользователей В(&ГруппаПользователей)
	|	И СоответствиеГруппПользователейОфисам.Проект = &Проект";
	
	Запрос.УстановитьПараметр("ГруппаПользователей", ПолучитьГруппуПользователяВторогоУровня(Ответственный)); //?(Не ЗначениеЗаполнено(ГруппаПользователей), ПолучитьГруппуПользователяВторогоУровня(Ответственный), ГруппаПользователей)
	Запрос.УстановитьПараметр("Проект", Проект);

	РезультатЗапроса = Запрос.Выполнить();		
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();	
	Если ВыборкаДетальныеЗаписи.Количество() = 1 Тогда
		Если ВыборкаДетальныеЗаписи.Следующий() Тогда
			Возврат ВыборкаДетальныеЗаписи.Офис;
		КонецЕсли;
	ИначеЕсли ВыборкаДетальныеЗаписи.Количество() > 0 Тогда		
		Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
			Если НЕ СписокВыбора = Неопределено И СписокВыбора.НайтиПоЗначению(ВыборкаДетальныеЗаписи.Офис) = Неопределено Тогда
				СписокВыбора.Добавить(ВыборкаДетальныеЗаписи.Офис);
			КонецЕсли;
			Если НЕ ГруппыПользователя = Неопределено И ГруппыПользователя.НайтиПоЗначению(ВыборкаДетальныеЗаписи.ГруппаПользователей) = Неопределено Тогда
				ГруппыПользователя.Добавить(ВыборкаДетальныеЗаписи.ГруппаПользователей);
			КонецЕсли;			
		КонецЦикла;				
	КонецЕсли;	
		
КонецФункции

Функция ПолучитьГруппуОфисаПоПроекту(Офис, Проект, СписокВыбора = Неопределено) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
	|	СоответствиеГруппПользователейОфисам.ГруппаПользователей КАК ГруппаПользователей
	|ИЗ
	|	РегистрСведений.СоответствиеГруппПользователейОфисам КАК СоответствиеГруппПользователейОфисам
	|ГДЕ
	|	СоответствиеГруппПользователейОфисам.Проект = &Проект
	|	И СоответствиеГруппПользователейОфисам.Офис = &Офис";
	//|
	//|УПОРЯДОЧИТЬ ПО
	//|	СоответствиеГруппПользователейОфисам.Офис УБЫВ";
		
	Запрос.УстановитьПараметр("Офис", Офис);
	Запрос.УстановитьПараметр("Проект", Проект);

	РезультатЗапроса = Запрос.Выполнить();		
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();		
	Если ВыборкаДетальныеЗаписи.Количество() = 1 Тогда
		Если ВыборкаДетальныеЗаписи.Следующий() Тогда
			Возврат ВыборкаДетальныеЗаписи.ГруппаПользователей;
		КонецЕсли;
	ИначеЕсли ВыборкаДетальныеЗаписи.Количество() > 0 Тогда		
		Если НЕ СписокВыбора = Неопределено Тогда
			Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
				СписокВыбора.Добавить(ВыборкаДетальныеЗаписи.ГруппаПользователей);
			КонецЦикла;				
		КонецЕсли;	
	КонецЕсли;	
		
КонецФункции

Функция ПолучитьГруппуПользователяВторогоУровня(Ответственный) Экспорт
	
	ГруппыОтветственного = Новый Массив;
	Если ТипЗнч(Ответственный) = Тип("СправочникСсылка.ГруппыПользователей") Тогда
		Если ЗначениеЗаполнено(Ответственный.Родитель) И НЕ ЗначениеЗаполнено(Ответственный.Родитель.Родитель) Тогда
			ГруппыОтветственного.Добавить(Ответственный);
		КонецЕсли;
	ИначеЕсли ТипЗнч(Ответственный) = Тип("СправочникСсылка.Пользователи") Тогда
		Запрос = Новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
		|	ГруппыПользователейСостав.Ссылка КАК Группа
		|ИЗ
		|	Справочник.ГруппыПользователей.Состав КАК ГруппыПользователейСостав
		|ГДЕ
		|	ГруппыПользователейСостав.Пользователь = &Пользователь
		|
		|УПОРЯДОЧИТЬ ПО
		|	Группа";			
		
		Запрос.УстановитьПараметр("Пользователь", Ответственный);
		
		РезультатЗапроса = Запрос.Выполнить();		
		ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
		Пока ВыборкаДетальныеЗаписи.Следующий() Цикл						
			Группа = ВыборкаДетальныеЗаписи.Группа;			
			Пока ЗначениеЗаполнено(Группа.Родитель) Цикл
				Если НЕ ЗначениеЗаполнено(Группа.Родитель.Родитель) Тогда
					ГруппыОтветственного.Добавить(Группа);
					Прервать;
				КонецЕсли;
				Группа = Группа.Родитель;
			КонецЦикла;
		КонецЦикла;
	КонецЕсли;                                                             
	
	Если ГруппыОтветственного.Количество() Тогда
		Возврат ГруппыОтветственного;	
	КонецЕсли;
	
КонецФункции

Функция ПолучитьВерхнийУровеньГруппы(ГруппаИерархии, ВерхняяГруппа = Неопределено) Экспорт

    Если ГруппаИерархии.Уровень() <> 0 Тогда        
        ВерхняяГруппа = ПолучитьВерхнийУровеньГруппы(ГруппаИерархии.Родитель);        
        Если ВерхняяГруппа.Уровень() = 0 Тогда        
            Возврат ВерхняяГруппа;        
        КонецЕсли;         
    Иначе        
        Возврат ГруппаИерархии;        
    КонецЕсли;    
    
КонецФункции

Функция ПолучитьВторойУровеньГруппы(ГруппаИерархии, ВерхняяГруппа = Неопределено) Экспорт

    Если ГруппаИерархии.Уровень() <> 1 Тогда        
        ВерхняяГруппа = ПолучитьВторойУровеньГруппы(ГруппаИерархии.Родитель);        
        Если ВерхняяГруппа.Уровень() = 1 Тогда        
            Возврат ВерхняяГруппа;        
        КонецЕсли;         
    Иначе        
        Возврат ГруппаИерархии;        
    КонецЕсли;    
    
КонецФункции


Процедура ДобавитьИзменениеВзаимодействияВМассив(МассивИзмененийВзаимодействия, Взаимодействие, Реквизит, НовоеЗначение, СтароеЗначение) Экспорт	
	МассивИзмененийВзаимодействия.Добавить(Новый Структура("Взаимодействие, Реквизит, НовоеЗначение, СтароеЗначение", Взаимодействие, Реквизит, НовоеЗначение, СтароеЗначение));	
КонецПроцедуры

Процедура ЗафиксироватьИзмененияВзаимодействия(МассивИзмененийВзаимодействия) Экспорт
	
	Для каждого Изменение Из МассивИзмененийВзаимодействия Цикл
		Попытка
			РегистрыСведений.ИзмененияВзаимодействий.ЗаписатьИзменениеВРегистр(Изменение.Взаимодействие, ТекущаяДата(), Пользователи.ТекущийПользователь(), Изменение.Реквизит, Изменение.НовоеЗначение, Изменение.СтароеЗначение);	
		Исключение
			Продолжить;
		КонецПопытки;
	КонецЦикла;
	
КонецПроцедуры

Функция ПолучитьОтветственногоИзИзмененияВзаимодействий(Взаимодействие) Экспорт

	ОтветственныйВзаимодействия = Неопределено;
	
	Набор = РегистрыСведений.ИзмененияВзаимодействий.СоздатьНаборЗаписей();
	Набор.Отбор.Взаимодействие.Установить(Взаимодействие);
	Набор.Прочитать();
	
	Если Набор.Количество() Тогда		
		ТаблицаНабор = Набор.Выгрузить();
		ТаблицаНабор.Сортировать("Период УБЫВ");		
		Для каждого Строка Из ТаблицаНабор Цикл
			Если Строка.Реквизит = "Ответственный" Тогда
				ОтветственныйВзаимодействия = Строка.СтароеЗначение; 
				Прервать;
			КонецЕсли;
		КонецЦикла;		
	КонецЕсли;
	
	Возврат ОтветственныйВзаимодействия;
	
КонецФункции

#КонецОбласти

#КонецЕсли