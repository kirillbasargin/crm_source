
#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбработчикиСобытий

Процедура ПриЗаписи(Отказ, Замещение)
	
	//EXTCODE Шумилин Сергей 08.06.2017 {{ --->
	//++ Юкаев Роман 20180201 (
	Если ЭтотОбъект.Отбор.ГруппаПользователей.Значение = Справочники.ГруппыПользователей.ВсеПользователи 
		Или ТипЗнч(ЭтотОбъект.Отбор.ГруппаПользователей.Значение) = Тип("СправочникСсылка.Пользователи") Тогда
		//Не делаем записи по пользователю или группе Все пользователи
	Иначе
		ОтзеркалироватьЗаписиПоВремени();
	КонецЕсли;
	//-- Юкаев Роман 20180201 )
	//EXTCODE Шумилин Сергей 08.06.2017 <--- }} 	
	
	Если ОбменДанными.Загрузка Тогда
		Если Не ДополнительныеСвойства.Свойство("ПропуститьОбновлениеВерсииДатЗапретаИзменения") Тогда
			ОбновитьВерсиюДатЗапретаИзмененияПриЗагрузкеДанных();
		КонецЕсли;
		Возврат;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура ОбновитьВерсиюДатЗапретаИзмененияПриЗагрузкеДанных()
	
	// Изменения в обычном режиме записи регистрируются в общем модуле ПользователиСлужебный
	// в процедуре ПослеОбновленияСоставовГруппПользователейПереопределяемый.
	
	Если ОбщегоНазначения.ПодсистемаСуществует("СтандартныеПодсистемы.ДатыЗапретаИзменения") Тогда
		МодульДатыЗапретаИзмененияСлужебный = ОбщегоНазначения.ОбщийМодуль("ДатыЗапретаИзмененияСлужебный");
		МодульДатыЗапретаИзмененияСлужебный.ОбновитьВерсиюДатЗапретаИзмененияПриЗагрузкеДанных(ЭтотОбъект);
	КонецЕсли;
	
КонецПроцедуры

//EXTCODE Шумилин Сергей 08.06.2017 {{ --->
Процедура ОтзеркалироватьЗаписиПоВремени()
	
	//++ Юкаев Роман 20180130 ( //766997
	ГруппаДляЗаписи = ГруппаВерхнегоУровня(ЭтотОбъект.Отбор.ГруппаПользователей.Значение);
	ПользовательДляЗаписи = ЭтотОбъект.Отбор.Пользователь.Значение;
	
	НаборЗаписей = РегистрыСведений.СоставыГруппПользователейИсторияИзмений.СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.ГруппаПользователей.Установить(ГруппаДляЗаписи);
	НаборЗаписей.Отбор.Пользователь.Установить(ПользовательДляЗаписи);
	НаборЗаписей.Прочитать();
	
	ЗаписейПоГруппе = НаборЗаписей.Количество();
	ИсключениеИзГруппы = ЭтотОбъект.Количество() = 0;
	
	КоличествоГрупп = ПроверитьГруппыПользователя(ПользовательДляЗаписи, ГруппаДляЗаписи);
	
	Если ИсключениеИзГруппы Или ПользовательДляЗаписи.Недействителен Тогда
		Если КоличествоГрупп > 0 Тогда
			Если ЗаписейПоГруппе > 1 Тогда
				УдалитьЛишниеЗаписи(НаборЗаписей, ГруппаДляЗаписи, ПользовательДляЗаписи, Ложь, КоличествоГрупп);
			КонецЕсли;
			Если ПользовательДляЗаписи.Недействителен Тогда
				УдалитьЛишниеЗаписи(НаборЗаписей, ГруппаДляЗаписи, ПользовательДляЗаписи, Истина, 0);
			КонецЕсли;
		Иначе
			Если ЗаписейПоГруппе = 1 Тогда
				ДобавитьЗапись(НаборЗаписей, ГруппаДляЗаписи, ПользовательДляЗаписи, Ложь);
			Иначе
				УдалитьЛишниеЗаписи(НаборЗаписей, ГруппаДляЗаписи, ПользовательДляЗаписи, Истина, КоличествоГрупп);
			КонецЕсли;
		КонецЕсли;
	Иначе
		Если КоличествоГрупп > 1 Тогда
			Если ЗаписейПоГруппе > 1 Тогда
				УдалитьЛишниеЗаписи(НаборЗаписей, ГруппаДляЗаписи, ПользовательДляЗаписи, Ложь, КоличествоГрупп);
			Иначе
				ПроверитьНаличиеНезакрытыхЗаписей(НаборЗаписей, ГруппаДляЗаписи, ПользовательДляЗаписи);
			КонецЕсли;
		Иначе
			Если ЗаписейПоГруппе > 0 Тогда
				Если ЗаписейПоГруппе > 1 Тогда
					УдалитьЛишниеЗаписи(НаборЗаписей, ГруппаДляЗаписи, ПользовательДляЗаписи, Ложь, КоличествоГрупп);
				КонецЕсли;
				ПроверитьНаличиеНезакрытыхЗаписей(НаборЗаписей, ГруппаДляЗаписи, ПользовательДляЗаписи);
			Иначе
				ДобавитьЗапись(НаборЗаписей, ГруппаДляЗаписи, ПользовательДляЗаписи, Истина);
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
	Попытка
		НаборЗаписей.Записать();
	Исключение
		ВызватьИсключение;
	КонецПопытки;
	//-- Юкаев Роман 20180130 )
	
	//ПериодЗаписи = ТекущаяДата();
	//
	////Если набор записей пустой, находим последнюю запись для определения периода
	//Если ЭтотОбъект.Количество() = 0 Тогда
	//	
	//	СтруктураОтбор = Новый Структура("ГруппаПользователей,Пользователь",
	//										ЭтотОбъект.Отбор.ГруппаПользователей.Значение,
	//										ЭтотОбъект.Отбор.Пользователь.Значение);
	//	
	//	ТаблицаСреза = РегистрыСведений.СоставыГруппПользователейИсторияИзмений.СрезПоследних(,СтруктураОтбор);
	//	Если ТаблицаСреза.Количество() > 0 Тогда
	//		ПериодЗаписи = ТаблицаСреза[0].Период;		
	//	КонецЕсли;
	//КонецЕсли;

	//ГруппаДляЗаписи 		= ЭтотОбъект.Отбор.ГруппаПользователей.Значение;
	//ПользовательДляЗаписи = ЭтотОбъект.Отбор.Пользователь.Значение;
	//
	//НаборЗаписи = РегистрыСведений.СоставыГруппПользователейИсторияИзмений.СоздатьНаборЗаписей();
	//НаборЗаписи.Отбор.ГруппаПользователей.Установить(ГруппаДляЗаписи);
	//НаборЗаписи.Отбор.Пользователь.Установить(ПользовательДляЗаписи);
	//НаборЗаписи.Отбор.Период.Установить(ПериодЗаписи);
	//
	//НаборЗаписи.Прочитать();
	//
	//Если НаборЗаписи.Количество() = 0 Тогда
	//	Запись = НаборЗаписи.Добавить();
	//Иначе
	//	Запись = НаборЗаписи[0];
	//КонецЕсли;
	//
	//Попытка
	//	Запись.ГруппаПользователей 	= ГруппаДляЗаписи;
	//	Запись.Пользователь        	= ПользовательДляЗаписи;
	//	Запись.Период        		= ПериодЗаписи;
	//	
	//	Если ЭтотОбъект.Количество() = 0 Тогда
	//		Запись.ДатаВыходаИзГруппы = ПериодЗаписи;
	//	Иначе	
	//		Запись.ДатаВключенияВГруппу = ПериодЗаписи;
	//		Запись.ДатаВыходаИзГруппы 	= '00010101';
	//	КонецЕсли;
	//	
	//	НаборЗаписи.Записать();
	//	
	//Исключение
	//	ВызватьИсключение;
	//КонецПопытки;

КонецПроцедуры
//EXTCODE Шумилин Сергей 08.06.2017 <--- }} 

//++ Юкаев Роман 20180130 ( //766997
Функция ГруппаВерхнегоУровня(Группа)
	
	Если Группа.Родитель = Справочники.ГруппыПользователей.ПустаяСсылка() Тогда
		Возврат Группа;
	Иначе
		Возврат ГруппаВерхнегоУровня(Группа.Родитель);
	КонецЕсли;
	
КонецФункции

Функция ПроверитьГруппыПользователя(Пользователь, Группа)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ГруппыПользователейСостав.Ссылка КАК Ссылка
		|ИЗ
		|	Справочник.ГруппыПользователей.Состав КАК ГруппыПользователейСостав
		|ГДЕ
		|	ГруппыПользователейСостав.Ссылка В ИЕРАРХИИ(&Группа)
		|	И ГруппыПользователейСостав.Пользователь = &Пользователь";
	
	Запрос.УстановитьПараметр("Группа", Группа);
	Запрос.УстановитьПараметр("Пользователь", Пользователь);
	
	Результат = Запрос.Выполнить();
	Если Результат.Пустой() Тогда
		Возврат 0;
	Иначе
		Выборка = Результат.Выбрать();
		Возврат Выборка.Количество();
	КонецЕсли;
	
КонецФункции

Процедура ДобавитьЗапись(Набор, Группа, Пользователь, НоваяЗапись)
	
	ТекущаяДата = ТекущаяДата();
	
	Если НоваяЗапись Тогда
		Запись = Набор.Добавить();
		Запись.Период = ТекущаяДата;
		Запись.ГруппаПользователей = Группа;
		Запись.Пользователь = Пользователь;
		Запись.ДатаВключенияВГруппу = ТекущаяДата;
	Иначе
		Запись = Набор[0];
		Запись.ДатаВыходаИзГруппы = ТекущаяДата;
	КонецЕсли;
	
КонецПроцедуры

Процедура УдалитьЛишниеЗаписи(Набор, Группа, Пользователь, ДобавитьЗавершающуюЗапись, КоличествоГрупп)
	
	МинимальнаяЗапись = Новый Структура("Период, ГруппаПользователей, Пользователь, ДатаВключенияВГруппу, ДатаВыходаИзГруппы", Дата(1,1,1), Группа, Пользователь, Дата(1,1,1), Дата(1,1,1));
	
	МассивЗаписей = Новый Массив;
	
	Для Каждого Запись Из Набор Цикл
		
		Если Запись.ГруппаПользователей = Группа И Запись.Пользователь = Пользователь 
			И ЗначениеЗаполнено(Запись.ДатаВключенияВГруппу) И ЗначениеЗаполнено(Запись.ДатаВыходаИзГруппы) Тогда
			
			МассивЗаписей.Добавить(Запись);
		Иначе
			Если МинимальнаяЗапись.Период = Дата(1,1,1) Тогда
				ЗаполнитьЗначенияСвойств(МинимальнаяЗапись, Запись);
			Иначе
				Если МинимальнаяЗапись.Период > Запись.Период Тогда
					
					ДатаВыходаИзГруппы = МинимальнаяЗапись.ДатаВыходаИзГруппы;
					
					Если МинимальнаяЗапись.ДатаВключенияВГруппу > Запись.ДатаВключенияВГруппу Тогда
						ЗаполнитьЗначенияСвойств(МинимальнаяЗапись, Запись);
						
						Если МинимальнаяЗапись.ДатаВыходаИзГруппы > ДатаВыходаИзГруппы Тогда
							МинимальнаяЗапись.ДатаВыходаИзГруппы = ДатаВыходаИзГруппы;
						КонецЕсли;
					Иначе
						Если МинимальнаяЗапись.ДатаВыходаИзГруппы < Запись.ДатаВыходаИзГруппы Тогда
							МинимальнаяЗапись.ДатаВыходаИзГруппы = Запись.ДатаВыходаИзГруппы;
						КонецЕсли;
					КонецЕсли;
				Иначе
					//Проверим даты в записи на минимальные
					Если МинимальнаяЗапись.ДатаВключенияВГруппу > Запись.ДатаВключенияВГруппу Тогда
						МинимальнаяЗапись.ДатаВключенияВГруппу = Запись.ДатаВключенияВГруппу;
					КонецЕсли;
					
					Если МинимальнаяЗапись.ДатаВыходаИзГруппы < Запись.ДатаВыходаИзГруппы Тогда
						МинимальнаяЗапись.ДатаВыходаИзГруппы = Запись.ДатаВыходаИзГруппы;
					КонецЕсли;
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
	Набор.Очистить();
	
	Если МассивЗаписей.Количество() > 0 Тогда
		Для Каждого СтрокаМассива Из МассивЗаписей Цикл
			Запись = Набор.Добавить();
			ЗаполнитьЗначенияСвойств(Запись, СтрокаМассива);
		КонецЦикла;
	КонецЕсли;
	
	Если МинимальнаяЗапись.Период <> Дата(1,1,1) Тогда
		Запись = Набор.Добавить();
		ЗаполнитьЗначенияСвойств(Запись, МинимальнаяЗапись);
		
		Запись.ГруппаПользователей  = Группа;
		Запись.Пользователь = Пользователь;
		
		Если КоличествоГрупп > 1 И ЗначениеЗаполнено(МинимальнаяЗапись.ДатаВыходаИзГруппы) Тогда
			Запись = Набор.Добавить();
			ЗаполнитьЗначенияСвойств(Запись, МинимальнаяЗапись);
			
			Запись.ГруппаПользователей  = Группа;
			Запись.Пользователь = Пользователь;
			Запись.ДатаВключенияВГруппу = МинимальнаяЗапись.ДатаВыходаИзГруппы;
			Запись.Период = МинимальнаяЗапись.ДатаВыходаИзГруппы
		КонецЕсли;
	КонецЕсли;
	
	Если ДобавитьЗавершающуюЗапись Тогда
		Запись.ДатаВыходаИзГруппы = Макс(Запись.ДатаВыходаИзГруппы, ТекущаяДата());
	КонецЕсли;
	
КонецПроцедуры

Процедура ПроверитьНаличиеНезакрытыхЗаписей(Набор, Группа, Пользователь)
	
	ДобавитьНовуюЗапись = Истина;
	
	Для Каждого Запись Из Набор Цикл
		Если Запись.ДатаВыходаИзГруппы = Дата(1,1,1) Тогда
			ДобавитьНовуюЗапись = Ложь;
			Прервать;
		КонецЕсли;
	КонецЦикла;
	
	Если ДобавитьНовуюЗапись Тогда
		ДобавитьЗапись(Набор, Группа, Пользователь, Истина)
	КонецЕсли;
	
КонецПроцедуры
//-- Юкаев Роман 20180130 )
#КонецОбласти

#КонецЕсли

