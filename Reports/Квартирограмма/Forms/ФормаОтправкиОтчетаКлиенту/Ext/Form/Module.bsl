
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	УстановитьПривилегированныйРежим(Истина);
	
	Если Параметры.Свойство("АдресТаблицыПодбора") И ЭтоАдресВременногоХранилища(Параметры.АдресТаблицыПодбора) Тогда
		ТЗ_РезультатПодбора = ПолучитьИзВременногоХранилища(Параметры.АдресТаблицыПодбора);		
		Для каждого Строка Из ТЗ_РезультатПодбора Цикл
			НоваяСтрока = РезультатПодбора.Добавить();	
			ЗаполнитьЗначенияСвойств(НоваяСтрока, Строка);
		КонецЦикла;
	КонецЕсли;
	
	Если Параметры.Свойство("КлиентыЗапроса") Тогда
		Для каждого Элемент Из Параметры.КлиентыЗапроса Цикл
			НоваяСтрока = КлиентыЗапроса.Добавить();
			НоваяСтрока.Клиент = Элемент.Значение;
			НоваяСтрока.Email = ПолучитьEmailКлиента(Элемент.Значение);			
		КонецЦикла;
	КонецЕсли;	
	
	Если Параметры.Свойство("Проект") Тогда
		Запрос = Новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	ОбъектыСтроительства.Ссылка КАК Ссылка
		|ИЗ
		|	Справочник.ОбъектыСтроительства КАК ОбъектыСтроительства
		|ГДЕ
		|	НЕ ОбъектыСтроительства.Наименование ПОДОБНО ""%служебный%""
		|	И НЕ ОбъектыСтроительства.ПометкаУдаления
		|	И ОбъектыСтроительства.Проект = &Проект";
		
		Запрос.УстановитьПараметр("Проект", Параметры.Проект);
		
		РезультатЗапроса = Запрос.Выполнить();		
		Если НЕ РезультатЗапроса.Пустой() Тогда
			ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();		
			Если ВыборкаДетальныеЗаписи.Следующий() Тогда
				ОС = ВыборкаДетальныеЗаписи.Ссылка;
				Проект = РегистрыСведений.Взаимодействия.ПолучитьВторойУровеньГруппы(ОС);
			КонецЕсли;
		Иначе
			Проект = Параметры.Проект;
		КонецЕсли;				
		Сайт = Справочники.ПараметрыПолученияЗаявокНаCallBack.НайтиПоРеквизиту("ОбъектНедвижимости", Параметры.Проект);
	КонецЕсли;	
	
КонецПроцедуры

&НаСервере
Процедура СохранитьОтчетВФайл()
	
	ТабДок = Новый ТабличныйДокумент;
	
	ТабДок.ЭкземпляровНаСтранице = 1;
	ТабДок.ПолеСверху = 10;
	ТабДок.ПолеСнизу = 10;
	ТабДок.ПолеСлева = 15;
	ТабДок.ПолеСправа = 10;
	ТабДок.ОриентацияСтраницы = ОриентацияСтраницы.Ландшафт;
	ТабДок.АвтоМасштаб = Истина;	
	
	Макет = УправлениеПечатью.МакетПечатнойФормы("Отчет.Квартирограмма.МакетОтправкиОтчетаКлиенту");
	
	Область_ПустаяСтрока = Макет.ПолучитьОбласть("ПустаяСтрока");
	Область_Подвал = Макет.ПолучитьОбласть("Подвал");
	
	Область_ДатаПроведенияРасчета = Макет.ПолучитьОбласть("ДатаПроведенияРасчета");	
	Область_ДатаПроведенияРасчета.Параметры.ДатаФормированияОтчета = Формат(ТекущаяДата(), "ДФ=dd.MM.yyyy");
	ТабДок.Вывести(Область_ДатаПроведенияРасчета); 
	
	ТабДок.Вывести(Область_ПустаяСтрока); 
	
	Область_Шапка = Макет.ПолучитьОбласть("Шапка");
	ТабДок.Вывести(Область_Шапка); 
		
	Область_СтрокаПодбора = Макет.ПолучитьОбласть("СтрокаПодбора");
	
	Для каждого Строка Из РезультатПодбора Цикл
		ЗаполнитьЗначенияСвойств(Область_СтрокаПодбора.Параметры, Строка);
		Область = ТабДок.Вывести(Область_СтрокаПодбора);
		Область.ЦветФона = Строка.ЦветФона;
	КонецЦикла;
	
	//МассивОбластей = Новый Массив; 
	//МассивОбластей.Добавить(Область_ПустаяСтрока);
	//МассивОбластей.Добавить(Область_Подвал);
	//
	//Пока ТабДок.ПроверитьВывод(МассивОбластей) Цикл		
	//	ТабДок.Вывести(Область_ПустаяСтрока);   
	//КонецЦикла;		
	//
	//ТабДок.Вывести(Область_Подвал);
	
	//ТабДок.Вывести(Область_ПустаяСтрока);	
	//
	//Область_Подвал = Макет.ПолучитьОбласть("Подвал");
	//ТабДок.Вывести(Область_Подвал); 	
	
	ТабДок.НижнийКолонтитул.НачальнаяСтраница = 1;
	ТабДок.НижнийКолонтитул.ВертикальноеПоложение = ВертикальноеПоложение.Центр;	
	ТабДок.НижнийКолонтитул.ТекстСлева = "Получить более подробную информацию, а также ознакомиться с условиями предоставления максимальной скидки можно на промо-сайте объекта, по телефону +7(495) 745-55-33 или у консультантов в офисе продаж." 
		+ Символы.ПС + "Цены действительны на дату формирования каталога предложений!";			
	ТабДок.НижнийКолонтитул.Выводить = Истина;
	ТабДок.НижнийКолонтитул.Шрифт = Новый Шрифт(, 9);
	
	ТабДок.Защита = Истина;
		
	ВремФайл = ПолучитьИмяВременногоФайла("pdf");
	ТабДок.Записать(ВремФайл, ТипФайлаТабличногоДокумента.PDF);
	
	ДвоичныеДанные = Новый ДвоичныеДанные(ВремФайл);
	
	АдресФайлаОтчета = ПоместитьВоВременноеХранилище(ДвоичныеДанные, ЭтаФорма.УникальныйИдентификатор);		

КонецПроцедуры

&НаКлиенте
Процедура Отправить(Команда)
	
	СохранитьОтчетВФайл();
	
	Если ЭтоАдресВременногоХранилища(АдресФайлаОтчета) Тогда
		ВремФайл = КаталогВременныхФайлов() + "/" + "Подобранные варианты.pdf"; //ПолучитьИмяВременногоФайла("pdf");
		Описание = Новый ОписаниеПередаваемогоФайла(ВремФайл, АдресФайлаОтчета);
		МассивОписаний = Новый Массив;
		МассивОписаний.Добавить(Описание);
		НачатьПолучениеФайлов(Новый ОписаниеОповещения("ПриложитьФайлЗавершение", ЭтотОбъект), МассивОписаний, , Ложь);		
		//Если ПолучитьФайлы(МассивОписаний, , , Ложь) Тогда		
		//	ОтправитьПоПочте(ВремФайл);
		//КонецЕсли;
	КонецЕсли;		
	
	Закрыть();
	
КонецПроцедуры

&НаКлиенте
Процедура ПриложитьФайлЗавершение(ПолученныеФайлы, ДополнительныеПараметры) Экспорт 
    
    Если ПолученныеФайлы = Неопределено
        	ИЛИ Не (ТипЗнч(ПолученныеФайлы) = Тип("Массив")
            	И ПолученныеФайлы.Количество()) Тогда
        Возврат;
    КонецЕсли;
	
	ОтправитьПоПочте(ПолученныеФайлы[0].Имя);
    
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьEmailКлиента(Клиент)
	Возврат УправлениеТелефониейСервер.ПолучитьКонтактныеДанныеКлиента(Клиент).EmailКлиента;	
КонецФункции

&НаКлиенте
Процедура ОтправитьПоПочте(ПутьФайлаОтчета)
	
	Для каждого КлиентЗапроса Из КлиентыЗапроса Цикл
		Если НЕ КлиентЗапроса.Отправлять Тогда
			Продолжить;
		КонецЕсли;
		
		МассивПолучателей = Новый Массив;
		
		Если СтрНайти(КлиентЗапроса.Email, ";") Тогда
			МассивАдресов = СтрРазделить(КлиентЗапроса.Email, ";"); //СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок(КлиентЗапроса.Email, ";");
			Для каждого Адрес Из МассивАдресов Цикл
				МассивПолучателей.Добавить(Адрес);		
			КонецЦикла;
		Иначе
			МассивПолучателей.Добавить(КлиентЗапроса.Email);
		КонецЕсли;
		
		Попытка
			Outlook = Новый COMОбъект("Outlook.Application");
		Исключение
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Не удалось создать объект Outlook.Application");
			Возврат;
		КонецПопытки;
		
		//Accounts = Outlook.Session.Accounts;
		//ИспользуемыеАккаунты = Новый СписокЗначений;
		//Для каждого Account Из Accounts Цикл
		//	ИспользуемыеАккаунты.Добавить(Account.DisplayName);
		//КонецЦикла;	
		
		Письмо = Outlook.CreateItem(0);
		Письмо.Importance = 2;                                                    
		Письмо.Subject = "~~" + "Абсолют Недвижимость"; 
		
		//Письмо.Body = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку("%1, добрый день."
		//				+ Символы.ПС + "Благодарим за обращение в нашу компанию"		
		//				+ Символы.ПС +	"В продолжение нашего разговора по ЖК «%2», направляю планировочные решения интересующих Вас квартир. "
		//				+ Символы.ПС + "С остальными вариантами Вы можете ознакомиться на официальном сайте проекта: %3."
		//				+ Символы.ПС + "Как и договаривались, свяжемся с Вами для уточнения решения."
		//				+ Символы.ПС + "По всем вопросам можете обращаться по номеру телефона: 8 (495) 745-55-33."
		//				+ Символы.ПС + Символы.ПС
		//				+ "С уважением, Абсолют Недвижимость"
		//				+ Символы.ПС + "Адрес: Фрунзенская набережная, д.54"
		//				+ Символы.ПС + "Тел.:8 (495) 745-55-33"
		//				+ Символы.ПС + "Сайт: www.absrealty.ru", Строка(КлиентЗапроса.Клиент), Проект, Сайт);
												
		//Письмо.HTMLBody = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку("
		//|<p>%1, добрый день.<br>
		//|Благодарим за обращение в нашу компанию!</p>
		//|<p>В продолжение нашего разговора по ЖК «%2», направляю планировочные решения интересующих Вас квартир. <br>
		//|С остальными вариантами Вы можете ознакомиться на официальном сайте проекта: <a>%3</a>.<br>
		//|Как и договаривались, свяжемся с Вами для уточнения решения.<br>
		//|По всем вопросам можете обращаться по номеру телефона: 8 (495) 745-55-33.</p>
		//|<br><p>---</p>
		//|<p>С уважением, Абсолют Недвижимость<br>
		//|Адрес: Фрунзенская набережная, д.54<br>
		//|Тел.:8 (495) 745-55-33<br>
		//|Сайт: <a>www.absrealty.ru</a></p><br>
		//|<br>",
		//Строка(КлиентЗапроса.Клиент), Проект, Сайт); 
		
		Письмо.HTMLBody = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку("
		|<p>%1, добрый день.<br>
		|Благодарим за обращение в нашу компанию!</p>
		|<p>В продолжение нашего разговора направляю планировочные решения интересующих Вас квартир. <br>
		|С остальными вариантами Вы можете ознакомиться на официальном сайте: <a>%2</a>.<br>
		|Как и договаривались, свяжемся с Вами для уточнения решения.<br>
		|По всем вопросам можете обращаться по номеру телефона: 8 (495) 745-55-33.</p>
		|<br><p>---</p>
		|<p>С уважением, Абсолют Недвижимость<br>
		|Адрес: Фрунзенская набережная, д.54<br>
		|Тел.:8 (495) 745-55-33<br>
		|Сайт: <a>www.absrealty.ru</a></p><br>
		|<br>",
		Строка(КлиентЗапроса.Клиент), "www.absrealty.ru"); 
		
		Для каждого ПочтаПолучателяЗаявок Из МассивПолучателей Цикл
			Письмо.Recipients.Add(ПочтаПолучателяЗаявок);
		КонецЦикла;
		
		//Письмо.To = КонтекстПисьма.ПочтаПолучателяЗаявок;
		//Письмо.Cc = КонтекстПисьма.АдресДляРассылки_common;
		//Письмо.SentOnBehalfOfName = КонтекстПисьма.АдресЭлектроннойПочты;//КонтекстПисьма.АдресДляРассылки;	
		//Письмо.SenderEmailAddress = ?	
		//Письмо.SendUsingAccount = ? 
		
		Письмо.Attachments.Add(ПутьФайлаОтчета);
		
		Письмо.Display();
		
	КонецЦикла;
			
КонецПроцедуры

&НаСервереБезКонтекста
Процедура КлиентыЗапросаEmailПриИзмененииНаСервере(Клиент, Email)

	EmailКлиента = ПолучитьEmailКлиента(Клиент);
	
	Если EmailКлиента = Email Тогда
		Возврат;		
	КонецЕсли;
	
	КлиентОбъект = Клиент.ПолучитьОбъект();
	Если НЕ КлиентОбъект = Неопределено Тогда		
		СтруктураПоиска = Новый Структура("Вид, Тип", Справочники.ВидыКонтактнойИнформации.EmailКлиента, Перечисления.ТипыКонтактнойИнформации.АдресЭлектроннойПочты);
		НайденныеСтроки = КлиентОбъект.КонтактнаяИнформация.НайтиСтроки(Новый Структура("Вид, Тип", Справочники.ВидыКонтактнойИнформации.EmailКлиента, Перечисления.ТипыКонтактнойИнформации.АдресЭлектроннойПочты));
		Если НайденныеСтроки.Количество() Тогда
			Для каждого НайденнаяСтрока Из НайденныеСтроки Цикл
				НайденнаяСтрока.АдресЭП = Email;
				НайденнаяСтрока.Представление = Email;			
				Позиция = СтрНайти(НайденнаяСтрока.АдресЭП, "@");
				Если Позиция <> 0 Тогда
					НайденнаяСтрока.ДоменноеИмяСервера = Сред(НайденнаяСтрока.АдресЭП, Позиция + 1);
				КонецЕсли;				
				КонтактнаяИнформацияXDTO = УправлениеКонтактнойИнформациейСлужебный.КонтактнаяИнформацияXDTOПоПредставлению(НайденнаяСтрока.Представление, НайденнаяСтрока.Вид);
				НайденнаяСтрока.ЗначенияПолей = УправлениеКонтактнойИнформациейСлужебный.КонтактнаяИнформацияXDTOВXML(КонтактнаяИнформацияXDTO);
			КонецЦикла;	
		Иначе
			НоваяСтрока = КлиентОбъект.КонтактнаяИнформация.Добавить();
			НоваяСтрока.Вид = Справочники.ВидыКонтактнойИнформации.EmailКлиента;
			НоваяСтрока.Тип = Перечисления.ТипыКонтактнойИнформации.АдресЭлектроннойПочты;
			НоваяСтрока.АдресЭП = Email;
			НоваяСтрока.Представление = Email;
			Позиция = СтрНайти(НоваяСтрока.АдресЭП, "@");
			Если Позиция <> 0 Тогда
				НоваяСтрока.ДоменноеИмяСервера = Сред(НоваяСтрока.АдресЭП, Позиция + 1);
			КонецЕсли;	
			КонтактнаяИнформацияXDTO = УправлениеКонтактнойИнформациейСлужебный.КонтактнаяИнформацияXDTOПоПредставлению(НоваяСтрока.Представление, НоваяСтрока.Вид);
			НоваяСтрока.ЗначенияПолей = УправлениеКонтактнойИнформациейСлужебный.КонтактнаяИнформацияXDTOВXML(КонтактнаяИнформацияXDTO);
		КонецЕсли;	
		КлиентОбъект.Записать();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура КлиентыЗапросаEmailПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.КлиентыЗапроса.ТекущиеДанные;
	Если НЕ ТекущиеДанные = Неопределено Тогда
		КлиентыЗапросаEmailПриИзмененииНаСервере(ТекущиеДанные.Клиент, ТекущиеДанные.Email);
	КонецЕсли;	
		
КонецПроцедуры
