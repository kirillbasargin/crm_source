
Функция GetData(СтрокаСоединенияИнформационнойБазы)
	
	ЗаписатьВЖурналРегистрации("*** Начало процесса обмена данными с УТ.");
	
	СтруктураДанных = Новый  Структура;
	СтруктураДанных.Вставить("НомерСообщения", 0);
	СтруктураДанных.Вставить("ДанныеОбмена", "");
	СтруктураДанных.Вставить("ТекстОшибки", "");
	
	Если Не ЗначениеЗаполнено(СтрокаСоединенияИнформационнойБазы) Тогда
		СтруктураДанных.ТекстОшибки = "Не указана строка соединения информационной базы.";
		Возврат СериализаторXDTO.ЗаписатьXDTO(СтруктураДанных);
	КонецЕсли;
	
	// Блокировка запуска из копии...
	УзелОбмена = ПланыОбмена.ОбменУТNewCRM.НайтиПоНаименованию(ВРег(СтрокаСоединенияИнформационнойБазы), Истина);
	Если Не ЗначениеЗаполнено(УзелОбмена) Тогда
		СтруктураДанных.ТекстОшибки = "Не найден узел обмена: " + ВРег(СтрокаСоединенияИнформационнойБазы);
		Возврат СериализаторXDTO.ЗаписатьXDTO(СтруктураДанных);
	КонецЕсли;
	
	ИмяВременногоКаталога = ПолучитьИмяВременногоФайла();
	СоздатьКаталог(ИмяВременногоКаталога);
	ИмяФайлаПравил 		= ИмяВременногоКаталога + "\" + "ПравилаОбменаДанными.xml";
	ИмяФайлаВыгрузки 	= ИмяВременногоКаталога + "\" + "Message_CRM_UT.xml";
		
	// Получаем ПравилаОбмена...
	ПолучитьПравилаОбменаДанными(ИмяФайлаПравил);
	
	Попытка
		// Выгрузка данных...	
		ОбработкаВыгрузки = Обработки.УниверсальныйОбменДаннымиXML.Создать();
		ОбработкаВыгрузки.РежимОбмена = "Выгрузка";
		ОбработкаВыгрузки.ИмяФайлаОбмена = ИмяФайлаВыгрузки;
		ОбработкаВыгрузки.ИмяФайлаПравилОбмена = ИмяФайлаПравил;
		ОбработкаВыгрузки.ЗагрузитьПравилаОбмена();
		
		// Устанавливаем узел обмена...
		УстановитьУзелОбменаУСтрокДерева(ОбработкаВыгрузки.ТаблицаПравилВыгрузки.Строки, УзелОбмена);
		
		ОбработкаВыгрузки.ВыполнитьВыгрузку();
		
		ФайлВыгрузки = Новый Файл(ИмяФайлаВыгрузки);
		ДанныеОбмена 	= "";
		Если ФайлВыгрузки.Существует() Тогда
			ТекстовыйФайл = Новый ТекстовыйДокумент;
			ТекстовыйФайл.Прочитать(ИмяФайлаВыгрузки);
			ДанныеОбмена = ТекстовыйФайл.ПолучитьТекст();
			
			ЗаписатьВЖурналРегистрации("*** Выполнен обмен данными с УТ.");
		КонецЕсли;
	Исключение
		ЗаписатьВЖурналРегистрации("*** Ошибка обмена с УТ по причине:" + ОписаниеОшибки(), Истина);
		СтруктураДанных.ТекстОшибки = "Ошибка обмена с УТ по причине: " + ОписаниеОшибки();
		Возврат СтруктураДанных;
	КонецПопытки;
		
	УдалитьФайлы(ИмяВременногоКаталога);
	
	СтруктураДанных.НомерСообщения = УзелОбмена.НомерОтправленного;
	СтруктураДанных.ДанныеОбмена = ДанныеОбмена;
	Возврат СериализаторXDTO.ЗаписатьXDTO(СтруктураДанных);
	
КонецФункции

Функция ClearData(NumberMessege, СтрокаСоединенияИнформационнойБазы)
	
	Если Не ЗначениеЗаполнено(СтрокаСоединенияИнформационнойБазы) Тогда
		Возврат "";
	КонецЕсли;
	
	// Блокировка запуска из копии...
	УзелОбмена = ПланыОбмена.ОбменУТNewCRM.НайтиПоНаименованию(ВРег(СтрокаСоединенияИнформационнойБазы), Истина);
	Если Не ЗначениеЗаполнено(УзелОбмена) Тогда
		Возврат "";
	КонецЕсли;
	
	ПланыОбмена.УдалитьРегистрациюИзменений(УзелОбмена, NumberMessege);
	
	Возврат "";
	
КонецФункции

Функция Upload(Data, NumberMessageLoad)
	
	ЗаписатьВЖурналРегистрации("*** Начало процесса обмена данными ИЗ УТ.");
		
	// Получение данных UT...	
	ДанныеОбмена		= Data;
	НомерСообщения		= NumberMessageLoad;
	NumberMessageUpload = "";
		
	Если Не ЗначениеЗаполнено(ДанныеОбмена) Тогда
		ЗаписатьВЖурналРегистрации("*** Нет данных для обмена ИЗ УТ.");
		Возврат "";
	КонецЕсли;
	
	ИмяВременногоКаталога = ПолучитьИмяВременногоФайла();
	СоздатьКаталог(ИмяВременногоКаталога);
	ИмяФайлаДанных = ИмяВременногоКаталога + "\" + "ДанныеДляЗагрузки.xml";
	
	ТекстовыйФайл = Новый ТекстовыйДокумент;
	ТекстовыйФайл.УстановитьТекст(ДанныеОбмена);
	ТекстовыйФайл.Записать(ИмяФайлаДанных);
	ЗаписатьВЖурналРегистрации(ИмяФайлаДанных);
	
	Попытка
		// Загрузка данных...
		ОбработкаЗагрузки = Обработки.УниверсальныйОбменДаннымиXML.Создать();
		ОбработкаЗагрузки.РежимОбмена = "Загрузка";
		ОбработкаЗагрузки.ИмяФайлаОбмена = ИмяФайлаДанных;
		ОбработкаЗагрузки.ВыполнитьЗагрузку();
		//Очистка регистрации...
		Если ОбработкаЗагрузки.ФлагОшибки Тогда
			ЗаписатьВЖурналРегистрации("*** Ошибка загрузки данных ИЗ УТ. Регистрация изменений очищена в УТ не будет" + Символы.ПС + ОписаниеОшибки(), Истина);
		Иначе 
			NumberMessageUpload = НомерСообщения;
			ЗаписатьВЖурналРегистрации("*** Выполнена загрузка из УТ.");
		КонецЕсли;
	Исключение
		ЗаписатьВЖурналРегистрации("*** Ошибка обмена из УТ по причине: " + ОписаниеОшибки(), Истина);
	КонецПопытки;

	УдалитьФайлы(ИмяВременногоКаталога);
	
	Возврат NumberMessageUpload;
	
КонецФункции

// ДОПОЛНИТЕЛЬНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

Процедура ПолучитьПравилаОбменаДанными(ИмяФайлаПравил)
	
	 Запрос = Новый Запрос(
	 "ВЫБРАТЬ
	 |	ПравилаДляОбменаДанными.ПравилаXML КАК Правила
	 |ИЗ
	 |	РегистрСведений.ПравилаДляОбменаДанными КАК ПравилаДляОбменаДанными
	 |ГДЕ
	 |	ПравилаДляОбменаДанными.ИмяПланаОбмена = &ИмяПланаОбмена
	 |	И ПравилаДляОбменаДанными.ВидПравил = &ВидПравил");
	 Запрос.УстановитьПараметр("ИмяПланаОбмена", "ОбменУТNewCRM");
	 Запрос.УстановитьПараметр("ВидПравил", Перечисления.ВидыПравилДляОбменаДанными.ПравилаКонвертацииОбъектов);
	 
	 Результат = Запрос.Выполнить();
	 Выборка = Результат.Выбрать();
	 
	 Если Выборка.Следующий() Тогда
		Выборка.Правила.Получить().Записать(ИмяФайлаПравил);
	 КонецЕсли;

КонецПроцедуры

Процедура ЗаписатьВЖурналРегистрации(Комментарий, Ошибка = Ложь)

	Если Ошибка Тогда
		Уровень = УровеньЖурналаРегистрации.Ошибка;
	Иначе
		Уровень = УровеньЖурналаРегистрации.Информация;
	КонецЕсли;
	
	ЗаписьЖурналаРегистрации("Обмен данными.ОбменУТNewCRM.Узел UT.Выгрузка данных", Уровень, Метаданные.ПланыОбмена.ОбменУТNewCRM, , Комментарий);

КонецПроцедуры

Процедура УстановитьУзелОбменаУСтрокДерева(Дерево, УзелОбмена)
	
	Для Каждого Строка Из Дерево Цикл
		
		Если Строка.ЭтоГруппа Тогда
			
			УстановитьУзелОбменаУСтрокДерева(Строка.Строки, УзелОбмена);
			
		Иначе
			
			Строка.СсылкаНаУзелОбмена = УзелОбмена;
			
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры




